&Вместо("ВерсияИБ")
// Получить версию конфигурации или родительской конфигурации (библиотеки),
// которая хранится в информационной базе.
//
// Параметры:
//  ИдентификаторБиблиотеки   - Строка - имя конфигурации или идентификатор библиотеки.
//  ПолучитьВерсиюОбщихДанных - Булево - если указать Истина, то при работе в модели сервиса будет 
//                                       возвращена версия в общих данных.
//
// Возвращаемое значение:
//   Строка   - версия.
//
// Пример использования:
//   ВерсияКонфигурацииИБ = ВерсияИБ(Метаданные.Имя);
//
Функция АСЦ_ВерсияИБ(Знач ИдентификаторБиблиотеки, Знач ПолучитьВерсиюОбщихДанных = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	СтандартнаяОбработка = Истина;
	Результат = "";
	//+++Хижинков А.В. 22.12.2017 добавил И Константы.ИспользоватьРазделениеПоОбластямДанных.Получить() (
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаВМоделиСервиса.ОбновлениеВерсииИБВМоделиСервиса") И Константы.ИспользоватьРазделениеПоОбластямДанных.Получить() Тогда
	//+++)Хижинков А.В. 22.12.2017 добавил И Константы.ИспользоватьРазделениеПоОбластямДанных.Получить() (	
		МодульОбновлениеИнформационнойБазыСлужебныйВМоделиСервиса = ОбщегоНазначения.ОбщийМодуль("ОбновлениеИнформационнойБазыСлужебныйВМоделиСервиса");
		МодульОбновлениеИнформационнойБазыСлужебныйВМоделиСервиса.ПриОпределенииВерсииИБ(ИдентификаторБиблиотеки, ПолучитьВерсиюОбщихДанных,
			СтандартнаяОбработка, Результат);
		
	КонецЕсли;
	
	Если СтандартнаяОбработка Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВерсииПодсистем.Версия
		|ИЗ
		|	РегистрСведений.ВерсииПодсистем КАК ВерсииПодсистем
		|ГДЕ
		|	ВерсииПодсистем.ИмяПодсистемы = &ИмяПодсистемы";
		
		Запрос.УстановитьПараметр("ИмяПодсистемы", ИдентификаторБиблиотеки);
		ТаблицаЗначений = Запрос.Выполнить().Выгрузить();
		Результат = "";
		Если ТаблицаЗначений.Количество() > 0 Тогда
			Результат = СокрЛП(ТаблицаЗначений[0].Версия);
		КонецЕсли;
		
		Если ПустаяСтрока(Результат) Тогда
			
			// Поддержка обновления с БСП 2.1.2.
			ТекстЗапроса =
				"ВЫБРАТЬ
				|	УдалитьВерсииПодсистем.Версия
				|ИЗ
				|	РегистрСведений.УдалитьВерсииПодсистем КАК УдалитьВерсииПодсистем
				|ГДЕ
				|	УдалитьВерсииПодсистем.ИмяПодсистемы = &ИмяПодсистемы
				|	И УдалитьВерсииПодсистем.ОбластьДанных = &ОбластьДанных";
			Запрос = Новый Запрос(ТекстЗапроса);
			Запрос.УстановитьПараметр("ИмяПодсистемы", ИдентификаторБиблиотеки);
			Если ОбщегоНазначения.РазделениеВключено() Тогда
				Запрос.УстановитьПараметр("ОбластьДанных", -1);
			Иначе
				Запрос.УстановитьПараметр("ОбластьДанных", 0);
			КонецЕсли;
			ТаблицаЗначений = Запрос.Выполнить().Выгрузить();
			Если ТаблицаЗначений.Количество() > 0 Тогда
				Результат = СокрЛП(ТаблицаЗначений[0].Версия);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ?(ПустаяСтрока(Результат), "0.0.0.0", Результат);
	
КонецФункции
