#Область ОписаниеОбработки

Функция СведенияОВнешнейОбработке() Экспорт

	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.1.3.1");
	
	// Запуск через фоновое не работает в режиме разрешений
	// Каталог не обнаружен 'e1cib\tempstorage\dee284a6-d234-4482-b97c-3ab694a1d1dd'
	//ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.2.2.1");
	//
	//Разрешение = РаботаВБезопасномРежиме.РазрешениеНаИспользованиеИнтернетРесурса("http://hlsapp3.ascgroup.local");
	//ПараметрыРегистрации.Разрешения.Добавить(Разрешение);
	
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка();
	ПараметрыРегистрации.Версия = Метаданные().Комментарий;
	ПараметрыРегистрации.БезопасныйРежим = Истина;
	ПараметрыРегистрации.Информация = "Загрузка платежей из РИС";
	
	НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
	НоваяКоманда.Представление = Метаданные().Представление() + " - Открыть форму";
	НоваяКоманда.Идентификатор = Метаданные().Имя + "Форма";
	НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	НоваяКоманда.ПоказыватьОповещение = Ложь;
	
	НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
	НоваяКоманда.Представление = "Загрузить платежи из РИС";
	НоваяКоманда.Идентификатор = "ЗагрузитПлатежи";
	НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
	НоваяКоманда.ПоказыватьОповещение = Ложь;

	Возврат ПараметрыРегистрации;

КонецФункции

Процедура ВыполнитьКоманду(ИдентификаторКоманды, ПараметрыКоманды = Неопределено) Экспорт 
	
	Параметры = Новый Структура;
	
	Параметры.Вставить("ДатаКон",     ТекущаяДата());
	Параметры.Вставить("ДатаНач",     НачалоДня(ТекущаяДата() - 86400));
	Параметры.Вставить("Организация", Неопределено);
	Параметры.Вставить("ПерезаполнятьДокументы",   Ложь);
	Параметры.Вставить("ПерезаполнятьДоговоры",    Ложь);
	Параметры.Вставить("ВыводитьСообщения",        Ложь);
	Параметры.Вставить("ЗагружатьДокументыОплаты", Истина);
	//ЗаписьЖурналаРегистрации("Загрузка отчета UNICUS",
	//	УровеньЖурналаРегистрации.Предупреждение,,, "Параметры: " + вСтроку(ПараметрыКоманды));
	
	Если ИдентификаторКоманды = "ЗагрузитПлатежи" Тогда
		ПолучитьДокументы(Параметры);
		
	КонецЕсли;	
	
КонецПроцедуры	

#КонецОбласти

Процедура ПолучитьДокументы(Параметры, АдресРезультата = Неопределено) Экспорт
	
	База    = Параметры.База;
	ДатаНач = Параметры.ДатаНач;
	ДатаКон = Параметры.ДатаКон;
	
	WSПрокси = УправлениеСоединениямиВИБУХ.ПолучитьСоединение(База, "");
	Если WSПрокси = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ПакетXDTO = WSПрокси.ФабрикаXDTO.Пакеты.Получить(СокрЛП(База.URIПространстваИмен));               
	
	ИмяБазы = "АСЦ";
	ПолученныеВыписки = Неопределено;
	ТаблицаДокументов = Неопределено;
	ТекстОшибки = "";
	
	Ответ = WSПрокси.InvoiceGet(" ",
		ИмяБазы,
		ДатаНач,
		ДатаКон,
		Истина,
		Неопределено,
		Неопределено,
		ТаблицаДокументов,
		ТекстОшибки,
		ПолученныеВыписки);
		
	Если ТаблицаДокументов <> Неопределено Тогда
		Возврат;
	КонецЕсли;		
		
КонецПроцедуры
