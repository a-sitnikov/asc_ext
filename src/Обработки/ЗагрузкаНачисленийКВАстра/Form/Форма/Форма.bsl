#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ДополнительнаяОбработкаСсылка", ДополнительнаяОбработкаСсылка);
	
	ВыполнятьвФоне = Истина;
	База = Справочники.ВнешниеИнформационныеБазы.НайтиПоНаименованию("Юникус");
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаМетаданные = ОбработкаОбъект.Метаданные();
	
	АвтоЗаголовок = Ложь;
	Заголовок     = ОбработкаМетаданные.Представление() + ", версия: " + ОбработкаМетаданные.Комментарий;
	
	ИмяТаблицы    = "unicusweb.v_asc_act";
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Элементы.Индикатор.Видимость = ВыполнятьвФоне;
	УстановитьТекстГруппыОтлдадки(ЭтаФорма);
	УстановитьТекстГруппыОтбора(ЭтаФорма);
	
	УстановитьВидимость(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекстГруппыОтбора(ЭтаФорма)
	
	МассивСтрок = Новый Массив;
	Если ЭтаФорма.ОтборОрганизацияИспользование Тогда
		МассивСтрок.Добавить("организация: " + ЭтаФорма.ОтборОрганизация);
	КонецЕсли;	
	
	Если ЭтаФорма.ОтборДЦИспользование Тогда
		МассивСтрок.Добавить("ДЦ: " + ЭтаФорма.ОтборДЦ);
	КонецЕсли;	
	
	ЭтаФорма.ТекстГруппыОтбора = СтрСоединить(МассивСтрок, ", ");
	
КонецПроцедуры	

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекстГруппыОтлдадки(ЭтаФорма)
	
	МассивСтрок = Новый Массив;
	Если ЭтаФорма.Тест_КоличествоСтрокИспользование
		И ЗначениеЗаполнено(ЭтаФорма.Тест_КоличествоСтрок) Тогда
		МассивСтрок.Добавить("колво строк: " + ЭтаФорма.Тест_КоличествоСтрок);
	КонецЕсли;	
	
	Если ЭтаФорма.ПерезаполнятьДокументы Тогда
		МассивСтрок.Добавить("перезаполнять документы");
	КонецЕсли;	
	
	Если ЭтаФорма.ПерезаполнятьДоговоры Тогда
		МассивСтрок.Добавить("перезаполнять договоры");
	КонецЕсли;	
	
	ЭтаФорма.ТекстГруппыОтладки = СтрСоединить(МассивСтрок, ", ");
	
КонецПроцедуры	

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимость(ЭтаФорма)
	
	
КонецПроцедуры	

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура Тест_КоличествоСтрокИспользованиеПриИзменении(Элемент)
	
	УстановитьТекстГруппыОтлдадки(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КолвоСтрокПриИзменении(Элемент)
	
	Тест_КоличествоСтрокИспользование = Истина;
	УстановитьТекстГруппыОтлдадки(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияИспользованиеПриИзменении(Элемент)
	
	УстановитьТекстГруппыОтбора(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	
	ОтборОрганизацияИспользование = Истина;
	УстановитьТекстГруппыОтбора(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборДЦИспользованиеПриИзменении(Элемент)
	
	УстановитьТекстГруппыОтбора(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборДЦПриИзменении(Элемент)
	
	ОтборДЦИспользование = Истина;
	УстановитьТекстГруппыОтбора(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнятьДокументыПриИзменении(Элемент)
	
	УстановитьТекстГруппыОтлдадки(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнятьДоговорыПриИзменении(Элемент)
	
	УстановитьТекстГруппыОтлдадки(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ФоновоеВыполнение

&НаКлиенте
Процедура ПрогрессВыполнения(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.Статус = "Выполняется" 
		ИЛИ Результат.Статус = "Выполнено" Тогда
		
		РезультатЗадания = ПрочитатьПрогрессИСообщения(Результат.ИдентификаторЗадания);
		Если РезультатЗадания.Прогресс <> Неопределено Тогда
			Индикатор = РезультатЗадания.Прогресс.Процент;
			Текст     = РезультатЗадания.Прогресс.Текст;
		КонецЕсли;
		
		Если РезультатЗадания.Сообщения <> Неопределено Тогда
			Для Каждого Сообщение Из РезультатЗадания.Сообщения Цикл
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Сообщение.Текст, Сообщение.КлючДанных, Сообщение.Поле, Сообщение.ПутьКДанным);
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПрочитатьПрогрессИСообщения(ИдентификаторЗадания)
	Возврат ДлительныеОперации.ОперацияВыполнена(ИдентификаторЗадания, Истина, Истина, Истина);
КонецФункции

&НаКлиенте
Процедура ПослеФоновойОбработкиДанных(Задание, ДополнительныеПараметры) Экспорт
	
	Если Задание = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Если Задание.Статус = "Ошибка" Тогда
		
		ТекстОшибки = Задание.КраткоеПредставлениеОшибки;
		
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		
	ИначеЕсли Задание.Статус = "Выполнено" Тогда
		
		РезультатЗадания = ПрочитатьПрогрессИСообщения(ИдентификаторЗадания);
		Если РезультатЗадания.Сообщения <> Неопределено Тогда
			
			Для Каждого Сообщение Из РезультатЗадания.Сообщения Цикл
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Сообщение.Текст, Сообщение.КлючДанных, Сообщение.Поле, Сообщение.ПутьКДанным);
			КонецЦикла;
			
		КонецЕсли;
		
		ЗавершениеЗагрузки(Задание.АдресРезультата);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗавершениеЗагрузки(АдресРезультата)
	
	Текст = "Обработка завершена";
	
КонецПроцедуры

#КонецОбласти

#Область Отчеты

&НаКлиенте
Процедура ЗагрузитьДокументы(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьДокументыОтвет", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, "Загрузить документы?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДокументыОтвет(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	
	ОповещениеОПрогрессеВыполнения = Новый ОписаниеОповещения("ПрогрессВыполнения", ЭтотОбъект);
	Задание = ЗагрузитьДокументыСервер();
	
	Если Задание <> Неопределено Тогда
		
		НастройкиОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		НастройкиОжидания.ВыводитьОкноОжидания = Ложь;
		НастройкиОжидания.ПолучатьРезультат    = Истина;
		НастройкиОжидания.ВыводитьСообщения    = Ложь;
		НастройкиОжидания.Интервал = 1;
		НастройкиОжидания.ОповещениеОПрогрессеВыполнения  = ОповещениеОПрогрессеВыполнения;
		НастройкиОжидания.ОповещениеПользователя.Показать = Ложь;
		
		Обработчик = Новый ОписаниеОповещения("ПослеФоновойОбработкиДанных", ЭтотОбъект);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(Задание, Обработчик, НастройкиОжидания);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗагрузитьДокументыСервер()
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ДатаНач",            Период.ДатаНачала);
	СтруктураПараметров.Вставить("ДатаКон",            Период.ДатаОкончания);
	СтруктураПараметров.Вставить("База",               База);
	СтруктураПараметров.Вставить("ПерезаполнятьДокументы", ПерезаполнятьДокументы);
	СтруктураПараметров.Вставить("ОтложенноеПроведение",   ОтложенноеПроведение);
	СтруктураПараметров.Вставить("ВыводитьСообщения",      ВыводитьСообщения);
	
	Если ОтборОрганизацияИспользование Тогда
		СтруктураПараметров.Вставить("ОтборОрганизация", ОтборОрганизация);
	КонецЕсли;	
	
	Если ОтборДЦИспользование Тогда
		СтруктураПараметров.Вставить("ОтборДЦ", ОтборДЦ);
	КонецЕсли;	
	
	Если Тест_КоличествоСтрокИспользование Тогда
		СтруктураПараметров.Вставить("Тест_КоличествоСтрок", Тест_КоличествоСтрок);
	КонецЕсли;
	
	СтруктураПараметров.Вставить("Тест_НеСоздаватьСвязныеДокументы", Тест_НеСоздаватьСвязныеДокументы);
	СтруктураПараметров.Вставить("ИмяТаблицы", ИмяТаблицы);
	
	СтруктураПараметров.Вставить("ИдентификаторФормы", ЭтаФорма.УникальныйИдентификатор);
	СтруктураПараметров.Вставить("ИмяФормы",           ЭтаФорма.ИмяФормы);
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	Индикатор = 0;
	Текст     = "";
	
	Если ВыполнятьвФоне Тогда
		
		Если ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
			Попытка
				ЗаданиеВыполнено = ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
			Исключение
				ЗаданиеВыполнено = Истина;
			КонецПопытки;
		Иначе
			ЗаданиеВыполнено = Истина;
		КонецЕсли;
		Если ЗаданиеВыполнено = Ложь Тогда
			// Надо ждать
			Возврат Неопределено;
		КонецЕсли;
		
		ВыполняемыйМетод = "ДлительныеОперации.ВыполнитьПроцедуруМодуляОбъектаОбработки";
		
		ЭтоВнешняяОбработка = Не Метаданные.Обработки.Содержит(ОбработкаОбъект.Метаданные());
		НаименованиеЗадания = ОбработкаОбъект.Метаданные().Представление();
	
		ПараметрыЗадания = Новый Структура;
		ПараметрыЗадания.Вставить("ИмяОбработки",                  ОбработкаОбъект.ИспользуемоеИмяФайла);
		ПараметрыЗадания.Вставить("ИмяМетода",                     "ЗагрузитьДокументы");
		ПараметрыЗадания.Вставить("ПараметрыВыполнения",           СтруктураПараметров);
		ПараметрыЗадания.Вставить("ЭтоВнешняяОбработка",           ЭтоВнешняяОбработка);
		ПараметрыЗадания.Вставить("ДополнительнаяОбработкаСсылка", ДополнительнаяОбработкаСсылка);
		
		ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(ЭтаФорма.УникальныйИдентификатор);
		ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеЗадания;
		ПараметрыВыполнения.ЗапуститьВФоне = Истина;
		
		РезультатФоновогоЗадания = ДлительныеОперации.ВыполнитьВФоне(ВыполняемыйМетод, ПараметрыЗадания, ПараметрыВыполнения);
		ИдентификаторЗадания = РезультатФоновогоЗадания.ИдентификаторЗадания;
		Возврат РезультатФоновогоЗадания;
		
	Иначе
		
		АдресРезультата = ПоместитьВоВременноеХранилище(Неопределено, ЭтаФорма.УникальныйИдентификатор);
		ОбработкаОбъект.ЗагрузитьДокументы(СтруктураПараметров, АдресРезультата);
		ЗавершениеЗагрузки(АдресРезультата);
		Текст = "Обработка завершена";
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ВыполнятьвФонеПриИзменении(Элемент)
	
	Элементы.Индикатор.Видимость = ВыполнятьвФоне;
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОткрытьСписок(Команда)
	
	ОткрытьФорму("Документ.АСЦ_ПлановоеНачислениеКВ.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьЗапрос(Команда)
	
	ТекстЗапроса = ПоказатьЗапросНаСервере();
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.УстановитьТекст(ТекстЗапроса);
	ТекстовыйДокумент.Показать("Запрос UNICUS");
	
КонецПроцедуры

&НаСервере
Функция ПоказатьЗапросНаСервере()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	СтруктураПараметров = Новый Структура;
	Если ОтборОрганизацияИспользование Тогда
		СтруктураПараметров.Вставить("ОтборОрганизация", ОтборОрганизация);
	КонецЕсли;	
	
	Если ОтборДЦИспользование Тогда
		СтруктураПараметров.Вставить("ОтборДЦ", ОтборДЦ);
	КонецЕсли;	
	
	Если Тест_КоличествоСтрокИспользование Тогда
		СтруктураПараметров.Вставить("Тест_КоличествоСтрок", Тест_КоличествоСтрок);
	КонецЕсли;
	
	СтруктураПараметров.Вставить("ИмяТаблицы", ИмяТаблицы);
	
	ТекстЗапроса = ОбработкаОбъект.ПолучитьТекстЗапроса(Период.ДатаНачала, Период.ДатаОкончания, СтруктураПараметров);
	
	Возврат ТекстЗапроса;
	
КонецФункции




