{3,
{46,0,0,0,0,1,0,1,00000000-0000-0000-0000-000000000000,0,
{1,1,
{"ru","Обмен методическими моделями"}
},0,0,0,1,1,0,1,0,
{4,1d632984-de3c-4b4b-ad9f-d69682a10182,"ОбработкаВыбора",3699f6a3-9a2a-4c82-a775-6ff4824a08ca,"ОбработкаОповещения",79cea13e-f6fb-4483-905d-713326405771,"ПриЗагрузкеДанныхИзНастроекНаСервере",9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,"ПриСозданииНаСервере",1,0,1d632984-de3c-4b4b-ad9f-d69682a10182,0,1,3699f6a3-9a2a-4c82-a775-6ff4824a08ca,0,1,79cea13e-f6fb-4483-905d-713326405771,0,1,9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,0,1},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,0},0,1,0,0,0,3,3},1,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ГруппаРежим",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1,
{1,526c501f-ed3f-4db4-8731-fd0324707501,"ГруппаРежимПриСменеСтраницы",1,0,526c501f-ed3f-4db4-8731-fd0324707501,0,1}
},3,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{166,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ГруппаВыгрузкаМодели",
{1,1,
{"ru","Выгрузка моделей"}
},
{1,1,
{"ru","Группа выгрузка модели"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,1,
{0,87bd56da-fcd1-4d52-9de4-31c8b8faf678},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},2,143c00f7-a42d-4cd7-9189-88e4467dc768,
{51,
{205,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,1,
{0,
{0,
{"B",1},0}
},"ВидыОтчетовДляВыгрузки",0,0,1,
{1,0},
{1,0},
{2,
{1},
{0,7f27078d-e363-490f-8b2b-dcaf96216d2f}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,0,2,0,0,1,1,
{0},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,1,13,
{"U"},
{0,1,0},
{0},1,
{21,
{206,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ВидыОтчетовДляВыгрузкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{21,
{207,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ВидыОтчетовДляВыгрузкиКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{226,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"ТабличноеПолеОтчетовГруппаЗаполнить",
{1,1,
{"ru","Заполнить"}
},
{1,1,
{"ru","Заполнить отчеты для выгрузки"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{7,
{4,0,
{0},"",-1,-1,1,0,""},
{0,02023637-7868-4a5f-8576-835a76e0c9ba},2,3,0,0,
{3,4,
{0}
},
{3,4,
{0}
}
},3,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{228,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ТабличноеПолеОтчетовКоманднаяПанельОтчетовПоЭтапуПроцесса",
{1,0},1,
{14,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,1,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{229,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТабличноеПолеОтчетовКоманднаяПанельОтчетовПоЭтапуПроцессаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{230,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ТабличноеПолеОтчетовКоманднаяПанельОтчетовПоШаблонуПроцесса",
{1,0},1,
{13,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{231,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТабличноеПолеОтчетовКоманднаяПанельОтчетовПоШаблонуПроцессаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{232,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ТабличноеПолеОтчетовКоманднаяПанельОтчетовПоГруппеОтчетов",
{1,0},1,
{12,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{233,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТабличноеПолеОтчетовКоманднаяПанельОтчетовПоГруппеОтчетовРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,1,
{10,
{227,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТабличноеПолеОтчетовГруппаЗаполнитьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{224,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ВидыОтчетовДляВыгрузкиОчиститьОолеОтчетов",
{1,0},1,
{11,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{225,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВидыОтчетовДляВыгрузкиОчиститьОолеОтчетовРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,0,0,3,3},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{218,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ВидыОтчетовДляВыгрузкиНомерСтроки",1,0,
{1,0},
{1,0},
{3,
{1},
{0,7f27078d-e363-490f-8b2b-dcaf96216d2f},
{-2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,0,0,2,2,2,
{1,0},0,
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},2,
{0,1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},1,0,0,1,0},
{0,1,0},1,
{21,
{219,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ВидыОтчетовДляВыгрузкиНомерСтрокиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{220,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВидыОтчетовДляВыгрузкиНомерСтрокиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{221,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ВидыОтчетовДляВыгрузкиВидОтчета",1,0,
{1,0},
{1,0},
{3,
{1},
{0,7f27078d-e363-490f-8b2b-dcaf96216d2f},
{0,0f7d81e3-6e9e-4881-97ff-47bb2932a288}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{222,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ВидыОтчетовДляВыгрузкиВидОтчетаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{223,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВидыОтчетовДляВыгрузкиВидОтчетаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{10,
{208,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВидыОтчетовДляВыгрузкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,0,0,1,
{4,
{209,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВидыОтчетовДляВыгрузкиСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{21,
{210,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ВидыОтчетовДляВыгрузкиСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{211,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВидыОтчетовДляВыгрузкиСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{205,0},0,3,3},1,
{4,
{212,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ВидыОтчетовДляВыгрузкиСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{21,
{213,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ВидыОтчетовДляВыгрузкиСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{214,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВидыОтчетовДляВыгрузкиСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{205,1},0,3,3},1,
{4,
{215,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ВидыОтчетовДляВыгрузкиУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{21,
{216,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ВидыОтчетовДляВыгрузкиУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{217,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВидыОтчетовДляВыгрузкиУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{205,2},0,3,3},0,1,0,0,1,0,3,3,0,1,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{203,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаФайлВыгрузки",
{1,1,
{"ru","Группа файл выгрузки"}
},
{1,1,
{"ru","Группа файл выгрузки"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,3,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{174,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ИмяФайлаВыгрузки",2,0,
{1,1,
{"ru","Файл  выгрузки"}
},
{1,0},
{1,
{2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,1,2,2,1,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{2,1960479b-4d89-4eba-8b39-0aa802020558,"ИмяФайлаВыгрузкиНачалоВыбора",ac5a9c5a-5f1d-4fc5-b88c-a187038c16d1,"ИмяФайлаВыгрузкиОткрытие",1,0,1960479b-4d89-4eba-8b39-0aa802020558,0,1,ac5a9c5a-5f1d-4fc5-b88c-a187038c16d1,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ИмяФайлаВыгрузкиПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{175,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ИмяФайлаВыгрузкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{176,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ИмяФайлаВыгрузкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{179,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"ВыгрузитьДанные1",
{1,0},1,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},2,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,1,
{0,9fecbaff-2a05-4da6-9ef1-807e754b928d},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{180,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВыгрузитьДанные1РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},1,0,1,
{10,
{204,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаФайлВыгрузкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{167,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаВыгрузкаМоделиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{5,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ГруппаЗагрузка",
{1,1,
{"ru","Загрузка моделей"}
},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},3,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{75,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ПриЗагрузкеИспользоватьРежимОбменаДанными",4,0,
{1,1,
{"ru","Загружать данные в режиме обмена (ОбменДанными.Загрузка = Истина)"}
},
{1,0},
{2,
{1},
{0,d13dc2dd-3e13-4b9a-9aa9-da8d609876a5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{76,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ПриЗагрузкеИспользоватьРежимОбменаДаннымиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},0,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{77,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ПриЗагрузкеИспользоватьРежимОбменаДаннымиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{78,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ПродолжитьЗагрузкуВСлучаеВозникновенияОшибки",4,0,
{1,1,
{"ru","Продолжить загрузку объектов в случае возникновения ошибки"}
},
{1,0},
{2,
{1},
{0,5acbb611-0fdd-45e6-bbd0-c8e19d284876}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{79,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ПродолжитьЗагрузкуВСлучаеВозникновенияОшибкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},0,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{80,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ПродолжитьЗагрузкуВСлучаеВозникновенияОшибкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{132,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"Группа5",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1},3,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{10,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ИмяФайлаЗагрузки",0,0,
{1,0},
{1,0},
{1,
{7}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,1,2,2,1,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{2,1960479b-4d89-4eba-8b39-0aa802020558,"ИмяФайлаЗагрузкиНачалоВыбора",ac5a9c5a-5f1d-4fc5-b88c-a187038c16d1,"ИмяФайлаЗагрузкиОткрытие",1,0,1960479b-4d89-4eba-8b39-0aa802020558,0,1,ac5a9c5a-5f1d-4fc5-b88c-a187038c16d1,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{11,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ИмяФайлаЗагрузкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{12,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ИмяФайлаЗагрузкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{109,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"ЗагрузитьДанные",
{1,0},1,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,1,60,
{0},700,0,0,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{110,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ЗагрузитьДанныеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{134,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"Группа6",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},0,1,0,1,
{10,
{135,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"Группа6РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{133,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"Группа5РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{6,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ГруппаЗагрузкаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{234,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ГруппаДерево",
{1,1,
{"ru","Дерево МД"}
},
{1,1,
{"ru","Группа дерево"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},1,143c00f7-a42d-4cd7-9189-88e4467dc768,
{51,
{236,02023637-7868-4a5f-8576-835a76e0c9ba},0,2,1,
{0,
{0,
{"B",1},0}
},"ДеревоМетаданных",0,0,1,
{1,0},
{1,0},
{2,
{1},
{0,3d59ca74-c2b7-4974-9121-677ab19f31bd}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{0},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,0,
{0,1,0},
{0},1,
{21,
{237,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоМетаданныхКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{21,
{238,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ДеревоМетаданныхКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},1,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{273,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ДеревоМетаданныхАСЦ_ЗаполнитьДерево",
{1,0},1,
{15,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{274,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоМетаданныхАСЦ_ЗаполнитьДеревоРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,0,0,3,3},8,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{249,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоМетаданныхПолноеИмяМетаданных",1,0,
{1,0},
{1,0},
{3,
{1},
{0,3d59ca74-c2b7-4974-9121-677ab19f31bd},
{1,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{250,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоМетаданныхПолноеИмяМетаданныхКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{251,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоМетаданныхПолноеИмяМетаданныхРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{252,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоМетаданныхВыгружать",1,0,
{1,0},
{1,0},
{3,
{1},
{0,3d59ca74-c2b7-4974-9121-677ab19f31bd},
{2,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{253,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоМетаданныхВыгружатьКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{254,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоМетаданныхВыгружатьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{255,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоМетаданныхВыгружатьПриНеобходимости",1,0,
{1,0},
{1,0},
{3,
{1},
{0,3d59ca74-c2b7-4974-9121-677ab19f31bd},
{3,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{256,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоМетаданныхВыгружатьПриНеобходимостиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{257,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоМетаданныхВыгружатьПриНеобходимостиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{258,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоМетаданныхИндексКартинки",1,0,
{1,0},
{1,0},
{3,
{1},
{0,3d59ca74-c2b7-4974-9121-677ab19f31bd},
{4,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{259,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоМетаданныхИндексКартинкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{260,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоМетаданныхИндексКартинкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{261,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ДеревоМетаданныхРазвернут",1,0,
{1,0},
{1,0},
{3,
{1},
{0,3d59ca74-c2b7-4974-9121-677ab19f31bd},
{5,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{262,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоМетаданныхРазвернутКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{263,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоМетаданныхРазвернутРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{264,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ДеревоМетаданныхДоступенОтбор",1,0,
{1,0},
{1,0},
{3,
{1},
{0,3d59ca74-c2b7-4974-9121-677ab19f31bd},
{6,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{265,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоМетаданныхДоступенОтборКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{266,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоМетаданныхДоступенОтборРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{267,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоМетаданныхОтбор",1,0,
{1,0},
{1,0},
{3,
{1},
{0,3d59ca74-c2b7-4974-9121-677ab19f31bd},
{7,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{268,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоМетаданныхОтборКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{269,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоМетаданныхОтборРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{270,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоМетаданныхОтборПоВладельцу",1,0,
{1,0},
{1,0},
{3,
{1},
{0,3d59ca74-c2b7-4974-9121-677ab19f31bd},
{8,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{271,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоМетаданныхОтборПоВладельцуКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{272,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоМетаданныхОтборПоВладельцуРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{10,
{239,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоМетаданныхРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,0,0,1,
{4,
{240,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоМетаданныхСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{21,
{241,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоМетаданныхСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{242,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоМетаданныхСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{236,0},0,3,3},1,
{4,
{243,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ДеревоМетаданныхСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{21,
{244,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоМетаданныхСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{245,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоМетаданныхСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{236,1},0,3,3},1,
{4,
{246,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоМетаданныхУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{21,
{247,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоМетаданныхУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{248,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоМетаданныхУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{236,2},0,3,3},0,1,0,0,1,0,3,3,0,1,0},1,0,1,
{10,
{235,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаДеревоРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ГруппаРежимРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,"",0,0,0,0,0,0,3,3,0,0,0,100,1,1,0},"
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство(""АвтоТест"") Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьВерсиюИРежимСовместимостиПлатформы();
	
	Элементы.ИмяФайлаВыгрузки.Доступность = Не РежимРаботыНаКлиенте;
	Элементы.ИмяФайлаЗагрузки.Доступность = Не РежимРаботыНаКлиенте;
	
	ОбъектНаСервере = РеквизитФормыВЗначение(""Объект"");
	ОбъектНаСервере.Инициализация();
	ЗначениеВРеквизитФормы(ОбъектНаСервере.ДеревоМетаданных, ""Объект.ДеревоМетаданных"");
	
	Файл = Новый Файл(ИмяФайлаВыгрузки);
	Объект.ИспользоватьФорматFastInfoSet = (Файл.Расширение = "".fi"");
	
	РежимВыгрузки = (Элементы.ГруппаРежим.ТекущаяСтраница = Элементы.ГруппаРежим.ПодчиненныеЭлементы.ГруппаВыгрузкаМодели);	
		
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
		
	Элементы.ИмяФайлаВыгрузки.Доступность = Не РежимРаботыНаКлиенте;
	Элементы.ИмяФайлаЗагрузки.Доступность = Не РежимРаботыНаКлиенте;
	
	Файл = Новый Файл(ИмяФайлаВыгрузки);
	Объект.ИспользоватьФорматFastInfoSet = (Файл.Расширение = "".fi"");
	
	РежимВыгрузки = (Элементы.ГруппаРежим.ТекущаяСтраница = Элементы.ГруппаРежим.ПодчиненныеЭлементы.ГруппаВыгрузкаМодели);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = ""ЗакрытаФормаНастройкиКонсолиЗапросов"" Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметр);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИмяФайлаВыгрузкиПриИзменении(Элемент)
	
	Файл = Новый Файл(ИмяФайлаВыгрузки);
	Объект.ИспользоватьФорматFastInfoSet = (Файл.Расширение = "".fi"");
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаВыгрузкиОткрытие(Элемент, СтандартнаяОбработка)
	
	ОткрытьВПриложении(Элемент, ""ИмяФайлаВыгрузки"", СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаВыгрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбработатьНачалоВыбораФайла(СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьФорматFastInfoSetПриИзменении(Элемент)
	
	Если Объект.ИспользоватьФорматFastInfoSet Тогда
		ИмяФайлаВыгрузки = СтрЗаменить(ИмяФайлаВыгрузки, "".xml"", "".fi"");
	Иначе
		ИмяФайлаВыгрузки = СтрЗаменить(ИмяФайлаВыгрузки, "".fi"", "".xml"");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаРежимПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	РежимВыгрузки = (Элементы.ГруппаРежим.ТекущаяСтраница = Элементы.ГруппаРежим.ПодчиненныеЭлементы.ГруппаВыгрузкаМодели);
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеОбъектыДляВыгрузкиПриИзменении(Элемент)
	
	Если Элемент.ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Объект) Тогда
		
		Элемент.ТекущиеДанные.ИмяОбъектаДляЗапроса = ИмяОбъектаПоТипуДляЗапроса(Элемент.ТекущиеДанные.Объект);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаЗагрузкиОткрытие(Элемент, СтандартнаяОбработка)
	
	ОткрытьВПриложении(Элемент, ""ИмяФайлаЗагрузки"", СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаЗагрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбработатьНачалоВыбораФайла(СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоМетаданных

&НаКлиенте
Процедура ДеревоМетаданныхВыгружатьПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоМетаданных.ТекущиеДанные;
	
	Если ТекущиеДанные.Выгружать = 2 Тогда
		ТекущиеДанные.Выгружать = 0;
	КонецЕсли;
	
	УстановитьПометкиПодчиненных(ТекущиеДанные, ""Выгружать"");
	УстановитьПометкиРодителей(ТекущиеДанные, ""Выгружать"");
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоМетаданныхВыгружатьПриНеобходимостиПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоМетаданных.ТекущиеДанные;
	
	Если ТекущиеДанные.ВыгружатьПриНеобходимости = 2 Тогда
		ТекущиеДанные.ВыгружатьПриНеобходимости = 0;
	КонецЕсли;
	
	УстановитьПометкиПодчиненных(ТекущиеДанные, ""ВыгружатьПриНеобходимости"");
	УстановитьПометкиРодителей(ТекущиеДанные, ""ВыгружатьПриНеобходимости"");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДополнительныеОбъектыДляВыгрузки

&НаКлиенте
Процедура ДополнительныеОбъектыДляВыгрузкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Элемент.ТекущийЭлемент.ОграничениеТипа = ТипОбъектовДляВыгрузки;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОчиститьДополнительныеОбъектыВыгрузки(Команда)
	
	Объект.ДополнительныеОбъектыДляВыгрузки.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьДанные(Команда)
		
	ОчиститьСообщения();
	
	Если Не РежимРаботыНаКлиенте Тогда
		
		Если ПустаяСтрока(ИмяФайлаВыгрузки) Тогда
			
			ТекстСообщения = Нстр(""ru = 'Поле """"Имя файла"""" не заполнено'"");
			СообщитьПользователю(ТекстСообщения, ""ИмяФайлаВыгрузки"");
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Состояние(Нстр(""ru = 'Выполняется выгрузка данных. Пожалуйста, подождите...'""));
	
	ОтобратьДанныеДляВыгрузки();
	
	АдресФайлаВоВременномХранилище = """";
	ВыгрузитьДанныеНаСервере(АдресФайлаВоВременномХранилище);
	
	Если Не ПустаяСтрока(АдресФайлаВоВременномХранилище) Тогда
		
		ПолучитьФайл(АдресФайлаВоВременномХранилище,ИмяФайлаВыгрузки,Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанные(Команда)
	
	ОчиститьСообщения();
	АдресФайлаВоВременномХранилище = """";
	
	Если РежимРаботыНаКлиенте Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения(""ЗагрузитьДанныеЗавершение"", ЭтотОбъект);
		НачатьПомещениеФайла(ОписаниеОповещения, АдресФайлаВоВременномХранилище,Нстр(""ru = 'Файл выгрузки'""),, УникальныйИдентификатор);
		
	Иначе
		
		Если ПустаяСтрока(ИмяФайлаЗагрузки) Тогда
			
			ТекстСообщения = Нстр(""ru = 'Поле """"Имя файла"""" не заполнено'"");
			СообщитьПользователю(ТекстСообщения, ""ИмяФайлаЗагрузки"");
			Возврат;
			
		КонецЕсли;
		
		Файл = Новый Файл(ИмяФайлаЗагрузки);
		Если Не Файл.Существует() Тогда
			
			ТекстСообщения = Нстр(""ru = 'Файл не существует'"");
			СообщитьПользователю(ТекстСообщения, ""ИмяФайлаЗагрузки"");
			Возврат;
			
		КонецЕсли;
		
		ЗагрузитьДанныеЗавершение(Истина, АдресФайлаВоВременномХранилище, ИмяФайлаЗагрузки, Неопределено);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьВыгружаемыеПоСсылке(Команда)
	
	Состояние(Нстр(""ru = 'Выполняется поиск объектов метаданных, которые могут быть выгружены по ссылкам...'""));
	СохранитьОтображениеДерева(Объект.ДеревоМетаданных.ПолучитьЭлементы());
	ПересчитатьВыгружаемыеПоСсылкеНаСервере();
	ВосстановитьОтображениеДерева(Объект.ДеревоМетаданных.ПолучитьЭлементы());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОткрытьВПриложении(Элемент, ПутьКДанным, СтандартнаяОбработка)

	Файл = Новый Файл(Элемент.ТекстРедактирования);
	
	Если Файл.Существует() Тогда
		
		ОбщегоНазначенияКлиент.ОткрытьФайлВПрограммеПросмотра(Элемент.ТекстРедактирования);
		
	Иначе
		
		СообщитьПользователю(Нстр(""ru = 'Файл не найден'""), ПутьКДанным);
		
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СообщитьПользователю(Текст, ПутьКДанным = """")
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = Текст;
	Сообщение.ПутьКДанным = ПутьКДанным;
	Сообщение.Сообщить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьНачалоВыбораФайла(СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РежимДиалога = ?(РежимВыгрузки, РежимДиалогаВыбораФайла.Сохранение, РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалога);
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Не РежимВыгрузки;
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.Заголовок = Нстр(""ru = 'Задайте имя файла выгрузки'"");
	ДиалогВыбораФайла.ПолноеИмяФайла = ""Model"";
	
	ДиалогВыбораФайла.Фильтр = ""Формат выгрузки(*.xml)|*.xml"";
	Если ДиалогВыбораФайла.Выбрать() Тогда
		Если РежимВыгрузки Тогда
			ИмяФайлаВыгрузки = ДиалогВыбораФайла.ПолноеИмяФайла;
		Иначе
			ИмяФайлаЗагрузки = ДиалогВыбораФайла.ПолноеИмяФайла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометкиПодчиненных(ТекСтрока, ИмяФлажка)
	
	Подчиненные = ТекСтрока.ПолучитьЭлементы();
	
	Если Подчиненные.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка из Подчиненные Цикл
		
		Строка[ИмяФлажка] = ТекСтрока[ИмяФлажка];
		
		УстановитьПометкиПодчиненных(Строка, ИмяФлажка);
		
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометкиРодителей(ТекСтрока, ИмяФлажка)
	
	Родитель = ТекСтрока.ПолучитьРодителя();
	Если Родитель = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ТекСостояние = Родитель[ИмяФлажка];
	
	НайденыВключенные  = Ложь;
	НайденыВыключенные = Ложь;
	
	Для Каждого Строка из Родитель.ПолучитьЭлементы() Цикл
		Если Строка[ИмяФлажка] = 0 Тогда
			НайденыВыключенные = Истина;
		ИначеЕсли Строка[ИмяФлажка] = 1
			ИЛИ Строка[ИмяФлажка] = 2 Тогда
			НайденыВключенные  = Истина;
		КонецЕсли; 
		Если НайденыВключенные И НайденыВыключенные Тогда
			Прервать;
		КонецЕсли; 
	КонецЦикла;
	
	Если НайденыВключенные И НайденыВыключенные Тогда
		Включить = 2;
	ИначеЕсли НайденыВключенные И (Не НайденыВыключенные) Тогда
		Включить = 1;
	ИначеЕсли (Не НайденыВключенные) И НайденыВыключенные Тогда
		Включить = 0;
	ИначеЕсли (Не НайденыВключенные) И (Не НайденыВыключенные) Тогда
		Включить = 2;
	КонецЕсли;
	
	Если Включить = ТекСостояние Тогда
		Возврат;
	Иначе
		Родитель[ИмяФлажка] = Включить;
		УстановитьПометкиРодителей(Родитель, ИмяФлажка);
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьДанныеНаСервере(АдресФайлаВоВременномХранилище)
		
	Расширение = ?(Объект.ИспользоватьФорматFastInfoSet, "".fi"", "".xml"");
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(Расширение);
	
	ОбъектНаСервере = РеквизитФормыВЗначение(""Объект"");
	ЗаполнитьДеревоМетаданныхНаСервере(ОбъектНаСервере);
	
	ОбъектНаСервере.ВыполнитьВыгрузку(ИмяВременногоФайла);
	
	Файл = Новый Файл(ИмяВременногоФайла);
	
	Если Файл.Существует() Тогда
		
		ДвоичныеДанные = Новый ДвоичныеДанные(ИмяВременногоФайла);
		АдресФайлаВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ЭтаФорма.УникальныйИдентификатор);
		УдалитьФайлы(ИмяВременногоФайла);
		
	КонецЕсли;
			
КонецПроцедуры

&НаСервере
Процедура ПроставитьПометкиВыгружаемыхДанных(СтрокиИсходногоДерева, СтрокиЗаменяемогоДерева)
	
	КолонкаВыгружать = СтрокиЗаменяемогоДерева.ВыгрузитьКолонку(""Выгружать"");
	СтрокиИсходногоДерева.ЗагрузитьКолонку(КолонкаВыгружать, ""Выгружать"");
	
	КолонкаВыгружатьПриНеобходимости = СтрокиЗаменяемогоДерева.ВыгрузитьКолонку(""ВыгружатьПриНеобходимости"");
	СтрокиИсходногоДерева.ЗагрузитьКолонку(КолонкаВыгружатьПриНеобходимости, ""ВыгружатьПриНеобходимости"");
	
	КолонкаРазвернут = СтрокиЗаменяемогоДерева.ВыгрузитьКолонку(""Развернут"");
	СтрокиИсходногоДерева.ЗагрузитьКолонку(КолонкаРазвернут, ""Развернут"");
	
	КолонкаОтбор = СтрокиЗаменяемогоДерева.ВыгрузитьКолонку(""Отбор"");
	СтрокиИсходногоДерева.ЗагрузитьКолонку(КолонкаОтбор, ""Отбор"");
	
	Для Каждого СтрокаИсходногоДерева Из СтрокиИсходногоДерева Цикл
		
		ИндексСтроки = СтрокиИсходногоДерева.Индекс(СтрокаИсходногоДерева);
		СтрокаИзменяемогоДерева = СтрокиЗаменяемогоДерева.Получить(ИндексСтроки);
		
		ПроставитьПометкиВыгружаемыхДанных(СтрокаИсходногоДерева.Строки, СтрокаИзменяемогоДерева.Строки);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанныеЗавершение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	
	Если Результат Тогда
		
		Состояние(Нстр(""ru = 'Выполняется загрузка данных. Пожалуйста, подождите...'""));
		
		Файл = Новый Файл(ВыбранноеИмяФайла);
		Если Не Файл.Существует() Тогда
			
			ТекстСообщения = Нстр(""ru = 'Указанный файл не существует'"");
			ПутьКДанным = """";
			СообщитьПользователю(ТекстСообщения, ПутьКДанным);
			Возврат;
			
		КонецЕсли;
		
		ЗагрузитьДанныеНаСервере(Адрес, Файл.Расширение);
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанныеНаСервере(АдресФайлаВоВременномХранилище, Расширение)
	
	Если РежимРаботыНаКлиенте Тогда
		
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресФайлаВоВременномХранилище);
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла(Расширение);
		ДвоичныеДанные.Записать(ИмяВременногоФайла);
		
	Иначе
		
		ИмяВременногоФайла = ИмяФайлаЗагрузки;
		
	КонецЕсли;
	
	РеквизитФормыВЗначение(""Объект"").ВыполнитьЗагрузку(ИмяВременногоФайла);
	
	Если РежимРаботыНаКлиенте Тогда
		
		Файл = Новый Файл(ИмяВременногоФайла);
		
		Если Файл.Существует() Тогда
			
			УдалитьФайлы(ИмяВременногоФайла);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьВыгружаемыеПоСсылкеНаСервере()
	
	ОбъектНаСервере = РеквизитФормыВЗначение(""Объект"");
	ЗаполнитьДеревоМетаданныхНаСервере(ОбъектНаСервере);
	ОбъектНаСервере.СоставВыгрузки(Истина);
	ЗначениеВРеквизитФормы(ОбъектНаСервере.ДеревоМетаданных, ""Объект.ДеревоМетаданных"");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоМетаданныхНаСервере(ОбъектНаСервере)
	
	ДеревоМетаданных = РеквизитФормыВЗначение(""Объект.ДеревоМетаданных"");
	
	ОбъектНаСервере.Инициализация();
	
	ПроставитьПометкиВыгружаемыхДанных(ОбъектНаСервере.ДеревоМетаданных.Строки, ДеревоМетаданных.Строки);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьОтображениеДерева(СтрокиДерева)
	
	Для Каждого Строка Из СтрокиДерева Цикл
		
		ИдентификаторСтроки=Строка.ПолучитьИдентификатор();
		Строка.Развернут = Элементы.ДеревоМетаданных.Развернут(ИдентификаторСтроки);
		
		СохранитьОтображениеДерева(Строка.ПолучитьЭлементы());
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьОтображениеДерева(СтрокиДерева)
	
	Для Каждого Строка Из СтрокиДерева Цикл
		
		ИдентификаторСтроки=Строка.ПолучитьИдентификатор();
		Если Строка.Развернут Тогда
			Элементы.ДеревоМетаданных.Развернуть(ИдентификаторСтроки);
		КонецЕсли;
		
		ВосстановитьОтображениеДерева(Строка.ПолучитьЭлементы());
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИмяОбъектаПоТипуДляЗапроса(Ссылка)
	
	МетаданныеОбъекта = Ссылка.Метаданные();
	ИмяМетаданных = МетаданныеОбъекта.Имя;
	
	ИмяДляЗапроса = """";
	
	Если Метаданные.Справочники.Содержит(МетаданныеОбъекта) Тогда
		ИмяДляЗапроса = ""Справочник"";
	ИначеЕсли Метаданные.Документы.Содержит(МетаданныеОбъекта) Тогда
		ИмяДляЗапроса = ""Документ"";
	ИначеЕсли Метаданные.ПланыВидовХарактеристик.Содержит(МетаданныеОбъекта) Тогда
		ИмяДляЗапроса = ""ПланВидовХарактеристик"";
	ИначеЕсли Метаданные.ПланыСчетов.Содержит(МетаданныеОбъекта) Тогда
		ИмяДляЗапроса = ""ПланСчетов"";
	ИначеЕсли Метаданные.ПланыВидовРасчета.Содержит(МетаданныеОбъекта) Тогда
		ИмяДляЗапроса = ""ПланВидовРасчета"";
	ИначеЕсли Метаданные.ПланыОбмена.Содержит(МетаданныеОбъекта) Тогда
		ИмяДляЗапроса = ""ПланОбмена"";
	ИначеЕсли Метаданные.БизнесПроцессы.Содержит(МетаданныеОбъекта) Тогда
		ИмяДляЗапроса = ""БизнесПроцесс"";
	ИначеЕсли Метаданные.Задачи.Содержит(МетаданныеОбъекта) Тогда
		ИмяДляЗапроса = ""Задача"";
	КонецЕсли;
	
	Если ПустаяСтрока(ИмяДляЗапроса) Тогда
		Возврат """";
	Иначе
		Возврат ИмяДляЗапроса + ""."" + ИмяМетаданных;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПроверитьВерсиюИРежимСовместимостиПлатформы()
	
	Информация = Новый СистемнаяИнформация;
	Если Не (Лев(Информация.ВерсияПриложения, 3) = ""8.3""
		И (Метаданные.РежимСовместимости = Метаданные.СвойстваОбъектов.РежимСовместимости.НеИспользовать
		Или (Метаданные.РежимСовместимости <> Метаданные.СвойстваОбъектов.РежимСовместимости.Версия8_1
		И Метаданные.РежимСовместимости <> Метаданные.СвойстваОбъектов.РежимСовместимости.Версия8_2_13
		И Метаданные.РежимСовместимости <> Метаданные.СвойстваОбъектов.РежимСовместимости[""Версия8_2_16""]
		И Метаданные.РежимСовместимости <> Метаданные.СвойстваОбъектов.РежимСовместимости[""Версия8_3_1""]
		И Метаданные.РежимСовместимости <> Метаданные.СвойстваОбъектов.РежимСовместимости[""Версия8_3_2""]))) Тогда
		
		ВызватьИсключение Нстр(""ru = 'Обработка предназначена для запуска на версии платформы
			|1С:Предприятие 8.3 с отключенным режимом совместимости или выше'"");
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ДеревоМетаданныхПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрока = Элементы.ДеревоМетаданных.ТекущиеДанные;
		
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	Элементы.ДеревоМетаданныхОтбор.ТолькоПросмотр         = Не ТекущаяСтрока.ДоступенОтбор;
	Элементы.ДеревоМетаданныхСкопироватьОтбор.Доступность = ТекущаяСтрока.ДоступенОтбор;
	Элементы.ДеревоМетаданныхУдалитьОтбор.Доступность     = ТекущаяСтрока.ДоступенОтбор;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоМетаданныхОтборНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущаяСтрока = Элементы.ДеревоМетаданных.ТекущиеДанные;
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КомпоновщикНастроек = ИнициализироватьКомпоновщикНастроек(Элементы.ДеревоМетаданных.ТекущаяСтрока);
	ТекущаяСтрока.Отбор = КомпоновщикНастроек.Настройки.Отбор;
	
КонецПроцедуры

&НаСервере
Функция ИнициализироватьКомпоновщикНастроек(Знач ИндексСтроки = Неопределено, Знач СтрокаДереваМетаданных = Неопределено)
	
	Если СтрокаДереваМетаданных = Неопределено Тогда
		СтрокаДереваМетаданных = Объект.ДеревоМетаданных.НайтиПоИдентификатору(ИндексСтроки);
	КонецЕсли;
	
	ОбъектОбработка = РеквизитФормыВЗначение(""Объект"");
	ТекстЗапроса = ОбъектОбработка.ПолучитьТекстЗапросаПоСтроке(СтрокаДереваМетаданных, Ложь);
	СхемаКомпоновкиДанных = СхемаКомпоновкиДанных(ТекстЗапроса);
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор)));
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	
	ЕстьДополнительныеОтборы  = СтрокаДереваМетаданных.Отбор.Элементы.Количество() <> 0; 
	
	Если ЕстьДополнительныеОтборы Тогда
		СкопироватьЭлементы(КомпоновщикНастроек.Настройки.Отбор, СтрокаДереваМетаданных.Отбор);
	КонецЕсли;
	
	Возврат КомпоновщикНастроек;
		
КонецФункции

&НаСервере
Процедура СкопироватьЭлементы(ПриемникЗначения, ИсточникЗначения, ОчищатьПриемник = Истина) Экспорт
	
	Если ТипЗнч(ИсточникЗначения) = Тип(""УсловноеОформлениеКомпоновкиДанных"")
		ИЛИ ТипЗнч(ИсточникЗначения) = Тип(""ВариантыПользовательскогоПоляВыборКомпоновкиДанных"")
		ИЛИ ТипЗнч(ИсточникЗначения) = Тип(""ОформляемыеПоляКомпоновкиДанных"")
		ИЛИ ТипЗнч(ИсточникЗначения) = Тип(""ЗначенияПараметровДанныхКомпоновкиДанных"") Тогда
		СоздаватьПоТипу = Ложь;
	Иначе
		СоздаватьПоТипу = Истина;
	КонецЕсли;
	ПриемникЭлементов = ПриемникЗначения.Элементы;
	ИсточникЭлементов = ИсточникЗначения.Элементы;
	Если ОчищатьПриемник Тогда
		ПриемникЭлементов.Очистить();
	КонецЕсли;
	
	Для каждого ЭлементИсточник Из ИсточникЭлементов Цикл
		
		Если ТипЗнч(ЭлементИсточник) = Тип(""ЭлементПорядкаКомпоновкиДанных"") Тогда
			// Элементы порядка добавляем в начало
			Индекс = ИсточникЭлементов.Индекс(ЭлементИсточник);
			ЭлементПриемник = ПриемникЭлементов.Вставить(Индекс, ТипЗнч(ЭлементИсточник));
		Иначе
			Если СоздаватьПоТипу Тогда
				ЭлементПриемник = ПриемникЭлементов.Добавить(ТипЗнч(ЭлементИсточник));
			Иначе
				ЭлементПриемник = ПриемникЭлементов.Добавить();
			КонецЕсли;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ЭлементПриемник, ЭлементИсточник);
		// В некоторых коллекциях необходимо заполнить другие коллекции
		Если ТипЗнч(ИсточникЭлементов) = Тип(""КоллекцияЭлементовУсловногоОформленияКомпоновкиДанных"") Тогда
			СкопироватьЭлементы(ЭлементПриемник.Поля, ЭлементИсточник.Поля);
			СкопироватьЭлементы(ЭлементПриемник.Отбор, ЭлементИсточник.Отбор);
			ЗаполнитьЭлементы(ЭлементПриемник.Оформление, ЭлементИсточник.Оформление); 
		ИначеЕсли ТипЗнч(ИсточникЭлементов)	= Тип(""КоллекцияВариантовПользовательскогоПоляВыборКомпоновкиДанных"") Тогда
			СкопироватьЭлементы(ЭлементПриемник.Отбор, ЭлементИсточник.Отбор);
		КонецЕсли;
		
		// В некоторых элементах коллекции необходимо заполнить другие коллекции
		Если ТипЗнч(ЭлементИсточник) = Тип(""ГруппаЭлементовОтбораКомпоновкиДанных"") Тогда
			СкопироватьЭлементы(ЭлементПриемник, ЭлементИсточник);
		ИначеЕсли ТипЗнч(ЭлементИсточник) = Тип(""ГруппаВыбранныхПолейКомпоновкиДанных"") Тогда
			СкопироватьЭлементы(ЭлементПриемник, ЭлементИсточник);
		ИначеЕсли ТипЗнч(ЭлементИсточник) = Тип(""ПользовательскоеПолеВыборКомпоновкиДанных"") Тогда
			СкопироватьЭлементы(ЭлементПриемник.Варианты, ЭлементИсточник.Варианты);
		ИначеЕсли ТипЗнч(ЭлементИсточник) = Тип(""ПользовательскоеПолеВыражениеКомпоновкиДанных"") Тогда
			ЭлементПриемник.УстановитьВыражениеДетальныхЗаписей (ЭлементИсточник.ПолучитьВыражениеДетальныхЗаписей());
			ЭлементПриемник.УстановитьВыражениеИтоговыхЗаписей(ЭлементИсточник.ПолучитьВыражениеИтоговыхЗаписей());
			ЭлементПриемник.УстановитьПредставлениеВыраженияДетальныхЗаписей(ЭлементИсточник.ПолучитьПредставлениеВыраженияДетальныхЗаписей ());
			ЭлементПриемник.УстановитьПредставлениеВыраженияИтоговыхЗаписей(ЭлементИсточник.ПолучитьПредставлениеВыраженияИтоговыхЗаписей ());
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьНедоступныеЭлементыОтбора(ДоступныеПоляОтбора, ИсточникЗначения) Экспорт
	
	ИсточникЭлементов = ИсточникЗначения.Элементы;
	
	МассивЭлементовДляУдаления = Новый Массив;
	
	Для каждого ЭлементИсточник Из ИсточникЭлементов Цикл
				
		Если ТипЗнч(ЭлементИсточник) = Тип(""ГруппаЭлементовОтбораКомпоновкиДанных"") Тогда
			УдалитьНедоступныеЭлементыОтбора(ДоступныеПоляОтбора, ЭлементИсточник);
		Иначе
			Если ДоступныеПоляОтбора.НайтиПоле(ЭлементИсточник.ЛевоеЗначение) = Неопределено Тогда
				МассивЭлементовДляУдаления.Добавить(ЭлементИсточник);
			КонецЕсли;	
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого УдаляемоеПоле Из МассивЭлементовДляУдаления Цикл
		 ИсточникЭлементов.Удалить(УдаляемоеПоле);
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЭлементы(ПриемникЗначения, ИсточникЗначения, ПервыйУровень = Неопределено) Экспорт
	
	Если ТипЗнч(ПриемникЗначения) = Тип(""КоллекцияЗначенийПараметровКомпоновкиДанных"") Тогда
		КоллекцияЗначений = ИсточникЗначения;
	Иначе
		КоллекцияЗначений = ИсточникЗначения.Элементы;
	КонецЕсли;
	
	Для каждого ЭлементИсточник Из КоллекцияЗначений Цикл
		Если ПервыйУровень = Неопределено Тогда
			ЭлементПриемник = ПриемникЗначения.НайтиЗначениеПараметра(ЭлементИсточник.Параметр);
		Иначе
			ЭлементПриемник = ПервыйУровень.НайтиЗначениеПараметра(ЭлементИсточник.Параметр);
		КонецЕсли;
		Если ЭлементПриемник = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ЭлементПриемник, ЭлементИсточник);
		Если ТипЗнч(ЭлементИсточник) = Тип(""ЗначениеПараметраКомпоновкиДанных"") Тогда
			Если ЭлементИсточник.ЗначенияВложенныхПараметров.Количество() <> 0 Тогда
				ЗаполнитьЭлементы(ЭлементПриемник.ЗначенияВложенныхПараметров, ЭлементИсточник.ЗначенияВложенныхПараметров, ПриемникЗначения);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция СхемаКомпоновкиДанных(ТекстЗапроса)
	
	СхемаКомпоновкиДанных = Новый СхемаКомпоновкиДанных;
	
	ИсточникДанных = СхемаКомпоновкиДанных.ИсточникиДанных.Добавить();
	ИсточникДанных.Имя = ""ИсточникДанных1"";
	ИсточникДанных.ТипИсточникаДанных = ""local"";
	
	НаборДанных = СхемаКомпоновкиДанных.НаборыДанных.Добавить(Тип(""НаборДанныхЗапросСхемыКомпоновкиДанных""));
	НаборДанных.ИсточникДанных = ""ИсточникДанных1"";
	НаборДанных.АвтоЗаполнениеДоступныхПолей = Истина;
	НаборДанных.Запрос = ТекстЗапроса;
	НаборДанных.Имя = ""НаборДанных1"";
	
	Возврат СхемаКомпоновкиДанных;
	
КонецФункции

&НаКлиенте
Процедура СкопироватьОтбор(Команда)
	
	ТекущаяСтрока = Элементы.ДеревоМетаданных.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		ПоказатьПредупреждение(, Нстр(""ru = 'Не выбрана строка отбора данных для копирования'""));
		Возврат;
	КонецЕсли;
	
	Обработчик = Новый ОписаниеОповещения(""СкопироватьОтборЗавершение"", ЭтотОбъект);
	
	ПоказатьВопрос(Обработчик, Нстр(""ru = 'Очистить текущие значения отбора в строках?'""), РежимДиалогаВопрос.ДаНет); 
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьОтборЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ОчищатьПриемник = РезультатВопроса = КодВозвратаДиалога.Да;
	СкопироватьОтборСервер(Элементы.ДеревоМетаданных.ТекущаяСтрока, ОчищатьПриемник);
		
КонецПроцедуры

&НаСервере
Процедура СкопироватьОтборСервер(ИндексСтроки, ОчищатьПриемник)
	
	СтрокаДереваМетаданных = Объект.ДеревоМетаданных.НайтиПоИдентификатору(ИндексСтроки);	
		
	СкопироватьОтборДляДерева(Объект.ДеревоМетаданных.ПолучитьЭлементы(), СтрокаДереваМетаданных, ОчищатьПриемник);
		
КонецПроцедуры

&НаСервере
Процедура СкопироватьОтборДляДерева(СтрокиДерева, СтрокаДереваМетаданных, ОчищатьПриемник)
	
	Для Каждого СтрокаДереваВыгрузки Из СтрокиДерева Цикл
		
		Если СтрокаДереваВыгрузки.ДоступенОтбор 
			И СтрокаДереваВыгрузки.Выгружать = 1 
			И Не СтрокаДереваМетаданных = СтрокаДереваВыгрузки Тогда
			
			СтарыйОтбор = СтрокаДереваВыгрузки.Отбор;
						
			КомпоновщикНастроек = ИнициализироватьКомпоновщикНастроек(,СтрокаДереваВыгрузки);
						
			СкопироватьЭлементы(КомпоновщикНастроек.Настройки.Отбор, 
				СтрокаДереваМетаданных.Отбор, 
				ОчищатьПриемник);
				
			УдалитьНедоступныеЭлементыОтбора(
			    КомпоновщикНастроек.Настройки.Отбор.ДоступныеПоляОтбора,
				КомпоновщикНастроек.Настройки.Отбор
				);	
				
			СтрокаДереваВыгрузки.Отбор = КомпоновщикНастроек.Настройки.Отбор;
			
		КонецЕсли;	
		
		Если СтрокаДереваВыгрузки.ПолучитьЭлементы().Количество() > 0 Тогда
			 СкопироватьОтборДляДерева(СтрокаДереваВыгрузки.ПолучитьЭлементы(), СтрокаДереваМетаданных, ОчищатьПриемник);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьОтбор(Команда)
	
	ОчиститьОтборы(Объект.ДеревоМетаданных.ПолучитьЭлементы());
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьОтборы(СтрокиДерева)
	
	Для Каждого СтрокаДереваВыгрузки Из СтрокиДерева Цикл
		
		Если СтрокаДереваВыгрузки.ДоступенОтбор 
			И СтрокаДереваВыгрузки.Выгружать = 1 Тогда
						
			СтрокаДереваВыгрузки.Отбор.Элементы.Очистить();
			
		КонецЕсли;	
		
		Если СтрокаДереваВыгрузки.ПолучитьЭлементы().Количество() > 0 Тогда
			 ОчиститьОтборы(СтрокаДереваВыгрузки.ПолучитьЭлементы());
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВыгружаемыеДанные(Команда)
	
	ТекущаяСтрока = Элементы.ДеревоМетаданных.ТекущиеДанные;
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТабДокумент = ПоказатьВыгружаемыеДанныеСервер(Элементы.ДеревоМетаданных.ТекущаяСтрока);
	ТабДокумент.Показать();
	
КонецПроцедуры

&НаСервере
Функция ПоказатьВыгружаемыеДанныеСервер(ИндексСтроки)
	
	СтрокаДереваМетаданных = Объект.ДеревоМетаданных.НайтиПоИдентификатору(ИндексСтроки);
		
	ОбъектОбработка = РеквизитФормыВЗначение(""Объект"");
		
	ТекстЗапроса = ОбъектОбработка.ПолучитьТекстЗапросаПоСтроке(СтрокаДереваМетаданных, Ложь);
	СхемаКомпоновкиДанных = СхемаКомпоновкиДанных(ТекстЗапроса);
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор)));
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	
	ЕстьДополнительныеОтборы  = СтрокаДереваМетаданных.Отбор.Элементы.Количество() <> 0; 
	
	Если ЕстьДополнительныеОтборы Тогда
		СкопироватьЭлементы(КомпоновщикНастроек.Настройки.Отбор, СтрокаДереваМетаданных.Отбор);
	КонецЕсли;
	
	УстановитьНастройкуСтруктурыВыводаРезультата(КомпоновщикНастроек.Настройки);
		
	УстановитьЗначениеПараметраСКД(КомпоновщикНастроек, ""ДатаНачала"",        ОбъектОбработка.ДатаНачала);
	УстановитьЗначениеПараметраСКД(КомпоновщикНастроек, ""ДатаОкончания"",     ОбъектОбработка.ДатаОкончания);
	
	// Компоновка макета компоновки данных.
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(
		СхемаКомпоновкиДанных, 
		КомпоновщикНастроек.Настройки, 
		ДанныеРасшифровки, 
		,
		Тип(""ГенераторМакетаКомпоновкиДанных"")
		);
		
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных, , ДанныеРасшифровки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	
	ТабДокумент = ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	Возврат ТабДокумент;
	
КонецФункции

&НаСервере
Функция УстановитьЗначениеПараметраСКД(КомпоновщикНастроек, ИмяПараметра, ЗначениеПараметра, ИспользоватьНеЗаполненный = Истина)
	
	ПараметрУстановлен = Ложь;
	
	ПараметрКомпоновкиДанных = Новый ПараметрКомпоновкиДанных(ИмяПараметра);
	ЗначениеПараметраКомпоновкиДанных = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(ПараметрКомпоновкиДанных);
	Если ЗначениеПараметраКомпоновкиДанных <> Неопределено Тогда
		
		ЗначениеПараметраКомпоновкиДанных.Значение = ЗначениеПараметра;
		ЗначениеПараметраКомпоновкиДанных.Использование = ?(ИспользоватьНеЗаполненный, Истина, ЗначениеЗаполнено(ЗначениеПараметраКомпоновкиДанных.Значение));
		
		ПараметрУстановлен = Истина;
		
	КонецЕсли;
	
	Возврат ПараметрУстановлен;
	
КонецФункции
	
&НаСервере
Процедура УстановитьНастройкуСтруктурыВыводаРезультата(Настройки)
	
	ГруппировкаКомпоновкиДанных = Настройки.Структура.Добавить(Тип(""ГруппировкаКомпоновкиДанных""));
		
	ПолеГруппировки = ГруппировкаКомпоновкиДанных.ПоляГруппировки.Элементы.Добавить(Тип(""ПолеГруппировкиКомпоновкиДанных""));
	ПолеГруппировки.Использование = Истина;
			
	Если Настройки.Выбор.ДоступныеПоляВыбора.НайтиПоле(Новый ПолеКомпоновкиДанных(""Ссылка"")) <> Неопределено Тогда
		ПолеВыбора = ГруппировкаКомпоновкиДанных.Выбор.Элементы.Добавить(Тип(""ВыбранноеПолеКомпоновкиДанных""));
		ПолеВыбора.Поле = Новый ПолеКомпоновкиДанных(""Ссылка"");
		ПолеВыбора.Использование = Истина;
	Иначе
		Для Каждого ДоступноеПолеВыбора Из Настройки.Выбор.ДоступныеПоляВыбора.Элементы Цикл
			Если ДоступноеПолеВыбора.Поле = Новый ПолеКомпоновкиДанных(""СистемныеПоля"")
				Или ДоступноеПолеВыбора.Поле = Новый ПолеКомпоновкиДанных(""ПараметрыДанных"") Тогда
				Продолжить;
			КонецЕсли;
			ПолеВыбора = ГруппировкаКомпоновкиДанных.Выбор.Элементы.Добавить(Тип(""ВыбранноеПолеКомпоновкиДанных""));
			ПолеВыбора.Поле = ДоступноеПолеВыбора.Поле;
			ПолеВыбора.Использование = Истина;
		КонецЦикла;	
	КонецЕсли;
			
КонецПроцедуры
	

#КонецОбласти

&НаСервере
Процедура ПодготовитьВыгрузкуМоделей()
		
	ОтобратьДанныеДляВыгрузки();

КонецПроцедуры

Процедура ОтобратьДанныеДляВыгрузки()
	
	
	ОбъектНаСервере = РеквизитФормыВЗначение(""Объект"");
    ДеревоМетаданных = РеквизитФормыВЗначение(""Объект.ДеревоМетаданных"");
	ПостроительОтчета = Новый ПостроительОтчета;
	Группа = Объект.ГруппаОтчетов;
	
	Для Каждого Строка ИЗ ДеревоМетаданных.Строки Цикл 
		
		ОчиститьОтборыСервер(Строка);
		
	КонецЦикла;
	
	Если Объект.ВидыОтчетовДляВыгрузки.Количество()=0 Тогда
		
		ЗначениеВРеквизитФормы(ДеревоМетаданных,""Объект.ДеревоМетаданных"");
		Возврат;
		
	КонецЕсли;
	
	//Виды отчетов
	
	СписокВидовОтчетов=Новый СписокЗначений;
	СписокВидовОтчетов.ЗагрузитьЗначения(Объект.ВидыОтчетовДляВыгрузки.Выгрузить().ВыгрузитьКолонку(""ВидОтчета""));
	
	Для Каждого ВидОтчета ИЗ СписокВидовОтчетов Цикл
		
		ПолучитьРекурсивныйСписокВидовОтчетов(ВидОтчета.Значение,СписокВидовОтчетов);
		
	КонецЦикла;
	
	СписокСИерархией=СписокВидовОтчетов.Скопировать();
	
	ПолучитьПолнуюИерархию(СписокСИерархией,СписокВидовОтчетов);
	
	СтрВидОтчета=ДеревоМетаданных.Строки.Найти(Метаданные.Справочники.ВидыОтчетов.Имя,""ПолноеИмяМетаданных"",Истина);
	
	Если Не СтрВидОтчета=Неопределено Тогда
		
		СтрВидОтчета.Выгружать=1;
		
		НЭлементОтбора = СтрВидОтчета.Отбор.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных""));
		ПолеОтбора = Новый ПолеКомпоновкиДанных(""Ссылка"");
		НЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
		НЭлементОтбора.Использование  = Истина;
		НЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
		НЭлементОтбора.ПравоеЗначение = СписокСИерархией;
			
		ВыделитьПодчиненные(ДеревоМетаданных,СтрВидОтчета);
		
	КонецЕсли;	
		
	Запрос=Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст=""ВЫБРАТЬ
	|	ПравилаОбработки.Ссылка КАК Ссылка,
	|	ПравилаОбработки.ТипБД КАК ТипБД
	|ПОМЕСТИТЬ ПравилаОбработки
	|ИЗ
	|	Справочник.ПравилаОбработки КАК ПравилаОбработки
	|ГДЕ
	|	ПравилаОбработки.Владелец В(&СписокСИерархией)
	|	И НЕ ПравилаОбработки.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсточникиДанныхДляРасчетов.Ссылка КАК ИсточникДанных
	|ИЗ
	|	Справочник.ИсточникиДанныхДляРасчетов КАК ИсточникиДанныхДляРасчетов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПравилаОбработки КАК ПравилаОбработки
	|		ПО ИсточникиДанныхДляРасчетов.НазначениеРасчетов = ПравилаОбработки.Ссылка
	|ГДЕ
	|	НЕ ИсточникиДанныхДляРасчетов.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПравилаОбработки.Ссылка КАК ПравилоОбработки
	|ИЗ
	|	ПравилаОбработки КАК ПравилаОбработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПравилаОбработки.ТипБД КАК ТипБД
	|ИЗ
	|	ПравилаОбработки КАК ПравилаОбработки
	|ГДЕ
	|	НЕ ПравилаОбработки.ТипБД = ЗНАЧЕНИЕ(Справочник.ТипыБазДанных.ПустаяСсылка)"";
				 
	Запрос.УстановитьПараметр(""СписокСИерархией"",СписокСИерархией);
	
	РезЗапроса=Запрос.ВыполнитьПакет();
	
	/////////////////////////////////////////////////////////////////////////////////////////
	// Источники данных для расчетов
	
	СписокИсточников=Новый СписокЗначений;
	СписокИсточников.ЗагрузитьЗначения(РезЗапроса[1].Выгрузить().ВыгрузитьКолонку(""ИсточникДанных""));
	
	СтрИсточники=ДеревоМетаданных.Строки.Найти(Метаданные.Справочники.ИсточникиДанныхДляРасчетов.Имя,""ПолноеИмяМетаданных"",Истина);
	
	Если Не СтрИсточники=Неопределено Тогда
		
		СтрИсточники.Выгружать=1;
		НЭлементОтбора = СтрИсточники.Отбор.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных""));
		ПолеОтбора = Новый ПолеКомпоновкиДанных(""Ссылка"");
		НЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
		НЭлементОтбора.Использование  = Истина;
		НЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
		НЭлементОтбора.ПравоеЗначение = СписокИсточников;
			
	КонецЕсли;
		
	/////////////////////////////////////////////////////////////////////////////////////////
	// Процедуры расчетов
	
	СписокПравил=Новый СписокЗначений;
	СписокПравил.ЗагрузитьЗначения(РезЗапроса[2].Выгрузить().ВыгрузитьКолонку(""ПравилоОбработки""));
		
	СтрПроцедурыРасчетов=ДеревоМетаданных.Строки.Найти(Метаданные.РегистрыСведений.ПроцедурыРасчетов.Имя,""ПолноеИмяМетаданных"",Истина);
	
	Если Не СтрПроцедурыРасчетов=Неопределено Тогда
		
		СтрПроцедурыРасчетов.Выгружать=1;
		НЭлементОтбора = СтрПроцедурыРасчетов.Отбор.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных""));
		ПолеОтбора = Новый ПолеКомпоновкиДанных(""НазначениеРасчетов"");
		НЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
		НЭлементОтбора.Использование  = Истина;
		НЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
		НЭлементОтбора.ПравоеЗначение = СписокПравил;
		
	КонецЕсли;
	
	/////////////////////////////////////////////////////////////////////////////////////////
	// Типы баз данных
	
	СписокБаз=Новый СписокЗначений;
	СписокБаз.ЗагрузитьЗначения(РезЗапроса[3].Выгрузить().ВыгрузитьКолонку(""ТипБД""));
		
	СтрТипыБД=ДеревоМетаданных.Строки.Найти(Метаданные.Справочники.ТипыБазДанных.Имя,""ПолноеИмяМетаданных"",Истина);
	
	Если Не СтрТипыБД=Неопределено Тогда
		// АСЦ Ситников++
		//СтрТипыБД.Выгружать=1;
		//НЭлементОтбора = СтрИсточники.Отбор.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных""));
		//ПолеОтбора = Новый ПолеКомпоновкиДанных(""Ссылка"");
		//НЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
		//НЭлементОтбора.Использование  = Истина;
		//НЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
		//НЭлементОтбора.ПравоеЗначение = СписокБаз;
		//
		//ВыделитьПодчиненные(ДеревоМетаданных,СтрТипыБД);
		// АСЦ Ситников--	
	КонецЕсли;

	//////////////////////////////////////////////////////////////////
	// РеквизитыИсточниковДанныхДляФормул
	
	СтрРеквизитыИсточников=ДеревоМетаданных.Строки.Найти(Метаданные.РегистрыСведений.РеквизитыИсточниковДанныхДляФормул.Имя,""ПолноеИмяМетаданных"",Истина);
	
	Если Не СтрРеквизитыИсточников=Неопределено Тогда
		
		СтрРеквизитыИсточников.Выгружать=1;
		НЭлементОтбора = СтрРеквизитыИсточников.Отбор.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных""));
		ПолеОтбора = Новый ПолеКомпоновкиДанных(""НазначениеРасчетов"");
		НЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
		НЭлементОтбора.Использование  = Истина;
		НЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
		НЭлементОтбора.ПравоеЗначение = СписокПравил;
		
	КонецЕсли;
	
	//////////////////////////////////////////////////////////////////
	// ТаблицаЗависимостейПоказателей
	
	СтрЗависимости=ДеревоМетаданных.Строки.Найти(Метаданные.РегистрыСведений.ТаблицаЗависимостейПоказателей.Имя,""ПолноеИмяМетаданных"",Истина);
	
	Если Не СтрЗависимости=Неопределено Тогда
		
		СтрЗависимости.Выгружать=1;
		НЭлементОтбора = СтрЗависимости.Отбор.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных""));
		ПолеОтбора = Новый ПолеКомпоновкиДанных(""НазначениеРасчетов"");
		НЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
		НЭлементОтбора.Использование  = Истина;
		НЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
		НЭлементОтбора.ПравоеЗначение = СписокПравил;
		
	КонецЕсли;
	
	//////////////////////////////////////////////////////////////////
	// НастройкаОбработкиОтчетов
	
	СтрНастройки=ДеревоМетаданных.Строки.Найти(Метаданные.РегистрыСведений.НастройкаОбработкиОтчетов.Имя,""ПолноеИмяМетаданных"",Истина);
	
	СтрНастройки.Выгружать=1;
	НЭлементОтбора = СтрНастройки.Отбор.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных""));
	ПолеОтбора = Новый ПолеКомпоновкиДанных(""ШаблонДокументаБД"");
	НЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
	НЭлементОтбора.Использование  = Истина;
	НЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
	НЭлементОтбора.ПравоеЗначение = СписокВидовОтчетов;
	
	НЭлементОтбора = СтрНастройки.Отбор.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных""));
	ПолеОтбора = Новый ПолеКомпоновкиДанных(""Организация"");
	НЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
	НЭлементОтбора.Использование  = Истина;
	НЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	НЭлементОтбора.ПравоеЗначение = Справочники.Организации.ПустаяСсылка();
	
	НЭлементОтбора = СтрНастройки.Отбор.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных""));
	ПолеОтбора = Новый ПолеКомпоновкиДанных(""Сценарий"");
	НЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
	НЭлементОтбора.Использование  = Истина;
	НЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	НЭлементОтбора.ПравоеЗначение = Справочники.Сценарии.ПустаяСсылка();
	
	НЭлементОтбора = СтрНастройки.Отбор.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных""));
	ПолеОтбора = Новый ПолеКомпоновкиДанных(""ПериодОтчета"");
	НЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
	НЭлементОтбора.Использование  = Истина;
	НЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	НЭлементОтбора.ПравоеЗначение = Справочники.Периоды.ПустаяСсылка();

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//Настройки бланков сводных таблиц
	Запрос.Текст=""ВЫБРАТЬ
	             |	БланкиОтчетов.Ссылка
	             |ИЗ
	             |	Справочник.БланкиОтчетов КАК БланкиОтчетов
	             |ГДЕ
	             |	БланкиОтчетов.РежимСводнойТаблицы = ИСТИНА
	             |	И БланкиОтчетов.Владелец В(&СписокСИерархией)
	             |	И БланкиОтчетов.ПометкаУдаления = ЛОЖЬ"";
				 
	Запрос.УстановитьПараметр(""СписокСИерархией"",СписокСИерархией);
	
	РезЗапроса=Запрос.ВыполнитьПакет();

	СписокБланковСт=Новый СписокЗначений;
	СписокБланковСт.ЗагрузитьЗначения(РезЗапроса[0].Выгрузить().ВыгрузитьКолонку(""Ссылка""));

	
	нСтр=ДеревоМетаданных.Строки.Найти(Метаданные.РегистрыСведений.НастройкиСтруктурыБланка.Имя,""ПолноеИмяМетаданных"",Истина);
	
	СтрокиОтбора=ДеревоМетаданных.Строки.НайтиСтроки(Новый Структура(""ПолноеИмяМетаданных"", Метаданные.РегистрыСведений.НастройкиСтруктурыБланка.Имя),Истина);
	Для Каждого нСтр Из СтрокиОтбора Цикл	
		   Если нСтр.Родитель.ПолноеИмяМетаданных = ""РегистрыСведений"" Тогда
			
			нСтр.Выгружать=1;
			НЭлементОтбора = нСтр.Отбор.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных""));
			ПолеОтбора = Новый ПолеКомпоновкиДанных(""Бланк"");
			НЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
			НЭлементОтбора.Использование  = Истина;
			НЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
			НЭлементОтбора.ПравоеЗначение = СписокБланковСт;
			
		КонецЕсли;	
	КонецЦикла;
	
	нСтр=ДеревоМетаданных.Строки.Найти(Метаданные.РегистрыСведений.НастройкиПараметровАналитик.Имя,""ПолноеИмяМетаданных"",Истина);
	
	Если Не нСтр=Неопределено Тогда
		
		нСтр.Выгружать=1;
		НЭлементОтбора = нСтр.Отбор.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных""));
		ПолеОтбора = Новый ПолеКомпоновкиДанных(""Бланк"");
		НЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
		НЭлементОтбора.Использование  = Истина;
		НЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
		НЭлементОтбора.ПравоеЗначение = СписокБланковСт;
		
	КонецЕсли;

	нСтр=ДеревоМетаданных.Строки.Найти(Метаданные.РегистрыСведений.НастройкиСоставаАналитикиБланков.Имя,""ПолноеИмяМетаданных"",Истина);
	
	Если Не нСтр=Неопределено Тогда
		
		нСтр.Выгружать=1;
		НЭлементОтбора = нСтр.Отбор.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных""));
		ПолеОтбора = Новый ПолеКомпоновкиДанных(""БланкОтчета"");
		НЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
		НЭлементОтбора.Использование  = Истина;
		НЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
		НЭлементОтбора.ПравоеЗначение = СписокБланковСт;
		
	КонецЕсли;
	
	нСтр=ДеревоМетаданных.Строки.Найти(Метаданные.РегистрыСведений.НастройкиМасштабаВремени.Имя,""ПолноеИмяМетаданных"",Истина);
	
	Если Не нСтр=Неопределено Тогда
		
		нСтр.Выгружать=1;
		НЭлементОтбора = нСтр.Отбор.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных""));
		ПолеОтбора = Новый ПолеКомпоновкиДанных(""Бланк"");
		НЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
		НЭлементОтбора.Использование  = Истина;
		НЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
		НЭлементОтбора.ПравоеЗначение = СписокБланковСт;
		
	КонецЕсли;

	нСтр=ДеревоМетаданных.Строки.Найти(Метаданные.РегистрыСведений.СохраненныеМакетыБланков.Имя,""ПолноеИмяМетаданных"",Истина);
	
	Если Не нСтр=Неопределено Тогда
		
		нСтр.Выгружать=1;
		НЭлементОтбора = нСтр.Отбор.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных""));
		ПолеОтбора = Новый ПолеКомпоновкиДанных(""Бланк"");
		НЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
		НЭлементОтбора.Использование  = Истина;
		НЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
		НЭлементОтбора.ПравоеЗначение = СписокБланковСт;
		
	КонецЕсли;

	
	//Ракурсы
	Запрос.Текст=""ВЫБРАТЬ
	             |	ВидыОтчетов.Ссылка
	             |ПОМЕСТИТЬ ОтчетыРакурсы
	             |ИЗ
	             |	Справочник.ВидыОтчетов КАК ВидыОтчетов
	             |ГДЕ
	             |	ВидыОтчетов.Ссылка В(&СписокСИерархией)
	             |	И ВидыОтчетов.ОбъектДляСогласованияЗначений = ЗНАЧЕНИЕ(Перечисление.ОбъектыСогласованияЗначенийПоказателейОтчетов.Ракурс)
	             |	И ВидыОтчетов.ПометкаУдаления = ЛОЖЬ
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ОбластиДанныхВидовОтчетов.Ссылка
	             |ИЗ
	             |	ОтчетыРакурсы КАК ОтчетыРакурсы
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбластиДанныхВидовОтчетов КАК ОбластиДанныхВидовОтчетов
	             |		ПО ОтчетыРакурсы.Ссылка = ОбластиДанныхВидовОтчетов.Владелец
	             |ГДЕ
	             |	ОбластиДанныхВидовОтчетов.ПометкаУдаления = Ложь"";
				 
	Запрос.УстановитьПараметр(""СписокСИерархией"",СписокСИерархией);
	
	РезЗапроса=Запрос.ВыполнитьПакет();

	СписокНастроекРакурсов=Новый СписокЗначений;
	СписокНастроекРакурсов.ЗагрузитьЗначения(РезЗапроса[1].Выгрузить().ВыгрузитьКолонку(""Ссылка""));

	нСтр=ДеревоМетаданных.Строки.Найти(Метаданные.РегистрыСведений.НастройкиСоставаОбластейВидовОтчетов.Имя,""ПолноеИмяМетаданных"",Истина);
	
	Если Не нСтр=Неопределено Тогда
		
		нСтр.Выгружать=1;
		НЭлементОтбора = нСтр.Отбор.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных""));
		ПолеОтбора = Новый ПолеКомпоновкиДанных(""КлючОбласти"");
		НЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
		НЭлементОтбора.Использование  = Истина;
		НЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
		НЭлементОтбора.ПравоеЗначение = СписокНастроекРакурсов;
		
	КонецЕсли;

	
	
	ЗначениеВРеквизитФормы(ДеревоМетаданных,""Объект.ДеревоМетаданных"");
	
	
	
КонецПроцедуры

Процедура ОчиститьОтборыСервер(Строка)
	
	Строка.Отбор.Элементы.Очистить();
	
	Строка.Выгружать=0;
	
	Если Строка.Строки.Количество()>0 Тогда
		
		Для Каждого ТекСтрока ИЗ Строка.Строки Цикл
			
			ОчиститьОтборыСервер(ТекСтрока);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // ОчиститьОтборы()

Процедура ПолучитьПолнуюИерархию(СписокСИерархией,СписокИсходный);
	
	Для Каждого Элемент ИЗ СписокИсходный Цикл
		
		ДобавитьРодителейВСписок(СписокСИерархией,Элемент.Значение);
		
	КонецЦикла;
	
КонецПроцедуры // ПолучитьПолнуюИерархию()

Процедура ЗаполнитьМассивПодчиненных(ОбъектМД,СтрокаДерева,МассивПодчиненных,ДеревоСправочнки,ТекстОтборПоВладельцу)
	
	Метаданные_ = Метаданные.НайтиПоПолномуИмени(""Справочник.""+СтрокаДерева.ПолноеИмяМетаданных); 
	
	Если НЕ (Метаданные_=Неопределено) Тогда
		
		Для Каждого Владелец ИЗ Метаданные_.Владельцы Цикл
			
			Если Владелец.Имя=ОбъектМД Тогда
				
				МассивПодчиненных.Добавить(СтрокаДерева);
				СтрокаДерева.ОтборПоВладельцу=?(ПустаяСтрока(ТекстОтборПоВладельцу),""Владелец"",ТекстОтборПоВладельцу+"".Владелец"");
				ПолучитьМассивПодчиненных(ДеревоСправочнки,СтрокаДерева,МассивПодчиненных,СтрокаДерева.ОтборПоВладельцу);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если СтрокаДерева.Строки.Количество()>0 Тогда
		
		Для Каждого Строка ИЗ СтрокаДерева.Строки Цикл
			
			ЗаполнитьМассивПодчиненных(ОбъектМД,Строка,МассивПодчиненных,ДеревоСправочнки,СтрокаДерева.ОтборПоВладельцу);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьМассивЗависимых

Процедура ПолучитьМассивПодчиненных(ДеревоСправочнки,ТекущаяСтрока,МассивПодчиненных,ТекстОтборПоВладельцу)
	
	Для Каждого Строка ИЗ ДеревоСправочнки.Строки Цикл
		
		ЗаполнитьМассивПодчиненных(ТекущаяСтрока.ПолноеИмяМетаданных,Строка,МассивПодчиненных,ДеревоСправочнки,ТекстОтборПоВладельцу);
		
	КонецЦикла;

КонецПроцедуры // ПолучитьМассивПодчиненных()

Процедура ВыделитьПодчиненные(ДеревоМетаданных,ТекущаяСтрока)
		
	ОбъектНаСервере = РеквизитФормыВЗначение(""Объект"");
	
	СтрокаСправочник=ДеревоМетаданных.Строки.Найти(""Справочники"",""ПолноеИмяМетаданных"",Истина);

	МассивПодчиненных=Новый Массив;
	
	ПолучитьМассивПодчиненных(СтрокаСправочник,ТекущаяСтрока,МассивПодчиненных,"""");
	
	Если МассивПодчиненных.Количество()>0 Тогда
		
		//
		Для Каждого СтрПодчиненный ИЗ МассивПодчиненных Цикл
			//		
			СтрПодчиненный.Выгружать=1;
			НЭлементОтбора = СтрПодчиненный.Отбор.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных""));
			ПолеОтбора = Новый ПолеКомпоновкиДанных(СтрПодчиненный.ОтборПоВладельцу);
			Для каждого стро Из ТекущаяСтрока.Отбор.Элементы Цикл
				
				НЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
				НЭлементОтбора.Использование  = Истина;
				НЭлементОтбора.ВидСравнения   = стро.ВидСравнения;
				НЭлементОтбора.ПравоеЗначение = стро.ПравоеЗначение;
				
			КонецЦикла;
			
			НЭлементОтбора = СтрПодчиненный.Отбор.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных""));
			ПолеОтбора = Новый ПолеКомпоновкиДанных(""ПометкаУдаления"");
			НЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
			НЭлементОтбора.Использование  = Истина;
			НЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
			НЭлементОтбора.ПравоеЗначение = Ложь;
				
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьРодителейВСписок(СписокСИерархией,Ссылка)
	
	Если (НЕ Ссылка=Неопределено) И ЗначениеЗаполнено(Ссылка.Родитель) Тогда
		
		Если СписокСИерархией.НайтиПоЗначению(Ссылка.Родитель)=Неопределено Тогда
			
			СписокСИерархией.Добавить(Ссылка.Родитель);
			
		КонецЕсли;
		
		ДобавитьРодителейВСписок(СписокСИерархией,Ссылка.Родитель);
		 
	КонецЕсли;
		
КонецПроцедуры // ДобавитьРодителейВСписок()

Процедура ПолучитьРекурсивныйСписокВидовОтчетов(ВидОтчета,СписокВидовОтчета)
	
	Запрос=Новый Запрос;
	Запрос.Текст=""ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеквизитыИсточниковДанныхДляФормул.ВидОтчетаОтбор КАК ВидОтчета,
	|	РеквизитыИсточниковДанныхДляФормул.ВидОтчета КАК ВидОтчетаИсходный
	|ИЗ
	|	РегистрСведений.РеквизитыИсточниковДанныхДляФормул КАК РеквизитыИсточниковДанныхДляФормул
	|ГДЕ
	|	РеквизитыИсточниковДанныхДляФормул.ВидОтчета = &ВидОтчета
	|	И НЕ РеквизитыИсточниковДанныхДляФормул.ВидОтчетаОтбор В (&СписокВидовОГтчета)
	|	И НЕ РеквизитыИсточниковДанныхДляФормул.ВидОтчетаОтбор = ЗНАЧЕНИЕ(Справочник.ВидыОтчетов.ПустаяСсылка)"";
	
	Запрос.УстановитьПараметр(""ВидОтчета"",ВидОтчета);
	Запрос.УстановитьПараметр(""СписокВидовОГтчета"",СписокВидовОтчета);
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		
		Если СписокВидовОтчета.НайтиПоЗначению(Результат.ВидОтчета)=Неопределено тогда
			
			СписокВидовОтчета.Добавить(Результат.ВидОтчета);
			ПолучитьРекурсивныйСписокВидовОтчетов(Результат.ВидОтчета,СписокВидовОтчета);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ПолучитьРекурсивныйСписокВидовОтчетов 

#Область ЗаполнениеОтчетовДляВыгрузки

&НаКлиенте
Процедура КоманднаяПанельОтчетовПоЭтапуПроцесса(Кнопка)
	
	ЭтапПроцесса = Неопределено;
	Оповещение = Новый ОписаниеОповещения(""Подключаемый_ОбработатьВыборЭтапаПроцесса"", ЭтотОбъект);
	ОткрытьФорму(""Справочник.ЭтапыУниверсальныхПроцессов.ФормаВыбора"",
					Новый Структура(""НазначениеПроцесса"",ПредопределенноеЗначение(""Перечисление.НазначенияУниверсальныхПроцессов.ПроцессПодготовкиОтчетности"")), ЭтаФорма,,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработатьВыборЭтапаПроцесса(Результат, ДополнительныеПараметры) Экспорт
    
    ЭтапПроцесса = Результат;
	
	Если ЭтапПроцесса <> Неопределено Тогда
               
        ЗаполнитьТаблицуОтборов(ЭтапПроцесса);
        
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетовПоШаблонуПроцесса(Кнопка)
		
	ШаблонПроцесса = Неопределено;

	Оповещение = Новый ОписаниеОповещения(""Подключаемый_ОбработатьВыборШаблонаПроцесса"", ЭтотОбъект);
	ОткрытьФорму(""Справочник.ШаблоныУниверсальныхПроцессов.ФормаВыбора"",
					Новый Структура(""Отбор"",Новый Структура(""НазначениеПроцесса"",ПредопределенноеЗначение(""Перечисление.НазначенияУниверсальныхПроцессов.ПроцессПодготовкиОтчетности""))),,,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработатьВыборШаблонаПроцесса(Результат, ДополнительныеПараметры) Экспорт
    
    ШаблонПроцесса = Результат;
    
    Если ШаблонПроцесса <> Неопределено Тогда
               
        ЗаполнитьТаблицуОтборов(ШаблонПроцесса);	
        
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельОтчетовПоГруппеОтчетов(Кнопка)
	
	ПараметрыФормы = Новый Структура(""Отбор"", Новый Структура(""ЭтоГруппа"", Истина));
	ГруппаОтчетов = Неопределено;

	Оповещение = Новый ОписаниеОповещения(""Подключаемый_ВыборГруппыОтчетов"", ЭтотОбъект);
	ОткрытьФорму(""Справочник.ВидыОтчетов.ФормаВыбора"", 
					ПараметрыФормы,,,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыборГруппыОтчетов(Результат, ДополнительныеПараметры) Экспорт
    
    ГруппаОтчетов = Результат;
    
    Если ГруппаОтчетов <> Неопределено Тогда
                
        ЗаполнитьТаблицуОтборов(ГруппаОтчетов);
        
    КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуОтборов(Параметр)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр(""Ссылка"", Параметр);	
	Запрос.УстановитьПараметр(""ОтборОтчетов"", РеквизитФормыВЗначение(""Объект.ВидыОтчетовДляВыгрузки"").Выгрузить().ВыгрузитьКолонку(""ВидОтчета""));
	
	Если ТипЗнч(Параметр) = Тип(""СправочникСсылка.ЭтапыУниверсальныхПроцессов"") Тогда
		
		Запрос.Текст = ""ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЭтапыПроцессовФормируемыеДокументы.ШаблонДокумента КАК Отчет
		|ИЗ
		|	Справочник.ЭтапыУниверсальныхПроцессов.ФормируемыеДокументы КАК ЭтапыПроцессовФормируемыеДокументы
		|ГДЕ
		|	ЭтапыПроцессовФормируемыеДокументы.Ссылка = &Ссылка
		|	И НЕ ЭтапыПроцессовФормируемыеДокументы.ШаблонДокумента В (&ОтборОтчетов)"";
		
	ИначеЕсли ТипЗнч(Параметр) = Тип(""СправочникСсылка.ШаблоныУниверсальныхПроцессов"") Тогда
		
		Запрос.Текст = ""ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЭтапыПроцессовФормируемыеДокументы.ШаблонДокумента КАК Отчет
		|ИЗ
		|	Справочник.ЭтапыУниверсальныхПроцессов.ФормируемыеДокументы КАК ЭтапыПроцессовФормируемыеДокументы
		|ГДЕ
		|	ЭтапыПроцессовФормируемыеДокументы.Ссылка.Владелец = &Ссылка
		|	И НЕ ЭтапыПроцессовФормируемыеДокументы.ШаблонДокумента В (&ОтборОтчетов)"";
		
	ИначеЕсли ТипЗнч(Параметр) = Тип(""СправочникСсылка.ВидыОтчетов"") Тогда
		
		Запрос.Текст = 
		""ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВидыОтчетов.Ссылка КАК Отчет
		|ИЗ
		|	Справочник.ВидыОтчетов КАК ВидыОтчетов
		|ГДЕ
		|	ВидыОтчетов.Ссылка В ИЕРАРХИИ(&Ссылка)
		|	И НЕ ВидыОтчетов.Ссылка В (&ОтборОтчетов)
		|	И ВидыОтчетов.ЭтоГруппа = ЛОЖЬ"";
					   
	КонецЕсли;
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		
		НоваяСтрока=Объект.ВидыОтчетовДляВыгрузки.Добавить();
		НоваяСтрока.ВидОтчета=Результат.Отчет;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьОолеОтчетов(Команда)
	
	Объект.ВидыОтчетовДляВыгрузки.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура АСЦ_ЗаполнитьДеревоНаСервере()
	ОтобратьДанныеДляВыгрузки();
КонецПроцедуры

&НаКлиенте
Процедура АСЦ_ЗаполнитьДерево(Команда)
	АСЦ_ЗаполнитьДеревоНаСервере();
КонецПроцедуры


#КонецОбласти



",
{4,9,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",0d915022-3a31-4d66-a6e0-152ac3e8b68a}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"ИмяФайлаВыгрузки",
{1,1,
{"ru","Имя файла выгрузки"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{4},0,"РежимВыгрузки",
{1,1,
{"ru","Режим выгрузки"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{6},0,"ТипОбъектовДляВыгрузки",
{1,1,
{"ru","Тип объектов для выгрузки"}
},
{"Pattern",
{"#",f5c65050-3bbb-11d5-b988-0050bae0a95d}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{7},0,"ИмяФайлаЗагрузки",
{1,1,
{"ru","Имя файла загрузки"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{8},0,"ВариантИспользованияКонсолиЗапросов",
{1,1,
{"ru","Вариант использования консоли запросов"}
},
{"Pattern",
{"N",1,0,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{5},0,"РежимРаботыНаКлиенте",
{1,1,
{"ru","Режим работы на клиенте"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{11},0,"ВариантВыгрузки",
{1,1,
{"ru","Вариант выгрузки"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{14},0,"ВариантВыгрузкиАО",
{1,1,
{"ru","Вариант выгрузки АО"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},1,
{0,
{2,
{1},
{0,3d59ca74-c2b7-4974-9121-677ab19f31bd}
},8,
{5,1,0,"ПолноеИмяМетаданных",
{1,1,
{"ru","Данные для выгрузки"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"Выгружать",
{1,1,
{"ru","Выгружать"}
},
{"Pattern",
{"N",1,0,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"ВыгружатьПриНеобходимости",
{1,1,
{"ru","Выгружать при необходимости"}
},
{"Pattern",
{"N",1,0,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"ИндексКартинки",
{1,1,
{"ru","Индекс картинки"}
},
{"Pattern",
{"N",2,0,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"Развернут",
{1,1,
{"ru","Развернут"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,6,0,"ДоступенОтбор",
{1,1,
{"ru","Доступен отбор"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,7,0,"Отбор",
{1,1,
{"ru","Отбор"}
},
{"Pattern",
{"#",f6841c6b-6c71-4c82-ae9e-d08b49db326c}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,8,0,"ОтборПоВладельцу",
{1,1,
{"ru","Отбор по владельцу"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0}
},0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KCTxvdXRwdXRQ
YXJhbWV0ZXJzLz4NCjwvU2V0dGluZ3M+}
},
{0,0},
{0,15,
{8,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВыгрузитьДанные",
{1,1,
{"ru","Выгрузить данные"}
},
{1,1,
{"ru","Выгрузить данные"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ВыгрузитьДанные",3,0,0,
{0,0},1,0,1,0,0},
{8,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗагрузитьДанные",
{1,1,
{"ru","Загрузить данные"}
},
{1,1,
{"ru","Загрузить данные"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ЗагрузитьДанные",3,0,0,
{0,0},1,0,1,0,0},
{8,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПересчитатьВыгружаемыеПоСсылке",
{1,1,
{"ru","Пересчитать выгружаемые по ссылке"}
},
{1,1,
{"ru","Пересчитать выгружаемые по ссылке"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{-10},"",-1,-1,1,0,""},"ПересчитатьВыгружаемыеПоСсылке",2,0,0,
{0,0},1,0,1,0,0},
{8,
{4,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОчиститьДополнительныеОбъектыВыгрузки",
{1,1,
{"ru","Очистить дополнительные объекты выгрузки"}
},
{1,1,
{"ru","Очистить дополнительные объекты выгрузки"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ОчиститьДополнительныеОбъектыВыгрузки",2,0,0,
{0,0},1,0,1,0,0},
{8,
{5,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ДобавитьИзЗапроса",
{1,1,
{"ru","Добавить из запроса"}
},
{1,1,
{"ru","Добавить из запроса"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ДобавитьИзЗапроса",3,0,0,
{0,0},1,0,1,0,0},
{8,
{6,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"НастройкиКонсолиЗапросов",
{1,1,
{"ru","Настройки консоли запросов"}
},
{1,1,
{"ru","Настройки консоли запросов"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"НастройкиКонсолиЗапросов",3,0,0,
{0,0},1,0,1,0,0},
{8,
{7,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СкопироватьОтбор",
{1,1,
{"ru","Скопировать отбор"}
},
{1,1,
{"ru","Скопировать отбор"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"СкопироватьОтбор",3,0,0,
{0,0},1,0,1,0,0},
{8,
{8,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"УдалитьОтбор",
{1,1,
{"ru","Удалить отбор"}
},
{1,1,
{"ru","Удалить отбор"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"УдалитьОтбор",3,0,0,
{0,0},1,0,1,0,0},
{8,
{9,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПоказатьВыгружаемыеДанные",
{1,1,
{"ru","Показать выгружаемые данные"}
},
{1,1,
{"ru","Показать выгружаемые данные"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПоказатьВыгружаемыеДанные",3,0,0,
{0,0},1,0,1,0,0},
{8,
{10,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОтобразитьНастройкиВыгрузки",
{1,1,
{"ru","Отобразить настройки выгрузки"}
},
{1,1,
{"ru","Отобразить настройки выгрузки"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ОтобразитьНастройкиВыгрузки",3,0,0,
{0,0},1,0,1,0,0},
{8,
{11,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОчиститьОолеОтчетов",
{1,1,
{"ru","Очистить"}
},
{1,1,
{"ru","Очистить ооле отчетов"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ОчиститьОолеОтчетов",3,0,0,
{0,0},1,0,1,0,0},
{8,
{12,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"КоманднаяПанельОтчетовПоГруппеОтчетов",
{1,1,
{"ru","По группе отчетов"}
},
{1,1,
{"ru","Командная панель отчетов по группе отчетов"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"КоманднаяПанельОтчетовПоГруппеОтчетов",3,0,0,
{0,0},1,0,1,0,0},
{8,
{13,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"КоманднаяПанельОтчетовПоШаблонуПроцесса",
{1,1,
{"ru","По шаблону процесса"}
},
{1,1,
{"ru","Командная панель отчетов по шаблону процесса"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"КоманднаяПанельОтчетовПоШаблонуПроцесса",3,0,0,
{0,0},1,0,1,0,0},
{8,
{14,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"КоманднаяПанельОтчетовПоЭтапуПроцесса",
{1,1,
{"ru","По этапу процесса"}
},
{1,1,
{"ru","Командная панель отчетов по этапу процесса"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"КоманднаяПанельОтчетовПоЭтапуПроцесса",3,0,0,
{0,0},1,0,1,0,0},
{8,
{15,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"АСЦ_ЗаполнитьДерево",
{1,1,
{"ru","АСЦ заполнить дерево"}
},
{1,1,
{"ru","АСЦ заполнить дерево"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"АСЦ_ЗаполнитьДерево",3,0,0,
{0,0},1,0,1,0,0}
},
{0,0},
{0,0},0,0}