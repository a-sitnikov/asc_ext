
Функция СведенияОВнешнейОбработке() Экспорт

	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.1.3.1");
	
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка();
	ПараметрыРегистрации.Версия = Метаданные().Комментарий;
	ПараметрыРегистрации.БезопасныйРежим = Ложь;
	
	НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
	НоваяКоманда.Представление = Метаданные().Представление();
	НоваяКоманда.Идентификатор = Метаданные().Имя;
	НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	НоваяКоманда.ПоказыватьОповещение = Ложь;

	Возврат ПараметрыРегистрации;

КонецФункции

Процедура Загрузить(Параметры, АдресРезультата) Экспорт
	
	МассивЭкзОтчетов = ПолучитьЭкземплярыОтчетов(Параметры.Период, Параметры.Организация);
	СформироватьБухДокументы(МассивЭкзОтчетов);
	
КонецПроцедуры	

Функция ПолучитьЭкземплярыОтчетов(Период, Организация)
	
	Запрос = Новый ПостроительЗапроса;
	Запрос.Параметры.Вставить("ВидОтчета",   "UNICUS");
	Запрос.Параметры.Вставить("Период",      Период);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.НастраиваемыйОтчет КАК Док
	|ГДЕ
	|	Док.ВидОтчета.Код = &ВидОтчета
	|	И Док.ПериодОтчета = &Период
	|	И НЕ Док.ПометкаУдаления
	|{ГДЕ
	|	Док.Организация.*}";
	
	Если ЗначениеЗаполнено(Организация) Тогда
		
		ЭлементОтбора = Запрос.Отбор.Добавить("Организация");
		ЭлементОтбора.Установить(Организация, Истина);
		
	КонецЕсли;	
	
	Запрос.Выполнить();
	Возврат Запрос.Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции	

Функция СформироватьБухДокументы(МассивЭкзОтчетов)
	
	Для каждого ДокументСсылка из МассивЭкзОтчетов Цикл
		
		ТаблицаДанных = ПолучитьТаблицуПоказателей(ДокументСсылка);
		
		Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылка, "Организация");
		
		Всего   = ТаблицаДанных.Количество();
		Счетчик = 0;
		
		Для каждого СтрокаТЗ из ТаблицаДанных Цикл
			
			СоздатьДокумент(Организация, СтрокаТЗ);
			
			Счетчик = Счетчик + 1;
			ПроцентВыполнения = Окр(100 * Счетчик / Всего, 2);
			ДлительныеОперации.СообщитьПрогресс(ПроцентВыполнения, "" + Организация + ": " + Счетчик + " из " + Всего);
			
		КонецЦикла;	
		
	КонецЦикла;	
	
КонецФункции	

Функция ПолучитьТаблицуПоказателей(ДокументСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("ЭкземплярОтчета", ДокументСсылка);
	Запрос.Параметры.Вставить("Показатель1",     "Данные_KVRub");
	Запрос.Параметры.Вставить("Показатель2",     "Данные_PAYDATE");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Выборка.Номенклатура КАК Номенклатура,
	|	Выборка.Контрагент КАК Контрагент,
	|	Выборка.Договор КАК Договор,
	|	МАКСИМУМ(Выборка.KV_Rub) КАК Сумма,
	|	МАКСИМУМ(Выборка.Pay_Date) КАК Дата
	|ИЗ
	|	(ВЫБРАТЬ
	|		Рег.Аналитика1 КАК Номенклатура,
	|		Рег.Аналитика2 КАК Контрагент,
	|		Рег.Аналитика3 КАК Договор,
	|		Рег.Значение КАК KV_Rub,
	|		NULL КАК Pay_Date
	|	ИЗ
	|		РегистрСведений.ЗначенияПоказателейОтчетов4 КАК Рег
	|	ГДЕ
	|		Рег.Версия.ЭкземплярОтчета В(&ЭкземплярОтчета)
	|		И Рег.Показатель.Код = &Показатель1
	|		И Рег.ИтоговоеЗначение = ЛОЖЬ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Рег.Аналитика1,
	|		Рег.Аналитика2,
	|		Рег.Аналитика3,
	|		NULL,
	|		Рег.Значение
	|	ИЗ
	|		РегистрСведений.ЗначенияПоказателейОтчетовНечисловые КАК Рег
	|	ГДЕ
	|		Рег.Версия.ЭкземплярОтчета В(&ЭкземплярОтчета)
	|		И Рег.Показатель.Код = &Показатель2
	|		И Рег.ИтоговоеЗначение = ЛОЖЬ) КАК Выборка
	|
	|СГРУППИРОВАТЬ ПО
	|	Выборка.Номенклатура,
	|	Выборка.Контрагент,
	|	Выборка.Договор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагент
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Возврат Таблица;
	
КонецФункции	

Функция СоздатьДокумент(Организация, Параметры)
	
	// документ будем искать по договору и по дате +- месяц
	// на случай если дата поменяется
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Договор", Параметры.Договор);
	Запрос.Параметры.Вставить("Дата1",   ДобавитьМесяц(Параметры.Дата, -1));
	Запрос.Параметры.Вставить("Дата2",   ДобавитьМесяц(Параметры.Дата, 1));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК Док
	|ГДЕ
	|	Док.ДоговорКонтрагента = &Договор
	|	И НЕ Док.ПометкаУдаления
	|	И Док.Дата МЕЖДУ &Дата1 И &Дата2";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		ДокументСсылка = Результат.Выгрузить()[0][0];
		ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
	Иначе
		ДокументОбъект = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
	КонецЕсли;	
	
	ДокументОбъект.Организация = Организация;
	ДокументОбъект.Дата        = Параметры.Дата;
	ДокументОбъект.Контрагент  = Параметры.Контрагент;
	ДокументОбъект.ДоговорКонтрагента = Параметры.Договор;
	
	ДокументОбъект.ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить();
	ДокументОбъект.ВидОперации     = Перечисления.ВидыОперацийРеализацияТоваров.Услуги;
	ДокументОбъект.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.РасчетыСПрочимиПоставщикамиИПодрядчиками;
	ДокументОбъект.СчетУчетаРасчетовПоАвансам     = ПланыСчетов.Хозрасчетный.РасчетыСПрочимиПоставщикамиИПодрядчиками;
	ДокументОбъект.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически;
	
	ДокументОбъект.Услуги.Очистить();
	
	ПараметрыОбъекта = Новый Структура;
	ПараметрыОбъекта.Вставить("Дата",        Параметры.Дата);
	ПараметрыОбъекта.Вставить("Организация", Организация);
	
	СведенияОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОНоменклатуре(Параметры.Номенклатура, ПараметрыОбъекта);
	
	НоваяСтрока = ДокументОбъект.Услуги.Добавить();
	НоваяСтрока.Номенклатура = Параметры.Номенклатура;
	НоваяСтрока.Содержание   = СведенияОНоменклатуре.НаименованиеПолное;
	НоваяСтрока.Сумма        = Параметры.Сумма;
	НоваяСтрока.СтавкаНДС    = Перечисления.СтавкиНДС.БезНДС;
	НоваяСтрока.СчетДоходов  = ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД;
	НоваяСтрока.СчетРасходов = ПланыСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД;
	НоваяСтрока.СчетУчетаНДСПоРеализации = ПланыСчетов.Хозрасчетный.Продажи_НДС;
	НоваяСтрока.Субконто     = СведенияОНоменклатуре.НоменклатурнаяГруппа;
	
	ДокументОбъект.Записать();
	Возврат ДокументОбъект.Ссылка;
	
КонецФункции	

