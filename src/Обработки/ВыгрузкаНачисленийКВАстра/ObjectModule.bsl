#Область ОписаниеОбработки

Функция СведенияОВнешнейОбработке() Экспорт

	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.2.2.1");
	
	// HKEY_LOCAL_MACHINE\SOFTWARE\Classes\ADODB.Connection
	Разрешение = РаботаВБезопасномРежиме.РазрешениеНаСозданиеCOMКласса("ADODB.Connection", "{00000514-0000-0010-8000-00AA006D2EA4}");
	ПараметрыРегистрации.Разрешения.Добавить(Разрешение);
	
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка();
	ПараметрыРегистрации.Версия = Метаданные().Комментарий;
	ПараметрыРегистрации.БезопасныйРежим = Истина;
	ПараметрыРегистрации.Информация = "Выгрузка документов РТУ по ОФУ в Астра";
	
	НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
	НоваяКоманда.Представление = Метаданные().Представление() + " - Открыть форму";
	НоваяКоманда.Идентификатор = Метаданные().Имя + "Форма";
	НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	НоваяКоманда.ПоказыватьОповещение = Ложь;
	
	// Для запуска задания по каждой базе по отдельному расписанию
	МассивБаз = ПолучитьМассивБаз();
	Счетчик   = 0 ;
	Для каждого База из МассивБаз Цикл
		
		Счетчик = Счетчик + 1;
		
		НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
		НоваяКоманда.Представление = "Выгрузка документов РТУ по ОФУ (" + База + ")";
		НоваяКоманда.Идентификатор = "ВыгрузитьДокументыБаза" + Счетчик;
		НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
		НоваяКоманда.ПоказыватьОповещение = Ложь;
		
	КонецЦикла;

	Возврат ПараметрыРегистрации;

КонецФункции

Процедура ВыполнитьКоманду(ИдентификаторКоманды, ПараметрыКоманды = Неопределено) Экспорт 
	
	НомерБазы = Число(Прав(ИдентификаторКоманды, 1));
	
	Параметры = Новый Структура;
	Параметры.Вставить("База", ПолучитьБазу(НомерБазы));
	Параметры.Вставить("ВыводитьСообщения", Ложь);
	
	ЗаписьЖурналаРегистрации("Выгрузка РТУ по ОФУ в Астра",
		УровеньЖурналаРегистрации.Информация, , , "Номер: " + НомерБазы +", база: " + Строка(Параметры.База));
	
	ВыгрузитьДокументы(Параметры);
		
КонецПроцедуры	

#КонецОбласти

Функция ПолучитьМассивБаз()
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("ТипБД", "Astra");
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Спр.Наименование КАК Наименование
	|ИЗ
	|	Справочник.ВнешниеИнформационныеБазы КАК Спр
	|ГДЕ
	|	Спр.ТипБД.Наименование = &ТипБД
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Наименование");
	
КонецФункции

Функция ПолучитьБазу(НомерБазы)
	
	Если ЗначениеЗаполнено(НомерБазы) Тогда
		МассивБаз = ПолучитьМассивБаз();
		База = Справочники.ВнешниеИнформационныеБазы.НайтиПоНаименованию(МассивБаз[НомерБазы - 1]);
	Иначе
		База = Неопределено;
	КонецЕсли;	
	
	Возврат База;
	
КонецФункции	

Процедура ВыгрузитьДокументы(Параметры, АдресРезультата = Неопределено) Экспорт
	
	Тест_КоличествоСтрок = 0;
	Параметры.Свойство("Тест_КоличествоСтрок", Тест_КоличествоСтрок);
	
	Тест_НеУдалятьРегистрацию = Ложь;
	Параметры.Свойство("Тест_НеУдалятьРегистрацию", Тест_НеУдалятьРегистрацию);
	
	ОтборДокумент = Неопределено;
	Параметры.Свойство("ОтборДокумент", ОтборДокумент);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Рег.ИспользуемаяИБ КАК База,
	|	Рег.НастройкаСоответствия КАК НастройкаСоответствия,
	|	Рег.Элемент КАК Элемент,
	|	ЕСТЬNULL(Док1.Дата, Док2.Дата) КАК Дата
	|ИЗ
	|	РегистрСведений.ИзмененныеОбъектыДляВыгрузки КАК Рег
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АСЦ_ПлановоеНачислениеКВ КАК Док1
	|		ПО Рег.Элемент = Док1.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АСЦ_ОтчетПосредникаУпр КАК Док2
	|		ПО Рег.Элемент = Док2.Ссылка
	|ГДЕ
	|	Рег.НастройкаСоответствия В(&НастройкаСоответствия)
	|{ГДЕ
	|	Рег.ИспользуемаяИБ,
	|	Рег.Элемент КАК Документ,
	|	(ЕСТЬNULL(Док1.Дата, Док2.Дата)) КАК Дата}";
	
	Если ЗначениеЗаполнено(Тест_КоличествоСтрок) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ПЕРВЫЕ", "ПЕРВЫЕ " + Формат(Тест_КоличествоСтрок, "ЧГ=0"));
	КонецЕсли;	
	
	МассивНастроек = Новый Массив;
	МассивНастроек.Добавить(Справочники.СоответствиеВнешнимИБ.НайтиПоНаименованию("КВ банков"));
	
	Запрос = Новый ПостроительЗапроса;
	Запрос.Параметры.Вставить("НастройкаСоответствия", МассивНастроек);
	Запрос.Текст = ТекстЗапроса;
	
	Если ЗначениеЗаполнено(Параметры.База) Тогда
		
		ЭлементОтбора = Запрос.Отбор.Добавить("ИспользуемаяИБ");
		ЭлементОтбора.Установить(Параметры.База, Истина);
		
	Иначе
		
		ТипБД = Справочники.ТипыБазДанных.НайтиПоНаименованию("Astra");
		
		ЭлементОтбора = Запрос.Отбор.Добавить("ИспользуемаяИБ.ТипБД");
		ЭлементОтбора.Установить(ТипБД, Истина);
		
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ОтборДокумент) Тогда
		ЭлементОтбора = Запрос.Отбор.Добавить("Документ");
		ЭлементОтбора.Установить(ОтборДокумент, Истина);
	КонецЕсли;	
		
	ДатаНач = Неопределено;
	Параметры.Свойство("ДатаНач", ДатаНач);
	Если ЗначениеЗаполнено(ДатаНач) Тогда
		ЭлементОтбора = Запрос.Отбор.Добавить("Дата");
		ЭлементОтбора.ВидСравнения =  ВидСравнения.БольшеИлиРавно;
		ЭлементОтбора.Значение     =  ДатаНач;
		ЭлементОтбора.Использование = Истина;
	КонецЕсли;	
	
	ДатаКон = Неопределено;
	Параметры.Свойство("ДатаКон", ДатаКон);
	Если ЗначениеЗаполнено(ДатаКон) Тогда
		ЭлементОтбора = Запрос.Отбор.Добавить("Дата");
		ЭлементОтбора.ВидСравнения =  ВидСравнения.МеньшеИлиРавно;
		ЭлементОтбора.Значение     =  ДатаКон;
		ЭлементОтбора.Использование = Истина;
	КонецЕсли;	
	
	Запрос.Выполнить();
	Выборка = Запрос.Результат.Выбрать();
	
	Кэш = Новый Структура;
	Кэш.Вставить("Соединения", Новый Соответствие);
	Кэш.Вставить("Базы",       Новый Соответствие);
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("НеУдалятьРегистрацию", Тест_НеУдалятьРегистрацию);
	
	Счетчик = 0;
	Всего   = Выборка.Количество();
	
	Пока Выборка.Следующий() Цикл
		
		Если Параметры.ВыводитьСообщения Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = Строка(Выборка.Элемент);
			Сообщение.КлючДанных = Выборка.Элемент;
			Сообщение.Сообщить();
		КонецЕсли;
		
		АСЦ_ВыгрузкаВАстра.ВыгрузитьДокументНачислениеКВ(Выборка.Элемент, Выборка.База, Выборка.НастройкаСоответствия, Кэш, Тест_НеУдалятьРегистрацию);
		
		Счетчик = Счетчик + 1;
		ПроцентВыполнения = Окр(100 * Счетчик / Всего, 2);
		ДлительныеОперации.СообщитьПрогресс(ПроцентВыполнения, "Выгружено " + Счетчик + " из " + Всего);
		
	КонецЦикла;	
	
	// Закроем все соединения
	Для каждого КлючИЗначение из Кэш.Соединения Цикл
		
		Попытка
			КлючИЗначение.Значение.Close();
		Исключение
		КонецПопытки;	
		
	КонецЦикла;	
	
КонецПроцедуры

