#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ДополнительнаяОбработкаСсылка", ДополнительнаяОбработкаСсылка);
	
	ВыполнятьвФоне = Истина;
	База = Справочники.ВнешниеИнформационныеБазы.НайтиПоНаименованию("Юникус");
	ВариантЗагрузки = "ПериодОплаты";
	
	ОбновитьДатуНаСервере();	
	
	Если НЕ ЗначениеЗаполнено(ДатаПоследненгоДокумента) Тогда
		ДатаПоследненгоДокумента = '2018-01-01';
	КонецЕсли;	
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаМетаданные = ОбработкаОбъект.Метаданные();
	
	АвтоЗаголовок = Ложь;
	Заголовок     = ОбработкаМетаданные.Представление() + ", версия: " + ОбработкаМетаданные.Комментарий;
	ИмяТаблицы    = "unicusweb.view_asc_pay_contract_hist";
	
	ПроверитьЗаданиеНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Элементы.Индикатор.Видимость = ВыполнятьвФоне;
	
	УстановитьТекстГруппыОтлдадки(ЭтаФорма);
	УстановитьТекстГруппыОтбора(ЭтаФорма);
	
	УстановитьВидимость(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекстГруппыОтлдадки(ЭтаФорма)
	
	МассивСтрок = Новый Массив;
	Если ЭтаФорма.Тест_КоличествоСтрокИспользование
		И ЗначениеЗаполнено(ЭтаФорма.Тест_КоличествоСтрок) Тогда
		МассивСтрок.Добавить("колво строк: " + ЭтаФорма.Тест_КоличествоСтрок);
	КонецЕсли;	
	
	Если ЭтаФорма.ПерезаполнятьДокументы Тогда
		МассивСтрок.Добавить("перезаполнять документы");
	КонецЕсли;	
	
	Если ЭтаФорма.ПерезаполнятьДоговоры Тогда
		МассивСтрок.Добавить("перезаполнять договоры");
	КонецЕсли;	
	
	ЭтаФорма.ТекстГруппыОтладки = СтрСоединить(МассивСтрок, ", ");
	
КонецПроцедуры	

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекстГруппыОтбора(ЭтаФорма)
	
	МассивСтрок = Новый Массив;
	Если ЭтаФорма.ОтборОрганизацияИспользование Тогда
		МассивСтрок.Добавить("организация: " + ЭтаФорма.ОтборОрганизация);
	КонецЕсли;	
	
	Если ЭтаФорма.ОтборДоговорИспользование Тогда
		МассивСтрок.Добавить("договор: " + ЭтаФорма.ОтборДоговор);
	КонецЕсли;	
	
	Если ЭтаФорма.ОтборVINИспользование Тогда
		МассивСтрок.Добавить("VIN: " + ЭтаФорма.ОтборVIN);
	КонецЕсли;	
	
	Если ЭтаФорма.ОтборIDИспользование Тогда
		МассивСтрок.Добавить("id: " + ЭтаФорма.ОтборID);
	КонецЕсли;	
	
	Если ЭтаФорма.ОтборТипПлатежаИспользование Тогда
		МассивСтрок.Добавить("ттип платежа: " + ЭтаФорма.ОтборТипПлатежа);
	КонецЕсли;	
	
	ЭтаФорма.ТекстГруппыОтбора = СтрСоединить(МассивСтрок, ", ");
	
КонецПроцедуры	

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимость(ЭтаФорма)
	
	Если ЭтаФорма.Вариантзагрузки = "ОтПоследнейДаты" Тогда
		ЭтаФорма.Элементы.Период.Видимость = Ложь;
		ЭтаФорма.Элементы.ГруппаДатаПоследненгоДокумента.Видимость = Истина;
	Иначе
		ЭтаФорма.Элементы.Период.Видимость = Истина;
		ЭтаФорма.Элементы.ГруппаДатаПоследненгоДокумента.Видимость = Ложь;
	КонецЕсли;	
	
КонецПроцедуры	

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура Тест_КоличествоСтрокИспользованиеПриИзменении(Элемент)
	
	УстановитьТекстГруппыОтлдадки(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КолвоСтрокПриИзменении(Элемент)
	
	Тест_КоличествоСтрокИспользование = Истина;
	УстановитьТекстГруппыОтлдадки(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	
	ОтборОрганизацияИспользование = Истина;
	УстановитьТекстГруппыОтбора(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияИспользованиеПриИзменении(Элемент)
	
	УстановитьТекстГруппыОтбора(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборДоговорИспользованиеПриИзменении(Элемент)
	
	УстановитьТекстГруппыОтбора(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборДоговорПриИзменении(Элемент)
	
	ОтборДоговорИспользование = Истина;
	УстановитьТекстГруппыОтбора(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборVINИспользованиеПриИзменении(Элемент)
	
	УстановитьТекстГруппыОтбора(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборVINПриИзменении(Элемент)
	
	ОтборVINИспользование = Истина;
	УстановитьТекстГруппыОтбора(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборIDИспользованиеПриИзменении(Элемент)
	
	УстановитьТекстГруппыОтбора(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборIDПриИзменении(Элемент)
	
	ОтборIDИспользование = Истина;
	УстановитьТекстГруппыОтбора(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборТипПлатежаИспользованиеПриИзменении(Элемент)
	
	УстановитьТекстГруппыОтбора(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборТипПлатежаПриИзменении(Элемент)
	
	ОтборТипПлатежаИспользование = Истина;
	УстановитьТекстГруппыОтбора(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантЗагрузкиПриИзменении(Элемент)
	
	УстановитьВидимость(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДату(Команда)
	ОбновитьДатуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбновитьДатуНаСервере()
	
	Попытка
		ДатаПоследненгоДокумента = ХранилищеОбщихНастроек.Загрузить("ЗагрузкаДокументовИзUnicus", "ДатаПоследнегоДокумента",, "ЗагрузкаДокументовИзUnicus");
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнятьвФонеПриИзменении(Элемент)
	
	Элементы.Индикатор.Видимость = ВыполнятьвФоне;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнятьДокументыПриИзменении(Элемент)
	УстановитьТекстГруппыОтлдадки(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнятьДоговорыПриИзменении(Элемент)
	УстановитьТекстГруппыОтлдадки(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область ФоновоеВыполнение

&НаКлиенте
Процедура ПрогрессВыполнения(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.Статус = "Выполняется" 
		ИЛИ Результат.Статус = "Выполнено" Тогда
		
		РезультатЗадания = ПрочитатьПрогрессИСообщения(Результат.ИдентификаторЗадания);
		Если РезультатЗадания.Прогресс <> Неопределено Тогда
			Индикатор = РезультатЗадания.Прогресс.Процент;
			Текст     = РезультатЗадания.Прогресс.Текст;
		КонецЕсли;
		
		Если РезультатЗадания.Сообщения <> Неопределено Тогда
			Для Каждого Сообщение Из РезультатЗадания.Сообщения Цикл
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Сообщение.Текст, Сообщение.КлючДанных, Сообщение.Поле, Сообщение.ПутьКДанным);
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПрочитатьПрогрессИСообщения(ИдентификаторЗадания)
	Возврат ДлительныеОперации.ОперацияВыполнена(ИдентификаторЗадания, Истина, Истина, Истина);
КонецФункции

&НаКлиенте
Процедура ПослеФоновойОбработкиДанных(Задание, ДополнительныеПараметры) Экспорт
	
	Если Задание = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Если Задание.Статус = "Ошибка" Тогда
		
		ТекстОшибки = Задание.КраткоеПредставлениеОшибки;
		
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		
	ИначеЕсли Задание.Статус = "Выполнено" Тогда
		
		РезультатЗадания = ПрочитатьПрогрессИСообщения(ИдентификаторЗадания);
		Если РезультатЗадания.Сообщения <> Неопределено Тогда
			
			Для Каждого Сообщение Из РезультатЗадания.Сообщения Цикл
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Сообщение.Текст, Сообщение.КлючДанных, Сообщение.Поле, Сообщение.ПутьКДанным);
			КонецЦикла;
			
		КонецЕсли;
		
		Состояние("Обработка завершена");
		ЗавершениеЗагрузки(Задание.АдресРезультата);
		
	КонецЕсли;
	
	//Элементы.ФормаЗагрузить.Доступность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ЗавершениеЗагрузки(АдресРезультата)
	
	Текст = "Обработка завершена";
	ОбновитьДатуНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область Реализация

&НаКлиенте
Процедура ЗагрузитьРеализации(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьРеализацииОтвет", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, "Загрузить реализации?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьРеализацииОтвет(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	//Элементы.ФормаЗагрузить.Доступность = Ложь;
	
	ОповещениеОПрогрессеВыполнения = Новый ОписаниеОповещения("ПрогрессВыполнения", ЭтотОбъект);
	Задание = ЗагрузитьРеализацииСервер();
	
	Если Задание <> Неопределено Тогда
		
		НастройкиОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		НастройкиОжидания.ВыводитьОкноОжидания = Ложь;
		НастройкиОжидания.ПолучатьРезультат    = Истина;
		НастройкиОжидания.ВыводитьСообщения    = Ложь;
		НастройкиОжидания.Интервал = 1;
		НастройкиОжидания.ОповещениеОПрогрессеВыполнения  = ОповещениеОПрогрессеВыполнения;
		НастройкиОжидания.ОповещениеПользователя.Показать = Ложь;
		
		Обработчик = Новый ОписаниеОповещения("ПослеФоновойОбработкиДанных", ЭтотОбъект);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(Задание, Обработчик, НастройкиОжидания);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруПараметров()
	
	СтруктураПараметров = Новый Структура;
	
	СтруктураПараметров.Вставить("ВариантЗагрузки",    ВариантЗагрузки);
	Если ВариантЗагрузки = "ОтПоследнейДаты" Тогда
		СтруктураПараметров.Вставить("ДатаНач",        ДатаПоследненгоДокумента);
		СтруктураПараметров.Вставить("ДатаКон",        '2100-01-01');
	Иначе
		СтруктураПараметров.Вставить("ДатаНач",        Период.ДатаНачала);
		СтруктураПараметров.Вставить("ДатаКон",        Период.ДатаОкончания);
	КонецЕсли;	
	СтруктураПараметров.Вставить("База",               База);
	СтруктураПараметров.Вставить("ПерезаполнятьДокументы", ПерезаполнятьДокументы);
	СтруктураПараметров.Вставить("ПерезаполнятьДоговоры",  ПерезаполнятьДоговоры);
	СтруктураПараметров.Вставить("ВыводитьСообщения",      ВыводитьСообщения);
	СтруктураПараметров.Вставить("ОтложенноеПроведение",   ОтложенноеПроведение);
	СтруктураПараметров.Вставить("ЗагружатьДокументыОплаты", ЗагружатьДокументыОплаты);
	
	Если ОтборОрганизацияИспользование Тогда
		СтруктураПараметров.Вставить("ОтборОрганизация",   ОтборОрганизация);
	КонецЕсли;
	
	Если ОтборДоговорИспользование Тогда
		СтруктураПараметров.Вставить("ОтборДоговор",       ОтборДоговор);
	КонецЕсли;
	
	Если ОтборVINИспользование Тогда
		СтруктураПараметров.Вставить("ОтборVIN",           ОтборVIN);
	КонецЕсли;
	
	Если ОтборIDИспользование Тогда
		СтруктураПараметров.Вставить("ОтборID",           ОтборID);
	КонецЕсли;
	
	Если ОтборТипПлатежаИспользование Тогда
		СтруктураПараметров.Вставить("ОтборТипПлатежа",   ОтборТипПлатежа);
	КонецЕсли;
	
	Если Тест_КоличествоСтрокИспользование Тогда
		СтруктураПараметров.Вставить("Тест_КоличествоСтрок", Тест_КоличествоСтрок);
	КонецЕсли;	
	
	СтруктураПараметров.Вставить("ИмяТаблицы", ИмяТаблицы);
	
	СтруктураПараметров.Вставить("ИдентификаторФормы", ЭтаФорма.УникальныйИдентификатор);
	СтруктураПараметров.Вставить("ИмяФормы",           ЭтаФорма.ИмяФормы);
	
	Возврат СтруктураПараметров;
	
КонецФункции	

&НаСервере
Функция ЗагрузитьРеализацииСервер()
	
	СтруктураПараметров = ПолучитьСтруктуруПараметров();
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	Индикатор = 0;
	Текст     = "";
	
	Если ВыполнятьвФоне Тогда
		
		Если ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
			Попытка
				ЗаданиеВыполнено = ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
			Исключение
				ЗаданиеВыполнено = Истина;
			КонецПопытки;
		Иначе
			ЗаданиеВыполнено = Истина;
		КонецЕсли;
		Если ЗаданиеВыполнено = Ложь Тогда
			// Надо ждать
			Возврат Неопределено;
		КонецЕсли;
		
		ВыполняемыйМетод = "ДлительныеОперации.ВыполнитьПроцедуруМодуляОбъектаОбработки";
		
		ЭтоВнешняяОбработка = Не Метаданные.Обработки.Содержит(ОбработкаОбъект.Метаданные());
		НаименованиеЗадания = ОбработкаОбъект.Метаданные().Представление();
	
		ПараметрыЗадания = Новый Структура;
		ПараметрыЗадания.Вставить("ИмяОбработки",                  ОбработкаОбъект.ИспользуемоеИмяФайла);
		ПараметрыЗадания.Вставить("ИмяМетода",                     "ЗагрузитьРеализации");
		ПараметрыЗадания.Вставить("ПараметрыВыполнения",           СтруктураПараметров);
		ПараметрыЗадания.Вставить("ЭтоВнешняяОбработка",           ЭтоВнешняяОбработка);
		ПараметрыЗадания.Вставить("ДополнительнаяОбработкаСсылка", ДополнительнаяОбработкаСсылка);
		
		ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(ЭтаФорма.УникальныйИдентификатор);
		ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеЗадания;
		ПараметрыВыполнения.ЗапуститьВФоне = Истина;
		
		РезультатФоновогоЗадания = ДлительныеОперации.ВыполнитьВФоне(ВыполняемыйМетод, ПараметрыЗадания, ПараметрыВыполнения);
		ИдентификаторЗадания = РезультатФоновогоЗадания.ИдентификаторЗадания;
		Возврат РезультатФоновогоЗадания;
		
	Иначе
		
		АдресРезультата = ПоместитьВоВременноеХранилище(Неопределено, ЭтаФорма.УникальныйИдентификатор);
		ОбработкаОбъект.ЗагрузитьРеализации(СтруктураПараметров, АдресРезультата);
		ЗавершениеЗагрузки(АдресРезультата);
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьРеализации(Команда)
	
	ОткрытьФорму("Документ.РеализацияТоваровУслуг.ФормаСписка");
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ПоказатьЗапрос(Команда)
	
	ТекстЗапроса = ПоказатьЗапросНаСервере();
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.УстановитьТекст(ТекстЗапроса);
	ТекстовыйДокумент.Показать("Запрос UNICUS");
	
КонецПроцедуры

&НаСервере
Функция ПоказатьЗапросНаСервере()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	СтруктураПараметров = ПолучитьСтруктуруПараметров();
	ТекстЗапроса = ОбработкаОбъект.ПолучитьТекстЗапроса(Период.ДатаНачала, Период.ДатаОкончания, СтруктураПараметров);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#Область ФоновыеЗадания

&НаСервере
Процедура ПроверитьЗаданиеНаСервере()
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Наименование", "Загрузка документов реализация из Unicus");
	СтруктураОтбора.Вставить("Состояние", СостояниеФоновогоЗадания.Активно);
	
	Задания = ФоновыеЗадания.ПолучитьФоновыеЗадания(СтруктураОтбора);
	Если Задания.Количество() > 0 Тогда
		Текст = "Задание уже выполняется";
		Элементы.ФормаЗагрузить.Доступность = Ложь;
		ИдентификаторЗадания = Задания[0].УникальныйИдентификатор;
	Иначе
		Текст = "";
		Элементы.ФормаЗагрузить.Доступность = Истина;
		ИдентификаторЗадания = Неопределено;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗадание(Команда)
	ПроверитьЗаданиеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПрерватьЗаданиеНаСервере()
	
	Если ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		Задание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторЗадания);
		Если Задание <> Неопределено Тогда
			Задание.Отменить();
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПрерватьЗадание(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПрерватьЗаданиеОтвет", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, "Прервать фоновое задение?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрерватьЗаданиеОтвет(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ПрерватьЗаданиеНаСервере();
	ПроверитьЗаданиеНаСервере();
	
КонецПроцедуры

#КонецОбласти
