
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	База = Справочники.ВнешниеИнформационныеБазы.НайтиПоНаименованию("Юникус");
	Договор = Параметры.Договор;
	Если ЗначениеЗаполнено(Договор) Тогда
		Заголовок = "Юникус: " + Договор;
		ОбновитьНаСервере();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаСервере()
	
	ТекстЗапроса =
	"SELECT
	|	*
	|FROM
	|	unicusweb.V_ASC_PAY_CONTRACT
	|WHERE
	|	CASE WHEN POLICY_NUMBER LIKE POLICY_SERIA || '%'
	|		THEN REPLACE(POLICY_NUMBER, ' ', '')
	|		ELSE REPLACE(POLICY_SERIA, ' ', '') || REPLACE(POLICY_NUMBER, ' ', '')
	|	END = '" + СокрЛП(Договор) + "'
	|ORDER BY
	|	PAY_DATE Desc";
	
	СтрокаСоединения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(База, "СтрокаПодключения");
	
	Соединение = Новый COMОбъект("ADODB.Connection");
	Соединение.Open(СтрокаСоединения);
	
	Таблица = АСЦ_ОбщийМодуль.ВыполнитьЗапросADO(Соединение, ТекстЗапроса);
	ТалицаОплаты.Загрузить(Таблица);
	
	МассивОшибокContact = Новый Массив;
	Счетчик = 0;
	Для каждого СтрокаТЗ из ТалицаОплаты Цикл
		
		Счетчик = Счетчик + 1;
		СтрокаТЗ.НомерСтроки = Счетчик;
		СтрокаТЗ.Ошибка = 1;
		
		Если НЕ ЗначениеЗаполнено(СтрокаТЗ.AGENT) Тогда
			МассивОшибокContact.Добавить("В строке " + Счетчик + " не заполнена организация"); 
			СтрокаТЗ.Ошибка = 0;
		КонецЕсли;	
		
	КонецЦикла;	
	
	Если МассивОшибокContact.Количество() > 0 Тогда
		ТекстОшибкиContact = СтрСоединить(МассивОшибокContact, Символы.ПС);
	КонецЕсли;	
	Элементы.ТекстОшибкиContact.Видимость = (МассивОшибокContact.Количество() > 0);
	
	ТекстЗапроса =
	"SELECT
	|	*
	|FROM
	|	unicusweb.V_ASC_ACT
	|WHERE
	|	ACT_ID IN 
	|		(SELECT 
	|			ACT_ID
	|		 FROM
	|			unicusweb.V_ASC_ACT
	|		 WHERE
	|			COL4 || COL5 = '" + Договор + "')
	|	AND (COL1 IS NOT NULL 
	|		 OR COL4 || COL5 = '" + Договор + "')";
	
	СтрокаСоединения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(База, "СтрокаПодключения");
	
	Соединение = Новый COMОбъект("ADODB.Connection");
	Соединение.Open(СтрокаСоединения);
	
	Таблица = АСЦ_ОбщийМодуль.ВыполнитьЗапросADO(Соединение, ТекстЗапроса);
	ТаблицаАкты.Загрузить(Таблица);
	
	Для каждого СтрокаТЗ из ТаблицаАкты Цикл
		
		СтрокаТЗ.Ошибка = 1;
		
		Если ЗначениеЗаполнено(СтрокаТЗ.COL4)
			И НЕ ЗначениеЗаполнено(СтрокаТЗ.DATE_SIGN) Тогда
			
			СтрокаТЗ.Ошибка = 0;
			
		КонецЕсли;	
		
	КонецЦикла;	
	
	Элементы.ТаблицаАкты.ТекущаяСтрока = Неопределено;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	Если ЗначениеЗаполнено(Договор) Тогда
		Настройки.Удалить("Договор");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиРТУ(Команда)
	
	ТекущиеДанные = Элементы.ТалицаОплаты.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Ссылка = ПолучитьРТУ(ТекущиеДанные.PAY_ID);
	Если ЗначениеЗаполнено(Ссылка) Тогда	
		ПоказатьЗначение(, Ссылка);
	Иначе
		Состояние("Документ не найден");
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРТУ(ID)
	
	Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "ID_Unicus");
	Возврат АСЦ_ПоискОбъектов.НайтиДокументПоСвойству(ID, Свойство, "РеализацияТоваровУслуг");
	
КонецФункции	

