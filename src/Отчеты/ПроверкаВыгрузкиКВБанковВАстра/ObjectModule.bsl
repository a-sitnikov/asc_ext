
#Область ОписаниеОбработки

Функция СведенияОВнешнейОбработке() Экспорт

	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.2.2.1");
	
	// HKEY_LOCAL_MACHINE\SOFTWARE\Classes\ADODB.Connection
	Разрешение = РаботаВБезопасномРежиме.РазрешениеНаСозданиеCOMКласса("ADODB.Connection", "{00000514-0000-0010-8000-00AA006D2EA4}");
	ПараметрыРегистрации.Разрешения.Добавить(Разрешение);
	
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительныйОтчет();
	ПараметрыРегистрации.Версия = Метаданные().Комментарий;
	ПараметрыРегистрации.БезопасныйРежим = Истина;
	ПараметрыРегистрации.Информация = Метаданные().Представление();
	
	НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
	НоваяКоманда.Представление = Метаданные().Представление();
	НоваяКоманда.Идентификатор = Метаданные().Имя;
	НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	НоваяКоманда.ПоказыватьОповещение = Ложь;
	
	Возврат ПараметрыРегистрации;

КонецФункции

#КонецОбласти

Функция ГУИД(Знач ГУИДСтр)
	
	ГУИДСтр = СтрЗаменить(ГУИДСтр, "{", "");
	ГУИДСтр = СтрЗаменить(ГУИДСтр, "}", "");
	
	Возврат Новый УникальныйИдентификатор(ГУИДСтр);
	
КонецФункции	

Функция ПолучитьРТУ(ГУИД)
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("ВнешнийИдентификатор", ГУИД);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Рег.Документ КАК Документ
	|ИЗ
	|	РегистрСведений.АСЦ_ЗагруженныеДокументы КАК Рег
	|ГДЕ
	|	Рег.Операция.ВнешнийИдентификатор = &ВнешнийИдентификатор
	|	И Рег.Документ ССЫЛКА Документ.РеализацияТоваровУслуг";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе	
		Возврат Результат.Выгрузить()[0][0];
	КонецЕсли;	
	
КонецФункции	

Функция ПолучитьДанныеАстра(База, Параметры)
	
	ТипНачилениеКВ = Новый Массив;
	ТипНачилениеКВ.Добавить(Тип("ДокументСсылка.АСЦ_ПлановоеНачислениеКВ"));
	
	ТипРТУ = Новый Массив;
	ТипРТУ.Добавить(Тип("ДокументСсылка.РеализацияТоваровУслуг"));
	
	ТаблицаДанных = Новый ТаблицаЗначений;
	ТаблицаДанных.Колонки.Добавить("Дата",             Новый ОписаниеТипов("Дата"));
	ТаблицаДанных.Колонки.Добавить("Статья",           Новый ОписаниеТипов("СправочникСсылка.СтатьиДоходовИРасходов"));
	ТаблицаДанных.Колонки.Добавить("Документ",         Новый ОписаниеТипов(ТипНачилениеКВ));
	ТаблицаДанных.Колонки.Добавить("Реализация",       Новый ОписаниеТипов(ТипРТУ));
	ТаблицаДанных.Колонки.Добавить("СуммаКВАстра",     Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("СуммаКВФактАстра", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("СуммаКВ",          Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("СуммаКВФакт",      Новый ОписаниеТипов("Число"));
	
	ТекстЗапроса =
	"SELECT
	|	CAST(tab.CarSale_ID as VARCHAR(36)) as CarSale_ID
	|	,CAST(tab.CurrentDocument_ID as VARCHAR(36)) as CurrentDocument_ID
	|	,CAST(tab.FCArticle_ID as VARCHAR(36)) as [FCArticle_ID]
	|	,tab.DocumentBaseDate
	|	,tab.DocumentBaseNumber
	|	,tab.SummaKV
	|	,tab.SummaKVFact
	|FROM 
	|	[uho].[VW_UHSaleCredit] as tab
	|WHERE
	|	tab.DocumentBaseDate BETWEEN &Дата1 AND &Дата2";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Дата1", ИнтеграцияСВнешнимиСистемамиУХ.АСЦ1_асцПолучитьТекстПараметра(Параметры.Дата1, "SQLOLEDB"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Дата2", ИнтеграцияСВнешнимиСистемамиУХ.АСЦ1_асцПолучитьТекстПараметра(Параметры.Дата2, "SQLOLEDB"));
	
	СтрокаСоединения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(База, "СтрокаПодключения");
	
	Соединение = Новый COMОбъект("ADODB.Connection");
	Соединение.Open(СтрокаСоединения);
	
	НаборЗаписей = Соединение.Execute(ТекстЗапроса);
	Если НЕ НаборЗаписей.EOF Тогда		

		НаборЗаписей.MoveFirst();
		Пока НЕ НаборЗаписей.EOF Цикл
			
			НоваяСтрока = ТаблицаДанных.Добавить();
			НоваяСтрока.Дата = НаборЗаписей.Fields("DocumentBaseDate").Value;
			
			СтатьяГУИД = НаборЗаписей.Fields("FCArticle_ID").Value;
			НоваяСтрока.Статья = Справочники.СтатьиДоходовИРасходов.ПолучитьСсылку(ГУИД(СтатьяГУИД));
			
			ДокументГУИД = ГУИД(НаборЗаписей.Fields("CurrentDocument_ID").Value);
			ДокументСсылка = Документы.АСЦ_ПлановоеНачислениеКВ.ПолучитьСсылку(ДокументГУИД);
			Если НЕ ОбщегоНазначения.СсылкаСуществует(ДокументСсылка) Тогда
				ДокументСсылка = Документы.АСЦ_ОтчетПосредникаУпр.ПолучитьСсылку(ДокументГУИД);
			КонецЕсли;	
			
			НоваяСтрока.Документ     = ДокументСсылка;
			
			НоваяСтрока.СуммаКВАстра     = НаборЗаписей.Fields("SummaKV").Value;
			НоваяСтрока.СуммаКВФактАстра = НаборЗаписей.Fields("SummaKVFact").Value;
			
			НоваяСтрока.Реализация = ПолучитьРТУ(НаборЗаписей.Fields("CarSale_ID").Value);
			
			НаборЗаписей.MoveNext();
			
		КонецЦикла;
		
	КонецЕсли;
	
	НаборЗаписей.Close();
	
	Результат = Новый Структура;
	Результат.Вставить("Данные", ТаблицаДанных);
	//Результат.Вставить("Ошибки", ТаблицаОшибок);
	
	Возврат Результат;
	
КонецФункции	


Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	
	База   = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("База")).Значение;
	Период = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период")).Значение;
	
	Параметры = Новый Структура;
	Параметры.Вставить("Дата1", Период.ДатаНачала);
	Параметры.Вставить("Дата2", Период.ДатаОкончания);
	
	ВнешниеНаборыДанных = ПолучитьДанныеАстра(База, Параметры);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);

	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки,);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);

	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры
