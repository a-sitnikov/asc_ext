Перем КонтекстЯдра;
Перем Ожидаем;
Перем Утверждения;
Перем ГенераторТестовыхДанных;
Перем ЗапросыИзБД;
Перем УтвержденияПроверкаТаблиц;

Перем ОбработкаОбъект;
Перем Параметры;
Перем СвойствоID;

#Область ЮнитТестирование

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
	ГенераторТестовыхДанных = КонтекстЯдра.Плагин("СериализаторMXL");
	ЗапросыИзБД = КонтекстЯдра.Плагин("ЗапросыИзБД");
	УтвержденияПроверкаТаблиц = КонтекстЯдра.Плагин("УтвержденияПроверкаТаблиц");
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	
	НаборТестов.Добавить("Реализация_ОплатаВБанке");
	
КонецПроцедуры

Процедура ПередЗапускомТеста() Экспорт
	
	Каталог = "E:\Ситников\asc_ext\Обработки\";
	ОбработкаОбъект = ВнешниеОбработки.Создать(Каталог + "ЗагрузкаДокументовРеализацияИзUnicus_ОплатаВБанке.epf", Ложь);
	
	Параметры = Новый Структура;
	Параметры.Вставить("ДатаНач", '2018-01-01');
	Параметры.Вставить("ДатаКон", '2018-12-31');
	Параметры.Вставить("База",    Справочники.ВнешниеИнформационныеБазы.НайтиПоНаименованию("Юникус"));
	
	Параметры.Вставить("ПерезаполнятьДокументы",   Ложь);
	Параметры.Вставить("ПерезаполнятьДоговоры",    Ложь);
	Параметры.Вставить("ВыводитьСообщения",        Ложь);
	Параметры.Вставить("ОтложенноеПроведение",     Истина);
	Параметры.Вставить("ЗагружатьДокументыОплаты", Ложь);
	
	УстановитьДатуЗапрета('2017-12-31');
	
	УдалитьДанные();
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
	ОбработкаОбъект = Неопределено;
	
КонецПроцедуры

Функция РазрешенСлучайныйПорядокВыполненияТестов() Экспорт
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#Область Общие

Процедура УдалитьДанные()
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Наименование", "TEST%");
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.АСЦ_ПлановоеНачислениеКВ КАК Док
	|ГДЕ
	|	Док.ДоговорКонтрагента.Наименование ПОДОБНО &Наименование";
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаТЗ из Таблица Цикл
		
		ДокументОбъект = СтрокаТЗ.Ссылка.ПолучитьОбъект();
		ДокументОбъект.Удалить();
		
	КонецЦикла;	
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Спр.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК Спр
	|ГДЕ
	|	Спр.Наименование ПОДОБНО &Наименование";
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаТЗ из Таблица Цикл
		
		ДокументОбъект = СтрокаТЗ.Ссылка.ПолучитьОбъект();
		ДокументОбъект.Удалить();
		
	КонецЦикла;	
	
КонецПроцедуры	

Процедура УстановитьДатуЗапрета(Дата)
	
	НаборЗаписей = РегистрыСведений.ДатыЗапретаИзменения.СоздатьНаборЗаписей();
	
	Запись = НаборЗаписей.Добавить();
	Запись.ДатаЗапрета  = Дата;
	Запись.Пользователь = Перечисления.ВидыНазначенияДатЗапрета.ДляВсехПользователей;
	Запись.Раздел       = ПланыВидовХарактеристик.РазделыДатЗапретаИзменения.НайтиПоНаименованию("Учет по МСФО");
	Запись.Объект       = Запись.Раздел;
	
	НаборЗаписей.Записать();
	
	ПараметрыСеанса.ДействующиеДатыЗапретаИзменения = ДатыЗапретаИзмененияСлужебный.тестЗначениеПараметраСеансаДействующиеДатыЗапретаИзменения();
	
КонецПроцедуры	

#КонецОбласти

Процедура Реализация_ОплатаВБанке() Экспорт
	
	Макет = ПолучитьМакет("Реализация_ОплатаВБанке");
	ТаблицаДанных = ОбработкаОбъект.ПолучитьТаблицуДанныхРеализацииТест(Макет);
	
	АдресРезультата = Неопределено;
	ОбработкаОбъект.ЗагрузитьРеализации(Параметры, АдресРезультата, ТаблицаДанных);

	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Наименование", "TEST-00001");
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Док.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.АСЦ_ПлановоеНачислениеКВ КАК Док
	|ГДЕ
	|	Док.ДоговорКонтрагента.Наименование = &Наименование";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		ДокументСсылка = Результат.Выгрузить()[0][0];
	Иначе
		ДокументСсылка = Неопределено;
	КонецЕсли;
	
	Утверждения.ПроверитьЗаполненность(ДокументСсылка, "Документ ПлановоеНачислениеКВ не создан");
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "ВидОперации");
	Утверждения.ПроверитьРавенство(Реквизиты.ВидОперации, Справочники.АСЦ_ВидыОперацийПлановоеНачислениеКВ.ОплатаВБанке, "Не верно указан вид операции");
	
КонецПроцедуры
