Функция ВыполнитьЗапросSQL(ТекстЗапроса) Экспорт
	
	//Попытка
	
	Sc=New COMObject("ADODB.Connection");
	//Sc.Provider="MSDASQL";
	
	СтрПодкл="Provider=SQLOLEDB.1;Password=vIS,&iqBDnECiQ~|NG<g;Persist Security Info=True;User ID=ASCADAII_BUFFER;Initial Catalog=ASCADA_CENTRAL;Data Source=MWSSQL6";
	
	
	
	Sc.ConnectionString=СтрПодкл;
	Sc.Open();            
	
	Result=Sc.Execute(ТекстЗапроса);
	Если Result.EOF()=0 Тогда
		Возврат Result;
	иначе
		возврат неопределено;
	конецесли;
КонецФункции

Процедура ЗаполнитьСтатьи() Экспорт
	
	ЭтоУХ =  СтрНайти(Метаданные.Имя,"олдинг")>0;
	ЭтоДО = СтрНайти(Метаданные.Имя,"окументооборот")>0;
	Если НЕ ЭтоУХ и НЕ ЭтоДО Тогда
		Возврат;
	КонецЕсли;
	Если ЗагружатьБДР И ЭтоДО Тогда
		ЗагружатьБДР = Ложь;
	КонецЕсли;
	Если ЭтоДО И НЕ ЗагружатьДДС Тогда
		Возврат;
	КонецЕсли;
	Если НЕ ЗагружатьДДС И НЕ ЗагружатьБДР Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		Выборка = ВыполнитьЗапросSQL("select * from [MWSSQL6].[ASCADA_CENTRAL].[cobra].[VW_FCArticle] order by [Уровень]");
		Если Выборка = Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка получения статей из SQL: "+ОписаниеОшибки());
			Возврат;
		КонецЕсли;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка получения статей из SQL: "+ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	Выборка.MoveFirst();
	Пока Выборка.EOF()=0 Цикл	
		Попытка
			GUID_Стр = СтрЗаменить(Строка(Выборка.Fields("IDСтатьи").Value),Символы.НПП,"");
			GUID_Стр = СтрЗаменить(GUID_Стр,"{","");
			GUID_Стр = СтрЗаменить(GUID_Стр,"}","");
			GUID = Новый УникальныйИдентификатор(GUID_Стр);
			КодСт =  Строка(Выборка.Fields("КодСтатьи").Value);
			Если СтрДлина(КодСт)>7 Тогда
				КодСт = Прав(СокрЛП(КодСт),6);
			КонецЕсли;
			Название =  Строка(Выборка.Fields("НазваниеСтатьи").Value);
			ТипСт =   Строка(Выборка.Fields("ТипСтатьи").Value);
			ПодтипСт =  Строка(Выборка.Fields("ПодтипСтатьи").Value);
			Активность = Число(Выборка.Fields("Активность").Value);
			GUIDГруппы_Стр =  СтрЗаменить(Строка(Выборка.Fields("Родитель").Value),Символы.НПП,"");
			GUIDГруппы_Стр = ?(GUIDГруппы_Стр="NULL","",GUIDГруппы_Стр);
			GUIDГруппы_Стр = СтрЗаменить(GUIDГруппы_Стр,"{","");
			GUIDГруппы_Стр = СтрЗаменить(GUIDГруппы_Стр,"}","");
			Если ЗначениеЗаполнено(GUIDГруппы_Стр) Тогда 
				GUIDГруппы = Новый УникальныйИдентификатор(GUIDГруппы_Стр);
			Иначе
				GUIDГруппы = Неопределено;
			КонецЕсли;
			ЭтоГруппа = Число(Выборка.Fields("Папка").Value)=1;
			Уровень =   Число(Выборка.Fields("Уровень").Value);
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка обработки строки статей: "+ОписаниеОшибки());
			Выборка.MoveNext();
			Продолжить;
		КонецПопытки;
		Если (ТипСт = "ДДС" И НЕ ЗагружатьДДС) ИЛИ (ТипСт="БДР" И НЕ ЗагружатьБДР)Тогда
			Выборка.MoveNext();
			Продолжить;
		КонецЕсли;
		Если ТипСт = "ДДС" Тогда 
			ИмяСправочника = "СтатьиДвиженияДенежныхСредств";
		ИначеЕсли ТипСт = "БДР" Тогда 
			ИмяСправочника = "СтатьиДоходовИРасходов";
		Иначе
			Выборка.MoveNext();
			Продолжить;
		КонецЕсли;
		НовЭлтСсылка = Справочники[ИмяСправочника].ПолучитьСсылку(GUID);
		//НовЭлтСсылка.ЭтоГруппа = ЭтоГруппа;
		Если ЗначениеЗаполнено(GUIDГруппы_Стр)  Тогда
			РодительСпр = Справочники[ИмяСправочника].ПолучитьСсылку(GUIDГруппы);
			Если НЕ ЗначениеЗаполнено(РодительСпр.Код) Тогда
				РодительСпр =  Справочники[ИмяСправочника].ПустаяСсылка();
			КонецЕсли;
		Иначе
			РодительСпр =  Справочники[ИмяСправочника].ПустаяСсылка();
		КонецЕсли;
		Если ЗначениеЗаполнено(НовЭлтСсылка.Код) И НЕ ПерезаписыватьСтатьи Тогда
			Выборка.MoveNext();
			Продолжить;
		КонецЕсли;
		Если Активность=0 Тогда
			Если ЗначениеЗаполнено(НовЭлтСсылка.Код) Тогда
				СпрОб = НовЭлтСсылка.ПолучитьОбъект();
				СпрОб.УстановитьПометкуУдаления(Истина);
				Попытка
					СпрОб.Записать();
				Исключение
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка пометки на удаление статьи"+СпрОб.Наименование+": "+ОписаниеОшибки());
				КонецПопытки;
			КонецЕсли;
		Иначе
			Если  ЗначениеЗаполнено(НовЭлтСсылка.Код) Тогда
				СпрОб = НовЭлтСсылка.ПолучитьОбъект();
			Иначе
				Если ЭтоГруппа Тогда
					СпрОб = Справочники[ИмяСправочника].СоздатьГруппу();
				Иначе
					СпрОб = Справочники[ИмяСправочника].СоздатьЭлемент();
				КонецЕсли;
				СпрОб.УстановитьСсылкуНового(НовЭлтСсылка);
			КонецЕсли; 
			СпрОб.Наименование = Название;
			СпрОб.Родитель = РодительСпр;
			//АСЦ Ситников++
			СпрОб.Код =  КодСт;
			//СсылкаС = Справочники[ИмяСправочника].НайтиПоКоду(КодСт);
			//Если СсылкаС.УникальныйИдентификатор()= GUID ИЛИ НЕ ЗначениеЗаполнено(СсылкаС) Тогда
			//	СпрОб.Код = КодСт;
			//Иначе
			//	СпрОб.УстановитьНовыйКод();
			//КонецЕсли;
			//АСЦ Ситников--
			Если ЭтоУХ И НЕ ЭтоГруппа Тогда
				Если ПодтипСт = "Выплаты" ИЛИ ПодтипСт = "Расходы"  Тогда
					СпрОб.ПриходРасход = Перечисления.ВидыДвиженийПриходРасход.Расход;
				Иначе
					СпрОб.ПриходРасход = Перечисления.ВидыДвиженийПриходРасход.Приход;	
				КонецЕсли;
				
			КонецЕсли;
			Попытка
				СпрОб.ОбменДанными.Загрузка = Истина;
				СпрОб.Записать();
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка записи статьи"+СпрОб.Наименование+": "+ОписаниеОшибки());
			КонецПопытки;
		КонецЕсли;	
		
		Выборка.MoveNext();
	КонецЦикла;
КонецПроцедуры