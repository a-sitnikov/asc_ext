
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДобавитьВидОбъекта("Справочник.ВидыОтчетов",                "Ссылка");
	ДобавитьВидОбъекта("Справочник.БланкиОтчетов",              "Владелец", "", "Ссылка");
	ДобавитьВидОбъекта("Справочник.НастройкиСтруктурыБланка",   "Владелец.Владелец", "", "Владелец");
	ДобавитьВидОбъекта("Справочник.ПравилаОбработки",           "Владелец", "Ссылка");
	ДобавитьВидОбъекта("Справочник.ПравилаПроверки",            "Владелец", "");
	ДобавитьВидОбъекта("Справочник.КолонкиОтчетов",             "Владелец", "");
	ДобавитьВидОбъекта("Справочник.СтрокиОтчетов",              "Владелец", "");
	ДобавитьВидОбъекта("Справочник.ПоказателиОтчетов",          "Владелец");
	ДобавитьВидОбъекта("Справочник.ГруппыРаскрытия",            "Владелец");
	ДобавитьВидОбъекта("Справочник.ОбластиДанныхВидовОтчетов",  "Владелец");
	ДобавитьВидОбъекта("Справочник.ИсточникиДанныхДляРасчетов", "НазначениеРасчетов.Владелец", "НазначениеРасчетов");
	
	ДобавитьВидОбъекта("РегистрСведений.НастройкаОбработкиОтчетов",             "ШаблонДокументаБД", "", "");
	ДобавитьВидОбъекта("РегистрСведений.ПроцедурыРасчетов",                     "НазначениеРасчетов.Владелец", "НазначениеРасчетов");
	ДобавитьВидОбъекта("РегистрСведений.ХранилищаПравилПересчета",              "ПравилоОбработки.Владелец",   "ПравилоОбработки");
	ДобавитьВидОбъекта("РегистрСведений.ХранилищаПараметрическойНастройки",     "ПравилоОбработки.Владелец",   "ПравилоОбработки");
	
	ДобавитьВидОбъекта("ПланВидовХарактеристик.ВидыСубконтоКорпоративные", "");
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВидОбъекта(Имя, Отбор, ОтборПравило = "", ОтборБланк = "")
	
	НоваяСтрока = Объект.ВидыОбъектов.Добавить();
	НоваяСтрока.Пометка = Истина;
	НоваяСтрока.Имя     = Имя;
	НоваяСтрока.Отбор   = Отбор;
	НоваяСтрока.ОтборПравило = ОтборПравило;
	НоваяСтрока.ОтборБланк   = ОтборБланк;
	
КонецПроцедуры	

&НаКлиенте
Процедура ДобавитьВидОтчета(Команда)
	
	Форма = ПолучитьФорму("Справочник.ВидыОтчетов.ФормаВыбора",, Элементы.ДеревоОтчетов);
	Форма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОтчетовОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Строки = ДеревоОтчетов.ПолучитьЭлементы();
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ВидыОтчетов") Тогда
		
		СтрокаВидОтчета = НайтиСтрокуДерева(Строки, ВыбранноеЗначение, "Ссылка");
		Если СтрокаВидОтчета = Неопределено Тогда
			
			СтрокаВидОтчета = Строки.Добавить();
			СтрокаВидОтчета.Ссылка = ВыбранноеЗначение;
			
			НоваяСтрока = СтрокаВидОтчета.ПолучитьЭлементы().Добавить();
			НоваяСтрока.Ссылка = "Бланки отчетов";
		
			НоваяСтрока = СтрокаВидОтчета.ПолучитьЭлементы().Добавить();
			НоваяСтрока.Ссылка = "Правила обработки";
			
			Элементы.ДеревоОтчетов.Развернуть(СтрокаВидОтчета.ПолучитьИдентификатор());
		
		КонецЕсли;	
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ПравилаОбработки") Тогда 	
		
		ВидОтчета = ЗначениеРеквизитаОбъекта(ВыбранноеЗначение, "Владелец");
		
		СтрокаВидОтчета = НайтиСтрокуДерева(Строки, ВидОтчета, "Ссылка");
		Если СтрокаВидОтчета = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		
		СтрокаПравило = НайтиСтрокуДерева(СтрокаВидОтчета.ПолучитьЭлементы(), "Правила обработки", "Ссылка");
		Если СтрокаПравило <> Неопределено Тогда
			
			НоваяСтрока = СтрокаПравило.ПолучитьЭлементы().Добавить();
			НоваяСтрока.Ссылка = ВыбранноеЗначение;
			
			Элементы.ДеревоОтчетов.Развернуть(СтрокаПравило.ПолучитьИдентификатор());
		
		КонецЕсли;	
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.БланкиОтчетов") Тогда 	
		
		ВидОтчета = ЗначениеРеквизитаОбъекта(ВыбранноеЗначение, "Владелец");
		
		СтрокаВидОтчета = НайтиСтрокуДерева(Строки, ВидОтчета, "Ссылка");
		Если СтрокаВидОтчета = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		
		СтрокаПравило = НайтиСтрокуДерева(СтрокаВидОтчета.ПолучитьЭлементы(), "Бланки отчетов", "Ссылка");
		Если СтрокаПравило <> Неопределено Тогда
			
			НоваяСтрока = СтрокаПравило.ПолучитьЭлементы().Добавить();
			НоваяСтрока.Ссылка = ВыбранноеЗначение;
			
			Элементы.ДеревоОтчетов.Развернуть(СтрокаПравило.ПолучитьИдентификатор());
		
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция НайтиСтрокуДерева(СтрокиДерева, Значение, Колонка)
	
	Для каждого Строка из СтрокиДерева Цикл
		
		Если Строка[Колонка] = Значение Тогда
			Возврат Строка;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции	

&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Диалог.Фильтр = "*.xml|*.xml";
	Диалог.Показать(Новый ОписаниеОповещения("ИмяФайлаНачалоВыбораЗавершение", ЭтаФорма));	
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаНачалоВыбораЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		Объект.ИмяФайла = ВыбранныеФайлы[0];
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗапуститьПриложение(Объект.ИмяФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПравило()
	
	ТекущиеДанные = Элементы.ДеревоОтчетов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ТекущиеДанные.Ссылка) <> Тип("Строка") Тогда
		Возврат;
	КонецЕсли;	
	
	ВидОтчета = ТекущиеДанные.ПолучитьРодителя().Ссылка;
	
	Если ТекущиеДанные.Ссылка = "Правила обработки" Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Отбор", Новый Структура("Владелец", ВидОтчета));
		
		Форма = ПолучитьФорму("Справочник.ПравилаОбработки.ФормаВыбора", ПараметрыФормы, Элементы.ДеревоОтчетов);
		Форма.Открыть();
		
	ИначеЕсли ТекущиеДанные.Ссылка = "Бланки отчетов" Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Отбор", Новый Структура("Владелец", ВидОтчета));
		
		Форма = ПолучитьФорму("Справочник.БланкиОтчетов.Форма.ФормаВыбора", ПараметрыФормы, Элементы.ДеревоОтчетов);
		Форма.Открыть();
		
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ДеревоОтчетовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	ДобавитьПравило();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗначениеРеквизитаОбъекта(Объект, Реквизит)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект, Реквизит);
	
КонецФункции

&НаКлиенте
Процедура ДеревоОтчетовПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элементы.ДеревоОтчетов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ТекущиеДанные.Ссылка) = Тип("Строка") Тогда
		Отказ = Истина;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Выгрузить(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;	
	
	Адрес = ВыгрузитьСервер();
	Описание = Новый ОписаниеПередаваемогоФайла(Объект.ИмяФайла, Адрес);
	МассивОписаний = Новый Массив;
	МассивОписаний.Добавить(Описание);
	ПолучитьФайлы(МассивОписаний,,,Ложь);
	
	Состояние("Файл сохранен");	
	
КонецПроцедуры

&НаСервере
Функция ВыгрузитьСервер()
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл(ИмяВременногоФайла);
	ЗаписьXML.ЗаписатьНачалоЭлемента("Корень");
	
	МассивВидовОтчетов    = Новый Массив;
	МассивПравилОбработки = Новый Массив;
	МассивБланковОтчетов  = Новый Массив;
	
	ДеревоОтчетовОбъект = РеквизитФормыВЗначение("ДеревоОтчетов");
	
	Для каждого СтрокаВидОтчета из ДеревоОтчетовОбъект.Строки Цикл
		
		МассивВидовОтчетов.Добавить(СтрокаВидОтчета.Ссылка);
		
		Для каждого СтрокаЭлемент из СтрокаВидОтчета.Строки Цикл
			
			Если СтрокаЭлемент.Ссылка = "Правила обработки" Тогда
				
				Если СтрокаЭлемент.Строки.Количество() = 0 Тогда
					
					ДобавитьВсеПравила(СтрокаВидОтчета.Ссылка, МассивПравилОбработки);
					
				Иначе	
					
					Для каждого СтрокаПравило из СтрокаЭлемент.Строки Цикл
						МассивПравилОбработки.Добавить(СтрокаПравило.Ссылка);
					КонецЦикла;
					
				КонецЕсли;	
				
			ИначеЕсли СтрокаЭлемент.Ссылка = "Бланки отчетов" Тогда
				
				Если СтрокаЭлемент.Строки.Количество() = 0 Тогда
					
					ДобавитьВсеБланки(СтрокаВидОтчета.Ссылка, МассивБланковОтчетов);
					
				Иначе	
					
					Для каждого СтрокаПравило из СтрокаЭлемент.Строки Цикл
						МассивБланковОтчетов.Добавить(СтрокаПравило.Ссылка);
					КонецЦикла;
					
				КонецЕсли;	
				
			КонецЕсли;
			
		КонецЦикла;	
		
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("ВидОтчета",        МассивВидовОтчетов);
	Запрос.Параметры.Вставить("ПравилоОбработки", МассивПравилОбработки);
	Запрос.Параметры.Вставить("БланкиОтчетов",    МассивБланковОтчетов);
	
	Для каждого СтрокаТЧ из Объект.ВидыОбъектов Цикл
		
		Если СтрокаТЧ.Пометка = Ложь Тогда
			Продолжить;
		КонецЕсли;
		
		Если Найти(СтрокаТЧ.Имя, "Справочник.") = 1 Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	Спр.Ссылка
			|ИЗ
			|	" + СтрокаТЧ.Имя + " КАК Спр
			|ГДЕ
			|	Спр." + СтрокаТЧ.Отбор + " В (&ВидОтчета)";
			
			Если ЗначениеЗаполнено(СтрокаТЧ.ОтборПравило) Тогда
				
				Запрос.Текст = Запрос.Текст + "
				|	И Спр." + СтрокаТЧ.ОтборПравило + " В (&ПравилоОбработки)";
				
			КонецЕсли;	
	
			Если ЗначениеЗаполнено(СтрокаТЧ.ОтборБланк) Тогда
				
				Запрос.Текст = Запрос.Текст + "
				|	И Спр." + СтрокаТЧ.ОтборБланк + " В (&БланкиОтчетов)";
				
			КонецЕсли;	
	
			Таблица = Запрос.Выполнить().Выгрузить();
			Для каждого СтрокаТЗ из Таблица Цикл
				ОбъектБД = СтрокаТЗ.Ссылка.ПолучитьОбъект();
				ЗаписатьXML(ЗаписьXML, ОбъектБД);
			КонецЦикла;	
			
		ИначеЕсли Найти(СтрокаТЧ.Имя, "РегистрСведений.") = 1 Тогда
			
			Индекс      = Найти(СтрокаТЧ.Имя, ".");
			ИмяРегистра = Сред(СтрокаТЧ.Имя, Индекс + 1);
			НаборЗаписей = РегистрыСведений[ИмяРегистра].СоздатьНаборЗаписей();
					
			Если ЗначениеЗаполнено(СтрокаТЧ.Отбор) Тогда
				
				Запрос.Текст =
				"ВЫБРАТЬ
				|	*
				|ИЗ
				|	" + СтрокаТЧ.Имя + " КАК Спр
				|ГДЕ
				|	Спр." + СтрокаТЧ.Отбор + " В (&ВидОтчета)";
			
				Если ЗначениеЗаполнено(СтрокаТЧ.ОтборПравило) Тогда
					
					Запрос.Текст = Запрос.Текст + "
					|	И Спр." + СтрокаТЧ.ОтборПравило + " В (&ПравилоОбработки)";
					
				КонецЕсли;	
	
				Таблица = Запрос.Выполнить().Выгрузить();
				Для каждого СтрокаТЗ из Таблица Цикл
					
					Для каждого Измерение из Метаданные.РегистрыСведений[ИмяРегистра].Измерения Цикл
						ЭлементОтбора = НаборЗаписей.Отбор.Найти(Измерение.Имя);
						Если ЭлементОтбора <> Неопределено Тогда
							ЭлементОтбора.Установить(СтрокаТЗ[Измерение.Имя]);
						КонецЕсли;	
					КонецЦикла;
					
					НаборЗаписей.Прочитать();
					
					ЗаписатьXML(ЗаписьXML, НаборЗаписей);
					
				КонецЦикла;	
			
			Иначе	
				
				Для каждого СтрокаТЧ из Объект.ВидыОтчетов Цикл
					
					НаборЗаписей.Отбор.ВидОтчета.Установить(СтрокаТЧ.ВидОтчета);
					НаборЗаписей.Прочитать();
			
					ЗаписатьXML(ЗаписьXML, НаборЗаписей);
					
				КонецЦикла;	
				
			КонецЕсли;	
			
		ИначеЕсли СтрокаТЧ.Имя = "ПланВидовХарактеристик.ВидыСубконтоКорпоративные" Тогда
			
		КонецЕсли;	
		
	КонецЦикла;	
	
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.Закрыть();
	
	ДвоичныеДанные = Новый ДвоичныеДанные(ИмяВременногоФайла);
	Адрес = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);
	
	Возврат Адрес;
	
КонецФункции

&НаСервере
Процедура ДобавитьВсеПравила(ВидОтчета, Массив)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Спр.Ссылка
	|ИЗ
	|	Справочник.ПравилаОбработки КАК Спр
	|ГДЕ
	|	Спр.Владелец = &ВидОтчета";
	
	Запрос.Параметры.Вставить("ВидОтчета", ВидОтчета);
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаТЗ из Таблица Цикл
		Массив.Добавить(СтрокаТЗ.Ссылка);
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВсеБланки(ВидОтчета, Массив)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Спр.Ссылка
	|ИЗ
	|	Справочник.БланкиОтчетов КАК Спр
	|ГДЕ
	|	Спр.Владелец = &ВидОтчета";
	
	Запрос.Параметры.Вставить("ВидОтчета", ВидОтчета);
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаТЗ из Таблица Цикл
		Массив.Добавить(СтрокаТЗ.Ссылка);
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайла1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Фильтр = "*.xml|*.xml";
	Диалог.Показать(Новый ОписаниеОповещения("ИмяФайла1НачалоВыбораЗавершение", ЭтаФорма));	
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайла1НачалоВыбораЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		Объект.ИмяФайла = ВыбранныеФайлы[0];
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьВопрос", Этаформа);
	ПоказатьВопрос(ОписаниеОповещения, "Загрузить отчеты?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьВопрос(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;	
	
    ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьЗавершение", ЭтотОбъект);
    НачатьПомещениеФайлов(ОписаниеОповещения, , Объект.ИмяФайла , Ложь, Новый УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЗавершение(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	
    Если ПомещенныеФайлы = Неопределено Тогда
        Возврат;
    КонецЕсли;
	
	Состояние("Загрузка");
    КолвоОбъектов = ЗагрузитьНаСервере(ПомещенныеФайлы[0].Хранение);
	Состояние("Загрузка завершена: " + КолвоОбъектов + " объектов");
	
КонецПроцедуры

&НаСервере
Функция ЗагрузитьНаСервере(АдресХранилища)
	
    ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
	
    ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресХранилища);
	Поток = ДвоичныеДанные.ОткрытьПотокДляЧтения();

	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьПоток(Поток);
	
	КолвоОбъектов = 0;
	Пока ЧтениеXML.Прочитать() Цикл
		
		Пока ВозможностьЧтенияXML(ЧтениеXML) Цикл
			
			ОбъектБД = ПрочитатьXML(ЧтениеXML);
			
			Попытка
				ОбъектБД.ОбменДанными.Загрузка = Истина;
				ОбъектБД.Записать();
				КолвоОбъектов = КолвоОбъектов + 1;
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;	
			
		КонецЦикла;
		
	КонецЦикла;	
	
	ЧтениеXML.Закрыть();
	
	Возврат КолвоОбъектов;
	
КонецФункции

&НаКлиенте
Процедура ВидыОбъектовВклВсе(Команда)
	
	Для каждого СтрокаТЧ из Объект.ВидыОбъектов Цикл
		СтрокаТЧ.Пометка = Истина;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыОбъектовВыклВсе(Команда)
	
	Для каждого СтрокаТЧ из Объект.ВидыОбъектов Цикл
		СтрокаТЧ.Пометка = Ложь;
	КонецЦикла;	
	
КонецПроцедуры

