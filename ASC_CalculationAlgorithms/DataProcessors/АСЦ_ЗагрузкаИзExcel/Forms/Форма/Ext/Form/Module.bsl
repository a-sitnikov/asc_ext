
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТабДок.МасштабПечати = 80;
	
	Если Параметры.Свойство("ТаблицаКолонок") Тогда
		
		Для каждого СтрокаТЧ из Параметры.ТаблицаКолонок Цикл
			
			НоваяСтрока =  ТаблицаКолонок.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ);
			
		КонецЦикла;	
		
	КонецЕсли;	
	
	//Реквизиты
	ТипСтрока = Новый ОписаниеТипов("Строка");
	ТипЧисло  = Новый ОписаниеТипов("Число");
	ДобавляемыеРеквизиты = Новый Массив;
	Для каждого СтрокаТЗ из ТаблицаКолонок Цикл
		
		Если СтрокаТЗ.Тип = "Число" Тогда
			Тип = ТипЧисло;
		Иначе	
			Тип = ТипСтрока;
		КонецЕсли;	
		
		Реквизит = Новый РеквизитФормы(СтрокаТЗ.Имя, Тип, "Таблица");
		ДобавляемыеРеквизиты.Добавить(Реквизит);
		
		// Настройки
		Реквизит = Новый РеквизитФормы("Колонка" + СтрокаТЗ.Имя, ТипЧисло);
		ДобавляемыеРеквизиты.Добавить(Реквизит);
		
	КонецЦикла;
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
	Для каждого СтрокаТЗ из ТаблицаКолонок Цикл
		
		//Таблица
		Элемент = Элементы.Вставить("Таблица" + СтрокаТЗ.Имя, Тип("ПолеФормы"), Элементы.Таблица,);
		Элемент.Вид          = ВидПоляФормы.ПолеВвода;
		Элемент.ПутьКДанным  = "Таблица." + СтрокаТЗ.Имя;
		Элемент.Заголовок    = СтрокаТЗ.Заголовок;
		Элемент.ШрифтПодвала = Новый Шрифт(,, Истина);
		
		Если СтрокаТЗ.Тип = "Число" Тогда
			Элемент.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
		КонецЕсли;	
		
		//Настройки
		Группа = Элементы.Вставить("Группа" + СтрокаТЗ.Имя, Тип("ГруппаФормы"), Элементы.ГруппаНомераКолонок);
		Группа.Вид          = ВидГруппыФормы.ОбычнаяГруппа;
		Группа.Заголовок    = "Группа мест";
		Группа.ОтображатьЗаголовок = Ложь;
		Группа.Группировка  = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		
		Элемент = Элементы.Вставить("Колонка" + СтрокаТЗ.Имя, Тип("ПолеФормы"), Группа,);
		Элемент.Вид         = ВидПоляФормы.ПолеВвода;
		Элемент.ПутьКДанным = "Колонка" + СтрокаТЗ.Имя;
		Элемент.Заголовок   = СтрокаТЗ.Заголовок;
		Элемент.УстановитьДействие("ПриИзменении", "НомерКолонкиПриИзменении");
		
		Кнопка = Элементы.Вставить("УстановитьНомерКолонки" + СтрокаТЗ.Имя, Тип("КнопкаФормы"), Группа,);
		Кнопка.ИмяКоманды = "УстановитьНомерКолонки";
		
	КонецЦикла;	
	
	КлючНастройки = Параметры.КлючНастройки;
	
	Если ЗначениеЗаполнено(КлючНастройки) Тогда
		СохраненнаяНастройка = ХранилищеОбщихНастроек.Загрузить("ЗагрузкаExcel_КВБанков", КлючНастройки);
		Если ЗначениеЗаполнено(СохраненнаяНастройка) Тогда
			ЗагрузитьНастройкиСервер();
		КонецЕсли;	
	КонецЕсли;	
	
	УстановитьВидимость(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ВыбранаСохраненнаяНастройка" Тогда
		
		Если Параметр.УИДФормы = УникальныйИдентификатор Тогда
			
			СохраненнаяНастройка = Параметр.СохраненнаяНастройка;
			СохранитьНастройки();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
КонецПроцедуры

#КонецОбласти

#Область Настройки

&НаСервере
Процедура СохранитьНастройки()
	
	Если СохраненнаяНастройка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	НастройкаОбъект = СохраненнаяНастройка.ПолучитьОбъект();
	НастройкаОбъект.ХранилищеНастроек   = Новый ХранилищеЗначения(ПолучитьСтруктуруНастроек());
	НастройкаОбъект.Записать();
	
	Модифицированность = Ложь;
	
	Если ЗначениеЗаполнено(КлючНастройки) Тогда
		ХранилищеОбщихНастроек.Сохранить("ЗагрузкаExcel_КВБанков", КлючНастройки, СохраненнаяНастройка);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруНастроек(ВозвращатьАдрес = Ложь)
	
	СтруктураНастроек = Новый Структура;
	
	Для каждого СтрокаТЗ из ТаблицаКолонок Цикл
		ИмяКолонки = "Колонка" + СтрокаТЗ.Имя;
		СтруктураНастроек.Вставить(ИмяКолонки,  ЭтаФорма[ИмяКолонки]);
	КонецЦикла;	
		
	Если ВозвращатьАдрес Тогда
		Возврат ПоместитьВоВременноеХранилище(СтруктураНастроек);
	Иначе
		Возврат СтруктураНастроек;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура СохранитьНастройку(Команда)
	
	НастраиваемыйОбъект = "АСЦ_ОтчетПосредника.ЗагрузкаИзExcel";
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("СинонимОбъекта",           НастраиваемыйОбъект);
	СтруктураНастроек.Вставить("РежимСохраненияНастройки", Истина);
	СтруктураНастроек.Вставить("ЗакрыватьПриВыборе", Истина);
	СтруктураНастроек.Вставить("РежимВыбора",        Истина);
	СтруктураНастроек.Вставить("Отбор", Новый Структура("НастраиваемыйОбъект, ТипНастройки"
														, НастраиваемыйОбъект
														, ПредопределенноеЗначение("Перечисление.ТипыНастроек.НастройкиОбработки")));
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("РежимСохраненияНастройки", Истина);
	ДополнительныеПараметры.Вставить("УИДФормы", УникальныйИдентификатор);
    ОписаниеОЗакрытии = Новый ОписаниеОповещения("ВыбратьНастройкуФормы_Завершение", ЭтотОбъект, ДополнительныеПараметры);	
	ОткрытьФорму("Справочник.СохраненныеНастройки.Форма.ФормаВыбора_Управляемая", СтруктураНастроек, , , , , ОписаниеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьНастройкуФормы_Завершение(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		
		СохраненнаяНастройка = ВыбранноеЗначение;
		СохранитьНастройки();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПриИзменении(Элемент)
	
	ЗагрузитьнастройкиСервер();
	УстановитьВидимость(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройкиСервер()
	
	Если СохраненнаяНастройка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	СпрОбъект = СохраненнаяНастройка.ПолучитьОбъект();
	СтруктураНастроек = СпрОбъект.ХранилищеНастроек.Получить();
	Если СтруктураНастроек = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, СтруктураНастроек);
	
	Если ЗначениеЗаполнено(КлючНастройки) Тогда
		ХранилищеОбщихНастроек.Сохранить("ЗагрузкаExcel_КВБанков", КлючНастройки, СохраненнаяНастройка);
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимость(ЭтаФорма)
	
	Для каждого Колонка из ЭтаФорма.ТаблицаКолонок Цикл
		
		Значение = ЭтаФорма["Колонка" + Колонка.Имя];
		ЭтаФорма.Элементы["Таблица" + Колонка.Имя].Видимость = (Значение <> 0);
		
	КонецЦикла;	
	
КонецПроцедуры	
	
&НаКлиенте
Процедура НомерКолонкиПриИзменении(Элемент)
	
	УстановитьВидимость(ЭтаФорма);
	
КонецПроцедуры	
	
&НаКлиенте
Процедура ИмяФайлаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗапуститьПриложение(ИмяФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ИмяФайлаНачалоВыбораЗавершение", ЭтотОбъект);
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Фильтр = "Файлы Excel (*.xls, *.xlsx)|*.xls; *.xlsx";
	Диалог.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаНачалоВыбораЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ИмяФайла = ВыбранныеФайлы[0];
	
КонецПроцедуры

&НаКлиенте
Процедура Прочитать(Команда)
	
	Если ПустаяСтрока(ИмяФайла) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не указана файл";
		Сообщение.Поле  = "ИмяФайла";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(СохраненнаяНастройка) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не указана настройка";
		Сообщение.Поле  = "СохраненнаяНастройка";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;	
	
	Файл = Новый Файл(ИмяФайла);
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Действие", "Загрузка");
	ДопПараметры.Вставить("Расширение", Файл.Расширение);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПрочитатьЗавершение", ЭтотОбъект, ДопПараметры);
	НачатьПомещениеФайлов(ОписаниеОповещения, , ИмяФайла , Ложь, Новый УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьЗавершение(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ПомещенныеФайлы = Неопределено Тогда
        Возврат;
    КонецЕсли;
	
    ПрочитатьНаСервере(ПомещенныеФайлы[0].Хранение, ДополнительныеПараметры);
	
	Элементы.ТаблицаПеренестиВДокумент.КнопкаПоУмолчанию = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНаСервере(АдресХранилища, ДополнительныеПараметры)
	
    ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресХранилища);
    
    ИмяВременногоФайла = ПолучитьИмяВременногоФайла(ДополнительныеПараметры.Расширение);
    ДвоичныеДанные.Записать(ИмяВременногоФайла);
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.Прочитать(ИмяВременногоФайла);
	
	Если ДополнительныеПараметры.Действие = "Просмотр" Тогда
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройки;
		
	Иначе
		
		ПрочитатьДанные();
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДанные()
	
	Таблица.Очистить();
	
	КлючевыеПоля = ТаблицаКолонок.Выгрузить(Новый Структура("Обязательное", Истина));
	
	Для Счетчик = 1 по ТабДок.ВысотаТаблицы Цикл
		
		СтруктраЗначений = Новый Структура;
		Для каждого Колонка из ТаблицаКолонок Цикл
			
			НомерКолонки = ЭтаФорма["Колонка" + Колонка.Имя];
			Если НомерКолонки = 0 Тогда
				Продолжить;
			КонецЕсли;	
			
			Область = ТабДок.Область(Счетчик, НомерКолонки);
			
			Если Колонка.Тип = "Число" Тогда
				Текст = СтрЗаменить(Область.Текст, "%", "");
				СтруктраЗначений.Вставить(Колонка.Имя,  АСЦ_ОбщийМодуль.вЧисло(Текст));
			Иначе	
				СтруктраЗначений.Вставить(Колонка.Имя, Область.Текст);
			КонецЕсли;	
			
		КонецЦикла;	
		
		ПустаяСтрока = Ложь;
		Для каждого Колонка из КлючевыеПоля Цикл
			
			Если Колонка.Тип = "Число" Тогда
				ЭтоПустоеЗначение = (СтруктраЗначений[Колонка.Имя] = 0);
			Иначе
				ЭтоПустоеЗначение = СтрДлина(СтруктраЗначений[Колонка.Имя]) <= 3;
			КонецЕсли;
			
			Если ЭтоПустоеЗначение Тогда
				ПустаяСтрока = Истина;
				Прервать;
			КонецЕсли;
			
		КонецЦикла;	
			
		Если ПустаяСтрока Тогда
			Продолжить;
		КонецЕсли;	
		
		НоваяСтрока = Таблица.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктраЗначений);
		
	КонецЦикла;	
	
	Элементы.ТаблицаКонтрагент.ТекстПодвала = "Всего записей: " + Таблица.Количество();
	Элементы.ТаблицаСумма.ТекстПодвала   = Таблица.Итог("Сумма");
	Элементы.ТаблицаСуммаКВ.ТекстПодвала = Таблица.Итог("СуммаКВ");
	
КонецПроцедуры	

&НаКлиенте
Процедура Просмотр(Команда)
	
	Если ПустаяСтрока(ИмяФайла) Тогда
		Возврат;
	КонецЕсли;	
	
	Файл = Новый Файл(ИмяФайла);
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Действие",   "Просмотр");
	ДопПараметры.Вставить("Расширение", Файл.Расширение);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПрочитатьЗавершение", ЭтотОбъект, ДопПараметры);
	НачатьПомещениеФайлов(ОписаниеОповещения, , ИмяФайла , Ложь, Новый УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНомерКолонки(Команда)
	
	Область = Элементы.ТабДок.ТекущаяОбласть;
	
	Имя = СтрЗаменить(ТекущийЭлемент.Имя, "УстановитьНомерКолонки", "");
	ЭтаФорма["Колонка" + Имя] = Область.Лево;
	Модифицированность = Истина;
	
	УстановитьВидимость(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСоотвествиеКолонки(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("УстановитьСоотвествиеКолонкиЗавершение", ЭтотОбъект);
	
	СписокКолонок = Новый СписокЗначений;
	Для каждого СтрокаТЗ из  ТаблицаКолонок Цикл
		СписокКолонок.Добавить(СтрокаТЗ.Имя, СтрокаТЗ.Заголовок);
	КонецЦикла;	
	СписокКолонок.ПоказатьВыборЭлемента(ОписаниеОповещения, "Выберите колонку");
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСоотвествиеКолонкиЗавершение(ВыбранныйЭлемент, Доппараметры) Экспорт
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Область = Элементы.ТабДок.ТекущаяОбласть;
	
	ЭтаФорма["Колонка" + ВыбранныйЭлемент.Значение] = Область.Лево;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	Закрыть(Таблица);
	
КонецПроцедуры


&НаКлиенте
Процедура ТолькоНеНайденные(Команда)
	
	Элементы.ТаблицаДокументаТолькоНеНайденные.Пометка = НЕ Элементы.ТаблицаДокументаТолькоНеНайденные.Пометка;
	
КонецПроцедуры


&НаКлиенте
Процедура Сортировать(Команда)
	
	ТекущаяКолонка = Элементы.Таблица.ТекущийЭлемент;
	Если ТекущаяКолонка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Таблица.Сортировать(Сред(ТекущаяКолонка.Имя, 8));
	
КонецПроцедуры

