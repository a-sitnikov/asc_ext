
Функция ПолучитьДанныеДокументаРТУ(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Дата КАК Дата,
	|	Док.Номер КАК Номер,
	|	Док.Организация КАК Организация,
	|	ЕСТЬNULL(Док.Организация.ИНН, """") КАК ОрганизацияИНН,
	|	ЕСТЬNULL(Док.Организация.КПП, """") КАК ОрганизацияКПП,
	|	Док.Контрагент КАК Контрагент,
	|	ЕСТЬNULL(Док.Контрагент.Наименование, """") КАК КонтрагентНаименование,
	|	ЕСТЬNULL(Док.Контрагент.ИНН, """") КАК КонтрагентИНН,
	|	ЕСТЬNULL(Док.Контрагент.КПП, """") КАК КонтрагентКПП,
	|	ЕСТЬNULL(Док.Контрагент.ДокументУдостоверяющийЛичность, """") КАК КонтрагентПаспорт,
	|	Док.ДоговорКонтрагента КАК Договор,
	|	Док.ДоговорКонтрагента.Наименование КАК ДоговорНаименование,
	|	Док.ДоговорКонтрагента.Дата КАК ДоговорДата,
	|	Док.ДоговорКонтрагента.ДатаНачала КАК ДоговорДатаНачала,
	|	Док.ДоговорКонтрагента.СрокДействия КАК ДоговорСрокДействия,
	|	ЕСТЬNULL(Док.ДЦ.Наименование, """") КАК ДЦ,
	|	Док.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(Док.Номенклатура.Наименование, """") КАК НоменклатураНаименование,
	|	ЕСТЬNULL(Док.Номенклатура.НоменклатурнаяГруппа.Наименование, """") КАК НоменклатураНГ,
	|	Док.Комитент КАК Страховая,
	|	ЕСТЬNULL(Док.Комитент.ИНН, """") КАК СтраховаяИНН,
	|	ЕСТЬNULL(Док.Комитент.КПП, """") КАК СтраховаяКПП,
	|	ЕСТЬNULL(Док.Комитент.Наименование, """") КАК СтраховаяНаименование,
	|	Док.Сумма КАК Сумма,
	|	Док.Сумма - Док.СуммаКВ КАК СуммаАгенскиеУслуги,
	|	Док.СуммаКВ КАК СуммаУслуги,
	|	Док.ВнешнийИД КАК id_unicus
	|ИЗ
	|	Документ.АСЦ_ПлановоеНачислениеКВ КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе	
		Возврат Результат.Выгрузить()[0];
	КонецЕсли;	
	
КонецФункции	

Функция ВыгрузкаОФУ_Реализации(ДатаНач, ДатаКон, ОрганизацияИНН, ОрганизацияКПП, ТолькоБУ) Экспорт
	
	Если ТолькоБУ = Неопределено Тогда
		ТолькоБУ = Истина;
	КонецЕсли;	
	
	СписокДокументов = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.ascgroup.ru/OFU", "СписокРТУ"));
	
	Запрос = Новый ПостроительЗапроса;
	Запрос.Параметры.Вставить("Дата1", ДатаНач);
	Запрос.Параметры.Вставить("Дата2", ДатаКон);
	Запрос.Параметры.Вставить("ВидОперации", Справочники.АСЦ_ВидыОперацийПлановоеНачислениеКВ.Страховки);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.АСЦ_ПлановоеНачислениеКВ КАК Док
	|ГДЕ
	|	Док.Проведен
	|	И Док.Дата МЕЖДУ &Дата1 И &Дата2
	|	И Док.ВидОперации В(&ВидОперации)
	|{ГДЕ
	|	Док.Организация}";
	
	Если ЗначениеЗаполнено(ОрганизацияИНН) Тогда
		
		Организация = АСЦ_ПоискОбъектов.ПолучитьОрганизациюПоИНН(ОрганизацияИНН, ОрганизацияКПП);
		
		ЭлементОтбора = Запрос.Отбор.Добавить("Организация");
		ЭлементОтбора.Установить(Организация, Истина);
		
	КонецЕсли;	
	
	Запрос.Выполнить();
	Выборка = Запрос.Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Данные = ПолучитьДанныеДокументаРТУ(Выборка.Ссылка);
		
		Документ = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.ascgroup.ru/OFU", "РТУ"));
		Документ.ГУИД  = Строка(Выборка.Ссылка.УникальныйИдентификатор());
		Документ.Дата  = Данные.Дата;
		Документ.Номер = Данные.Номер;
		Документ.Тип   = "Реализация";
		Документ.БУ    = Истина;
		
		// Организация
		пОрганизация = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.ascgroup.ru/OFU", "Организация"));
		пОрганизация.ГУИД = Строка(Данные.Организация.УникальныйИдентификатор());
		пОрганизация.ИНН  = Данные.ОрганизацияИНН;
		пОрганизация.КПП  = Данные.ОрганизацияКПП;
		
		Документ.Организация = пОрганизация;
		
		// Основание
		пОснование = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.ascgroup.ru/OFU", "Основание"));
		пОснование.ГУИД = ""; 
		пОснование.Тип  = "";
		
		Документ.Основание = пОснование;
		
		// Контрагент
		пКонтрагент = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.ascgroup.ru/OFU", "Контрагент"));
		Если ЗначениеЗаполнено(Данные.Контрагент) Тогда
			пКонтрагент.ГУИД         = Строка(Данные.Контрагент.УникальныйИдентификатор());
			пКонтрагент.Наименование = Данные.КонтрагентНаименование;
			пКонтрагент.ИНН          = Данные.КонтрагентИНН;
			пКонтрагент.КПП          = Данные.КонтрагентКПП;
			пКонтрагент.Паспорт      = Данные.КонтрагентПаспорт;
		Иначе	
			пКонтрагент.ГУИД         = "";
			пКонтрагент.Наименование = "";
			пКонтрагент.ИНН          = "";
			пКонтрагент.КПП          = "";
		КонецЕсли;

		Документ.Контрагент = пКонтрагент;
		
		// Договор
		пДоговор = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.ascgroup.ru/OFU", "Договор"));
		Если ЗначениеЗаполнено(Данные.Договор) Тогда
			пДоговор.ГУИД         = Строка(Данные.Договор.УникальныйИдентификатор());
			пДоговор.Наименование = Данные.ДоговорНаименование;
			пДоговор.Дата         = Данные.ДоговорДата;
			пДоговор.ДатаНачала   = Данные.ДоговорДатаНачала;
			пДоговор.СрокДействия = Данные.ДоговорСрокДействия;
		Иначе	
			пДоговор.ГУИД         = "";
			пДоговор.Наименование = "";
		КонецЕсли;
		
		Документ.Договор = пДоговор;
		
		// Страховая
		пСтраховая = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.ascgroup.ru/OFU", "Контрагент"));
		Если ЗначениеЗаполнено(Данные.Страховая) Тогда
			пСтраховая.ГУИД         = Строка(Данные.Страховая.УникальныйИдентификатор());
			пСтраховая.Наименование = Данные.СтраховаяНаименование;
			пСтраховая.ИНН          = Данные.СтраховаяИНН;
			пСтраховая.КПП          = Данные.СтраховаяКПП;
		Иначе
			пСтраховая.ГУИД         = "";
			пСтраховая.Наименование = "";
			пСтраховая.ИНН          = "";
			пСтраховая.КПП          = "";
		КонецЕсли;
		
		Документ.Страховая = пСтраховая;
		
		// Номенклатура
		пНоменклатура = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.ascgroup.ru/OFU", "Номенклатура"));
		пНоменклатура.Наименование         = Данные.НоменклатураНаименование;
		пНоменклатура.НоменклатурнаяГруппа = Данные.НоменклатураНГ;
		
		Документ.Номенклатура = пНоменклатура;
		
		Документ.ДЦ        = Данные.ДЦ;
		Документ.Сумма     = Данные.Сумма;
		Документ.СуммаКВ   = Данные.СуммаУслуги;
		Документ.id_unicus = СтрЗаменить(Данные.id_unicus, Символы.НПП, "");
		
		СписокДокументов.Документы.Добавить(Документ);
		
	КонецЦикла;	
	
	Возврат СписокДокументов;
	
КонецФункции

Функция ВыгрузкаОФУ_ОтчетПосредника(ДатаНач, ДатаКон, ОрганизацияИНН, ОрганизацияКПП, ТолькоБУ) Экспорт
	
	СписокДокументов = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.ascgroup.ru/OFU", "СписокОтчетовПосредника"));
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый ПостроительЗапроса;
	Запрос.Параметры.Вставить("Дата1", ДатаНач);
	Запрос.Параметры.Вставить("Дата2", ДатаКон);
	Запрос.Параметры.Вставить("ВидОперации", Справочники.АСЦ_ВидыОперацийПлановоеНачислениеКВ.Страховки);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Ссылка КАК Ссылка,
	|	Док.Дата КАК Дата,
	|	Док.Номер КАК Номер,
	|	Док.Организация КАК Организация,
	|	Док.Организация.ИНН КАК ОрганизацияИНН,
	|	Док.Организация.КПП КАК ОрганизацияКПП,
	|	Док.Контрагент КАК Страховая,
	|	ЕСТЬNULL(Док.Контрагент.ИНН, """") КАК СтраховаяИНН,
	|	ЕСТЬNULL(Док.Контрагент.КПП, """") КАК СтраховаяКПП,
	|	ЕСТЬNULL(Док.Контрагент.Наименование, """") КАК СтраховаяНаименование,
	|	Док.ВнешнийНомер КАК ДоговорНаименование,
	|	Док.Продажи.(
	|		Документ КАК Документ,
	|		Документ.Контрагент КАК Контрагент,
	|		Документ.Контрагент.Наименование КАК КонтрагентНаименование,
	|		Документ.Контрагент.ИНН КАК КонтрагентИНН,
	|		Документ.Контрагент.КПП КАК КонтрагентКПП,
	|		Документ.Контрагент.ДокументУдостоверяющийЛичность КАК КонтрагентПаспорт,
	|		Документ.ДоговорКонтрагента КАК Договор,
	|		Документ.ДоговорКонтрагента.Наименование КАК ДоговорНаименование,
	|		Документ.ДоговорКонтрагента.Дата КАК ДоговорДата,
	|		Документ.ДоговорКонтрагента.ДатаНачала КАК ДоговорДатаНачала,
	|		Документ.ДоговорКонтрагента.СрокДействия КАК ДоговорСрокДействия,
	|		Сумма КАК Сумма,
	|		СуммаКВ КАК СуммаКВ,
	|		Документ.ВнешнийИД КАК id_unicus
	|	) КАК Продажи
	|ИЗ
	|	Документ.АСЦ_ОтчетПосредникаУпр КАК Док
	|ГДЕ
	|	Док.Проведен
	|	И Док.Дата МЕЖДУ &Дата1 И &Дата2
	|	И Док.ВидОперации В(&ВидОперации)
	|{ГДЕ
	|	Док.Организация}";
	
	Если ЗначениеЗаполнено(ОрганизацияИНН) Тогда
		
		Организация = АСЦ_ПоискОбъектов.ПолучитьОрганизациюПоИНН(ОрганизацияИНН, ОрганизацияКПП);
		
		ЭлементОтбора = Запрос.Отбор.Добавить("Организация");
		ЭлементОтбора.Установить(Организация, Истина);
		
	КонецЕсли;	
	
	Запрос.Выполнить();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Выборка = Запрос.Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Документ = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.ascgroup.ru/OFU", "ОтчетПосредника"));
		Документ.ГУИД  = Строка(Выборка.Ссылка.УникальныйИдентификатор());
		Документ.Дата  = Выборка.Дата;
		Документ.Номер = Выборка.Номер;
		
		// Организация
		пОрганизация = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.ascgroup.ru/OFU", "Организация"));
		пОрганизация.ГУИД = Строка(Выборка.Организация.УникальныйИдентификатор());
		пОрганизация.ИНН  = Выборка.ОрганизацияИНН;
		пОрганизация.КПП  = Выборка.ОрганизацияКПП;
		
		Документ.Организация = пОрганизация;
		
		// Страховая
		пСтраховая = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.ascgroup.ru/OFU", "Контрагент"));
		Если ЗначениеЗаполнено(Выборка.Страховая) Тогда
			пСтраховая.ГУИД         = Строка(Выборка.Страховая.УникальныйИдентификатор());
			пСтраховая.Наименование = Выборка.СтраховаяНаименование;
			пСтраховая.ИНН          = Выборка.СтраховаяИНН;
			пСтраховая.КПП          = Выборка.СтраховаяКПП;
		Иначе
			пСтраховая.ГУИД         = "";
			пСтраховая.Наименование = "";
			пСтраховая.ИНН          = "";
			пСтраховая.КПП          = "";
		КонецЕсли;	
		
		Документ.Страховая = пСтраховая;
		
		// Договор
		пДоговор = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.ascgroup.ru/OFU", "Договор"));
		пДоговор.ГУИД         = "";
		пДоговор.Наименование = Выборка.ДоговорНаименование;
		
		Документ.Договор = пДоговор;
		
		// ТЧ
		ТипСтрокиТЧ = Документ.Тип().Свойства.Получить("ТЧ").Тип;
		
		ВыборкаТЧ = Выборка.Продажи.Выбрать();
		Пока ВыборкаТЧ.Следующий() Цикл
			
			пСтрокаТЧ = ФабрикаXDTO.Создать(ТипСтрокиТЧ);
		
			// Контрагент
			пКонтрагент = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.ascgroup.ru/OFU", "Контрагент"));
			Если ЗначениеЗаполнено(ВыборкаТЧ.Контрагент) Тогда
				пКонтрагент.ГУИД         = Строка(ВыборкаТЧ.Контрагент.УникальныйИдентификатор());
				пКонтрагент.Наименование = ВыборкаТЧ.КонтрагентНаименование;
				пКонтрагент.ИНН          = ВыборкаТЧ.КонтрагентИНН;
				пКонтрагент.КПП          = ВыборкаТЧ.КонтрагентКПП;
				пКонтрагент.Паспорт      = ВыборкаТЧ.КонтрагентПаспорт;
			Иначе	
				пКонтрагент.ГУИД         = "";
				пКонтрагент.Наименование = "";
				пКонтрагент.ИНН          = "";
				пКонтрагент.КПП          = "";
			КонецЕсли;	
			
			пСтрокаТЧ.Контрагент = пКонтрагент;
			
			// Договор
			пДоговор = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.ascgroup.ru/OFU", "Договор"));
			Если ЗначениеЗаполнено(ВыборкаТЧ.Договор) Тогда
				пДоговор.ГУИД         = Строка(ВыборкаТЧ.Договор.УникальныйИдентификатор());
				пДоговор.Наименование = ВыборкаТЧ.ДоговорНаименование;
				пДоговор.Дата         = ВыборкаТЧ.ДоговорДата;
				пДоговор.ДатаНачала   = ВыборкаТЧ.ДоговорДатаНачала;
				пДоговор.СрокДействия = ВыборкаТЧ.ДоговорСрокДействия;
			Иначе	
				пДоговор.ГУИД         = "";
				пДоговор.Наименование = "";
			КонецЕсли;
			
			пСтрокаТЧ.Договор = пДоговор;
			
			// Документ
			пОснование = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.ascgroup.ru/OFU", "Основание"));
			пОснование.ГУИД = Строка(ВыборкаТЧ.Документ.УникальныйИдентификатор()); 
			пОснование.Тип  = "Реализация";
			
			пСтрокаТЧ.Документ = пОснование;
			
			// Общие
			пСтрокаТЧ.Сумма     = ВыборкаТЧ.Сумма;
			пСтрокаТЧ.Сумма     = ВыборкаТЧ.Сумма;
			пСтрокаТЧ.СуммаКВ   = ВыборкаТЧ.СуммаКВ;
			пСтрокаТЧ.id_unicus = СтрЗаменить(ВыборкаТЧ.id_unicus, Символы.НПП, "");
			пСтрокаТЧ.БУ        = Истина;
			
			Документ.ТЧ.Добавить(пСтрокаТЧ);
			
		КонецЦикла;	
		
		СписокДокументов.Документы.Добавить(Документ);
		
	КонецЦикла;	
	
	Возврат СписокДокументов;
		
КонецФункции
