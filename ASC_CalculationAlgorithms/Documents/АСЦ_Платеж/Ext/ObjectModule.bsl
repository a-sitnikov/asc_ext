#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура СконвертироватьДокумент() Экспорт
	
	Если ЗначениеЗаполнено(СозданныйДокументВБазе) Тогда
		// Повторно документ не конвертируем
		Возврат;
	КонецЕсли;
	
	Если ВидПлатежногоДокумента = "ПКО" Тогда
		
		Если ТочкаОплаты = "Оперкасса" Тогда 
			ВызватьИсключение "Документ от оперкассы не будет сконвертирован";
		КонецЕсли;
		
		Если ПустаяСтрока(ТочкаОплаты) Тогда
			ВызватьИсключение "В документе не указан реквизит Точка оплаты, документ не будет сконвертирован";
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнитьНедостающиеСсылки();
	
	Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
		ВызватьИсключение "Не найден контрагент";
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(Договор) Тогда
		ВызватьИсключение "Не найден договор";
	КонецЕсли;	
	
	Если ВидПлатежногоДокумента = "ПКО" 
		И СпособПлатежа <> "Банковская карта" Тогда
		СоздатьПКО();
		
	ИначеЕсли ВидПлатежногоДокумента = "ППВ" Тогда 
		СоздатьПоступлениеДС();
		
	ИначеЕсли ВидПлатежногоДокумента = "ПКО" 
		И СпособПлатежа = "Банковская карта" Тогда
		СоздатьОплатаПлатежнойКартой();
	КонецЕсли;
		
КонецПроцедуры	

Процедура ЗаполнитьНедостающиеСсылки() Экспорт
	
	Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
		Контрагент = АСЦ_ПоискОбъектов.НайтиКонтрагента(НаименованиеКонтрагента, ИННКонтрагента, КППКонтрагента);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Контрагент)
		И ЗначениеЗаполнено(ДоговорНомер) Тогда
		
		пДоговорНомер = СтрЗаменить(ДоговорНомер, " ", "");
		Договор = АСЦ_ПоискОбъектов.НайтиДоговор(Контрагент, Организация, пДоговорНомер, Перечисления.ВидыДоговоровКонтрагентовУХ.СПокупателем);
		
	КонецЕсли;	
	
КонецПроцедуры	

Функция ПолучитьВидОплаты()
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Организация", Организация);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Спр.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыОплатОрганизаций КАК Спр
	|ГДЕ
	|	НЕ Спр.ПометкаУдаления
	|	И Спр.Организация = &Организация";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Возврат Результат.Выгрузить()[0][0];
	Иначе	
		
		СпрОбъект = Справочники.ВидыОплатОрганизаций.СоздатьЭлемент();
		СпрОбъект.Наименование = "Оплата картой";
		СпрОбъект.Организация  = Организация;
		СпрОбъект.ТипОплаты    = Перечисления.ТипыОплат.ПлатежнаяКарта;
		СпрОбъект.СчетУчетаРасчетов = ПланыСчетов.Хозрасчетный.ПродажиПоПлатежнымКартам;          //57.03
		СпрОбъект.Контрагент   = АСЦ_ПоискОбъектов.НайтиКонтрагента("", "7734202860", "770801001"); //МКБ
		
		ДанныеДоговора = Новый Структура;
		ДанныеДоговора.Вставить("Организация",   Организация);
		ДанныеДоговора.Вставить("Контрагент",    СпрОбъект.Контрагент);
		ДанныеДоговора.Вставить("Наименование",  "Договор эквайринга");
		ДанныеДоговора.Вставить("ВидДоговораУХ", Перечисления.ВидыДоговоровКонтрагентовУХ.Прочее);
		
		СпрОбъект.ДоговорКонтрагента = АСЦ_ПоискОбъектов.ПолучитьДоговор(ДанныеДоговора, Ложь, Ложь, Ложь);
		СпрОбъект.Записать();
		
		Возврат СпрОбъект.Ссылка;
		
	КонецЕсли;
	
КонецФункции	

Функция ПолучитьДоговорЭквайринга(БанкКонтрагент)
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Организация", Организация);
	Запрос.Параметры.Вставить("Организация", Организация);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Спр.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыОплатОрганизаций КАК Спр
	|ГДЕ
	|	НЕ Спр.ПометкаУдаления
	|	И Спр.Организация = &Организация";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Возврат Результат.Выгрузить()[0][0];
	Иначе	
		
		СпрОбъект = Справочники.ВидыОплатОрганизаций.СоздатьЭлемент();
		СпрОбъект.Наименование = "Оплата картой";
		СпрОбъект.Организация  = Организация;
		СпрОбъект.ТипОплаты    = Перечисления.ТипыОплат.ПлатежнаяКарта;
		СпрОбъект.СчетУчетаРасчетов = ПланыСчетов.Хозрасчетный.ПродажиПоПлатежнымКартам;          //57.03
		СпрОбъект.Контрагент   = АСЦ_ПоискОбъектов.НайтиКонтрагента("", "7734202860", "770801001"); //МКБ
		СпрОбъект.Записать();
		
		Возврат СпрОбъект.Ссылка;
		
	КонецЕсли;
	
КонецФункции	

Процедура СоздатьПКО()
	
	Если ЗначениеЗаполнено(СозданныйДокументВБазе) Тогда
		ДокументОбъект = СозданныйДокументВБазе.ПолучитьОбъект();
		ДокументОбъект.РасшифровкаПлатежа.Очистить();
	Иначе	
		ДокументОбъект = Документы.ПриходныйКассовыйОрдер.СоздатьДокумент();
	КонецЕсли;	
	
	ВремяДокумента = Документы.ПриходныйКассовыйОрдер.ВремяДокументаПоУмолчанию();
	ДокументОбъект.Дата        = НачалоДня(Дата) + 3600 * ВремяДокумента.Часы + 60 * ВремяДокумента.Минуты;
	ДокументОбъект.Организация = Организация;
	ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.ОплатаПокупателя;
	ДокументОбъект.СчетКасса   = ПланыСчетов.Хозрасчетный.КассаОрганизации; //50.01
	ДокументОбъект.ВалютаДокумента = Справочники.Валюты.НайтиПоКоду(КодВалюты);
	ДокументОбъект.СуммаДокумента = СуммаДокумента;
	ДокументОбъект.Контрагент     = Контрагент;
	
	ЗаполнитьРасшифровкуПлатежа(ДокументОбъект.РасшифровкаПлатежа);
	
	ЗаписатьСозданныйДокумент(ДокументОбъект);
	
КонецПроцедуры	

Процедура СоздатьПоступлениеДС()
	
	Если ЗначениеЗаполнено(СозданныйДокументВБазе) Тогда
		ДокументОбъект = СозданныйДокументВБазе.ПолучитьОбъект();
		ДокументОбъект.РасшифровкаПлатежа.Очистить();
	Иначе	
		ДокументОбъект = Документы.ПоступлениеНаРасчетныйСчет.СоздатьДокумент();
	КонецЕсли;	
	
	ВремяДокумента = Документы.ПоступлениеНаРасчетныйСчет.ВремяДокументаПоУмолчанию();
	ДокументОбъект.Дата        = НачалоДня(Дата) + 3600 * ВремяДокумента.Часы + 60 * ВремяДокумента.Минуты;
	ДокументОбъект.Организация = Организация;
	ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ОплатаПокупателя;
	ДокументОбъект.СчетБанк    = ПланыСчетов.Хозрасчетный.РасчетныеСчета; //51
	ДокументОбъект.ВалютаДокумента = Справочники.Валюты.НайтиПоКоду(КодВалюты);
	ДокументОбъект.НомерВходящегоДокумента = НомерВходящегоДокумента;
	ДокументОбъект.ДатаВходящегоДокумента  = ДатаВходящегоДокумента;
	ДокументОбъект.СчетОрганизации = БанковскийСчет;
	ДокументОбъект.Контрагент  = Контрагент;
	ДокументОбъект.СуммаДокумента = СуммаДокумента;
	
	ЗаполнитьРасшифровкуПлатежа(ДокументОбъект.РасшифровкаПлатежа);
	
	ЗаписатьСозданныйДокумент(ДокументОбъект);
	
КонецПроцедуры	

Процедура СоздатьОплатаПлатежнойКартой()
	
	Если ЗначениеЗаполнено(СозданныйДокументВБазе) Тогда
		ДокументОбъект = СозданныйДокументВБазе.ПолучитьОбъект();
		ДокументОбъект.РасшифровкаПлатежа.Очистить();
	Иначе	
		ДокументОбъект = Документы.ОплатаПлатежнойКартой.СоздатьДокумент();
	КонецЕсли;	
	
	ВремяДокумента = Документы.ОплатаПлатежнойКартой.ВремяДокументаПоУмолчанию();
	ДокументОбъект.Дата        = НачалоДня(Дата) + 3600 * ВремяДокумента.Часы + 60 * ВремяДокумента.Минуты;
	ДокументОбъект.Организация = Организация;
	ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийОплатаПлатежнойКартой.ОплатаПокупателя;
	ДокументОбъект.СчетКасса   = ПланыСчетов.Хозрасчетный.ПродажиПоПлатежнымКартам; //57.03
	ДокументОбъект.ВалютаДокумента = Справочники.Валюты.НайтиПоКоду(КодВалюты);
	ДокументОбъект.СуммаДокумента = СуммаДокумента;
	ДокументОбъект.Контрагент  = Контрагент;
	ДокументОбъект.ВидОплаты   = ПолучитьВидОплаты();
	ДокументОбъект.Эквайер     = ДокументОбъект.ВидОплаты.Контрагент;
	ДокументОбъект.ДоговорЭквайринга = ДокументОбъект.ВидОплаты.ДоговорКонтрагента;
	
	ЗаполнитьРасшифровкуПлатежа(ДокументОбъект.РасшифровкаПлатежа);
	
	ЗаписатьСозданныйДокумент(ДокументОбъект);
	
КонецПроцедуры	

Процедура ЗаполнитьРасшифровкуПлатежа(ДокументРасшифровкаПлатежа)
	
	Если Ложь Тогда
		ДокументРасшифровкаПлатежа = Документы.ПоступлениеНаРасчетныйСчет.СоздатьДокумент().РасшифровкаПлатежа;
	КонецЕсли; 
	
	// Нет соответствия статей УПП и АСТРА, 
	// но у нас всегда 1 статья и она уже проставлена в договоре
	СтатьяДДС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ОсновнаяСтатьяДвиженияДенежныхСредств");
	
	Для каждого СтрокаТЧ из РасшифровкаПлатежа Цикл
		
		НоваяСтрока = ДокументРасшифровкаПлатежа.Добавить();
		НоваяСтрока.СпособПогашенияЗадолженности = Перечисления.СпособыПогашенияЗадолженности.Автоматически;
		НоваяСтрока.СуммаПлатежа = СтрокаТЧ.Сумма;
		НоваяСтрока.СуммаВзаиморасчетов = СтрокаТЧ.Сумма;
		НоваяСтрока.КурсВзаиморасчетов  = 1;
		НоваяСтрока.КратностьВзаиморасчетов = 1;
		НоваяСтрока.ДоговорКонтрагента  = Договор;
		НоваяСтрока.СчетУчетаРасчетовПоАвансам     = ПланыСчетов.Хозрасчетный.РасчетыСПрочимиПоставщикамиИПодрядчиками; // 76.05
		НоваяСтрока.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.РасчетыСПрочимиПоставщикамиИПодрядчиками; // 76.05
		
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.СтавкаНДС)
			ИЛИ СтрокаТЧ.СтавкаНДС = 0 Тогда // Ставка 0 у нас не используется
			НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		Иначе	
			НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС["НДС" + СтрокаТЧ.СтавкаНДС];
		КонецЕсли;	
		
		Попытка
			НоваяСтрока.СтатьяДвиженияДенежныхСредств = СтатьяДДС;
		Исключение
		КонецПопытки;	
		
	КонецЦикла;	
	
КонецПроцедуры	

Процедура ЗаписатьСозданныйДокумент(ДокументОбъект)
	
	НачатьТранзакцию();
	
	ДокументОбъект.Записать();
	
	Запись = РегистрыСведений.ОтложенныеДвиженияДокументов.СоздатьМенеджерЗаписи();
	Запись.УзелОбмена = ПланыОбмена.Полный.ЭтотУзел();
	Запись.Документ   = ДокументОбъект.Ссылка;
	Запись.ДатаДокумента = ДокументОбъект.Дата;
	Запись.Записать();
	
	СозданныйДокументВБазе = ДокументОбъект.Ссылка;
	
	Записать();
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

#КонецЕсли
