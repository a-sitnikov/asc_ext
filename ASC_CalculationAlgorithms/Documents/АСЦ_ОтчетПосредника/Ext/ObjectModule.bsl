#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ
//

Процедура ДобавитьИзменениеОбъекта(ДокументСсылка, База)
	
	Если НЕ ЗначениеЗаполнено(База) Тогда
		Возврат;
	КонецЕсли;	
	
	Запись = РегистрыСведений.ИзмененныеОбъектыДляВыгрузки.СоздатьМенеджерЗаписи();
	Запись.ИспользуемаяИБ        = База;
	Запись.НастройкаСоответствия = "";
	Запись.Элемент               = ДокументСсылка;
	
	Запись.Записать();
	
КонецПроцедуры	

Процедура ЗаписатьДокумент(ДокументОбъект)
	
	Если ДокументОбъект = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Режим = РежимЗаписиДокумента.Запись;
		
	НачатьТранзакцию();
		
	ДокументОбъект.Записать(Режим);
	
	Запись = РегистрыСведений.ОтложенныеДвиженияДокументов.СоздатьМенеджерЗаписи();
	Запись.Документ      = ДокументОбъект.Ссылка;
	Запись.УзелОбмена    = ПланыОбмена.Полный.ЭтотУзел();
	Запись.ДатаДокумента = ДокументОбъект.Дата;
	Запись.Записать();
		
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры	

Функция ПолучитьДанныеДокумента(ДокументСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Дата КАК Дата,
	|	Док.РучнаяКорректировка КАК РучнаяКорректировка,
	|	ЕСТЬNULL(ДокУслуги.Номенклатура, ДокАгентскиеУслуги.Номенклатура) КАК Номенклатура,
	|	Док.СуммаДокумента КАК Сумма,
	|	ДокАгентскиеУслуги.ДоговорКонтрагента КАК ДоговорСК,
	|	ЕСТЬNULL(ДокАгентскиеУслуги.Сумма, 0) КАК СуммаАгенскиеУслуги,
	|	ЕСТЬNULL(ДокУслуги.Сумма, 0) КАК СуммаУслуги
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК Док
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Услуги КАК ДокУслуги
	|		ПО (ДокУслуги.Ссылка = Док.Ссылка)
	|			И (ДокУслуги.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.АгентскиеУслуги КАК ДокАгентскиеУслуги
	|		ПО (ДокАгентскиеУслуги.Ссылка = Док.Ссылка)
	|			И (ДокАгентскиеУслуги.НомерСтроки = 1)
	|ГДЕ
	|	Док.Ссылка = &Ссылка";
	
	ДокументИмя = ДокументСсылка.Метаданные().Имя;
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "РеализацияТоваровУслуг", ДокументИмя); 
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе	
		Возврат Результат.Выгрузить()[0];
	КонецЕсли;	
	
КонецФункции	

// Функция проверяет соотвествие документа и данным строки
// Ворзвращаемое занчение: 
//    Истина - Документ соотвествует строке, перезаполнять не нужно
//    Ложь   - Документ не соответствует строке
Функция ДокументРТУСоответствуетСтроке(ДанныеДокумента, СтрокаТЧ)
	
	Если ДанныеДокумента.Сумма <> СтрокаТЧ.СуммаОплаты
		ИЛИ ДанныеДокумента.СуммаУслуги <> СтрокаТЧ.СуммаКВ Тогда
		
		Возврат Ложь;
		
	Иначе	
		
		Возврат Истина;
		
	КонецЕсли;	
	
КонецФункции	

Функция ПолучитьКорректировкуПоСвойству(Свойство, Значение, Основание)
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Значение",  Значение); 
	Запрос.Параметры.Вставить("Свойство",  Свойство); 
	Запрос.Параметры.Вставить("Основание", Основание); 
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Рег.Объект КАК Объект
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК Рег
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК Док
	|		ПО (Док.Ссылка = Рег.Объект)
	|			И (НЕ Док.ПометкаУдаления)
	|ГДЕ
	|	Рег.Свойство = &Свойство
	|	И Рег.Значение = &Значение
	|	И Док.ДокументРеализации = &Основание
	|
	|УПОРЯДОЧИТЬ ПО
	|	Док.Дата УБЫВ";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Возврат Результат.Выгрузить()[0][0];
	Иначе
		Возврат Документы.КорректировкаРеализации.ПустаяСсылка();
	КонецЕсли;	
	
КонецФункции	

Процедура ЗаполнитьДокументыПоСтроке(СтрокаТЧ, ПрименяетсяУСН) Экспорт
	
	Если Ложь Тогда
		СтрокаТЧ = Продажи.Добавить();
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(СтрокаТЧ.ДокументУпр) Тогда
		// Ненайден документ реализации ничего не делаем
		Сообщить("Не заполнен упр документ в строке " + СтрокаТЧ.НомерСтроки);
		Возврат;
	КонецЕсли;
	
	Если СтрокаТЧ.ДокументУпр.Сумма = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтрокаТЧ.ДокументБУ) Тогда
		СтрокаТЧ.ДокументБУ = Документы.АСЦ_ПлановоеНачислениеКВ.ПолучитьДокументБУ(СтрокаТЧ.ДокументУпр, Ложь);
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(СтрокаТЧ.ДокументБУ) Тогда
		ДокументОбъект = СтрокаТЧ.ДокументБУ.ПолучитьОбъект();
	Иначе
		ДокументОбъект = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
	КонецЕсли;	
	
	Если ПрименяетсяУСН Тогда
		ДокументОбъект.Дата = СтрокаТЧ.ДокументУпр.Дата;
	Иначе
		ДокументОбъект.Дата = Дата;
	КонецЕсли;	
	
	ДокументОбъект.ПометкаУдаления = Ложь;
	ДокументОбъект.АСЦ_Основание   = СтрокаТЧ.ДокументУпр;
	ДокументОбъект.ВидОперации     = Перечисления.ВидыОперацийРеализацияТоваров.ПродажаКомиссия;
	ДокументОбъект.Организация     = СтрокаТЧ.ДокументУпр.Организация;
	ДокументОбъект.Контрагент      = СтрокаТЧ.ДокументУпр.Контрагент;
	ДокументОбъект.ВалютаДокумента = СтрокаТЧ.ДокументУпр.ВалютаДокумента;
	
	ДокументОбъект.СпособЗачетаАвансов            = Перечисления.СпособыЗачетаАвансов.Автоматически;
	ДокументОбъект.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.05");
	ДокументОбъект.СчетУчетаРасчетовПоАвансам     = ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.05");
	
	// Договор контрагента
	ДанныеДоговора = Новый Структура;
	ДанныеДоговора.Вставить("Контрагент",     ДокументОбъект.Контрагент);
	ДанныеДоговора.Вставить("Организация",    ДокументОбъект.Организация);
	ДанныеДоговора.Вставить("Наименование",   "Договор страхования");
	ДанныеДоговора.Вставить("ВидДоговораУХ",  Справочники.ВидыДоговоровКонтрагентовУХ.СПокупателем);
	
	ДокументОбъект.ДоговорКонтрагента = АСЦ_ПоискОбъектов.ПолучитьДоговор(ДанныеДоговора, Ложь, Истина);
	
	ДокументОбъект.Услуги.Очистить();
	ДокументОбъект.АгентскиеУслуги.Очистить();
	
	Если ПрименяетсяУСН Тогда
		
		Если СтрокаТЧ.ДокументУпр.СуммаКВ > 0 Тогда
			НоваяСтрока = ДокументОбъект.Услуги.Добавить();
			НоваяСтрока.Номенклатура = СтрокаТЧ.ДокументУпр.Номенклатура;
			НоваяСтрока.Сумма        = СтрокаТЧ.ДокументУпр.СуммаКВ;
			НоваяСтрока.СтавкаНДС    = Перечисления.СтавкиНДС.БезНДС;
			НоваяСтрока.СчетДоходов  = ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.01.1");
			НоваяСтрока.Субконто     = НоваяСтрока.Номенклатура.НоменклатурнаяГруппа;
		КонецЕсли;	
		
		Если СтрокаТЧ.ДокументУпр.Сумма - СтрокаТЧ.ДокументУпр.СуммаКВ > 0 Тогда
			НоваяСтрока = ДокументОбъект.АгентскиеУслуги.Добавить();
			НоваяСтрока.Номенклатура = СтрокаТЧ.ДокументУпр.Номенклатура;
			НоваяСтрока.Сумма        = СтрокаТЧ.ДокументУпр.Сумма - СтрокаТЧ.ДокументУпр.СуммаКВ;
			НоваяСтрока.Контрагент   = СтрокаТЧ.ДокументУпр.Комитент;
			НоваяСтрока.ДоговорКонтрагента = ДоговорКонтрагента;
			НоваяСтрока.СтавкаНДС    = Перечисления.СтавкиНДС.БезНДС;
			НоваяСтрока.СчетРасчетов = ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.01.1");
		КонецЕсли;	
		
	Иначе
		
		НоваяСтрока = ДокументОбъект.АгентскиеУслуги.Добавить();
		НоваяСтрока.Номенклатура = СтрокаТЧ.ДокументУпр.Номенклатура;
		НоваяСтрока.Сумма        = СтрокаТЧ.ДокументУпр.Сумма;
		НоваяСтрока.Контрагент   = СтрокаТЧ.ДокументУпр.Комитент;
		НоваяСтрока.ДоговорКонтрагента = ДоговорКонтрагента;
		НоваяСтрока.СтавкаНДС    = Перечисления.СтавкиНДС.БезНДС;
		НоваяСтрока.СчетРасчетов = ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.05");
		
	КонецЕсли;	
	
	ЗаписатьДокумент(ДокументОбъект);
	
	СтрокаТЧ.ДокументБУ = ДокументОбъект.Ссылка;
	
КонецПроцедуры

Функция ЗаполнитьОтчетКомитенту(ПрименяетсяУСН) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ОтчетКомитентуОПродажах) Тогда
		ОтчетКомитентуОПродажах = Документы.АСЦ_ОтчетПосредника.ПолучитьДокументБУ(Ссылка);
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ОтчетКомитентуОПродажах) Тогда
		
		ДокументОбъект = ОтчетКомитентуОПродажах.ПолучитьОбъект();
		ДокументОбъект.Товары.Очистить();
		
	Иначе
		
		ДокументОбъект = Документы.ОтчетКомитентуОПродажах.СоздатьДокумент();
		
	КонецЕсли;	
	
	ДокументОбъект.ПометкаУдаления    = Ложь;
	ДокументОбъект.АСЦ_Основание      = Ссылка;
	ДокументОбъект.Дата               = Дата;
	ДокументОбъект.ВидОперации        = Перечисления.ВидыОперацийОтчетКомитентуОПродажах.ОтчетОПродажах;
	ДокументОбъект.Организация        = Организация;
	ДокументОбъект.Контрагент         = Контрагент;
	ДокументОбъект.ДоговорКонтрагента = ДоговорКонтрагента;
	ДокументОбъект.ВалютаДокумента    = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	ДокументОбъект.КурсВзаиморасчетов      = 1;
	ДокументОбъект.КратностьВзаиморасчетов = 1;
	ДокументОбъект.Ответственный      = Пользователи.ТекущийПользователь();
	ДокументОбъект.СпособРасчетаКомиссионногоВознаграждения = Перечисления.СпособыРасчетаКомиссионногоВознаграждения.НеРассчитывается;
	ДокументОбъект.СуммаВключаетНДС   = Истина;
	
	ДокументОбъект.СчетДоходов              = ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.01");
	ДокументОбъект.СчетУчетаНДСПоРеализации = ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.03");
	
	Если ПрименяетсяУСН Тогда
		ДокументОбъект.СтавкаНДСВознаграждения  = Перечисления.СтавкиНДС.БезНДС;
		ДокументОбъект.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.01.1");
	Иначе	
		ДокументОбъект.УдержатьВознаграждение   = Истина;
		ДокументОбъект.СтавкаНДСВознаграждения  = Перечисления.СтавкиНДС.НДС18;
		ДокументОбъект.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.НайтиПоКоду("62.01");
		ДокументОбъект.СчетУчетаРасчетовПоАвансам     = ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.05");
	КонецЕсли;	
	
	Для каждого СтрокаТЧ из Продажи Цикл
		
		Если СтрокаТЧ.СуммаОплаты = 0 Тогда
			Продолжить;
		КонецЕсли;	
			
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.ДокументБУ) Тогда
			Продолжить;
		КонецЕсли;	
		
		НоваяСтрока = ДокументОбъект.Товары.Добавить();
		НоваяСтрока.Номенклатура = СтрокаТЧ.ДокументУпр.Номенклатура;
		НоваяСтрока.Покупатель   = СтрокаТЧ.ДокументУпр.Контрагент;
		НоваяСтрока.Сумма        = СтрокаТЧ.СуммаОплаты;
		НоваяСтрока.СтавкаНДС    = Перечисления.СтавкиНДС.БезНДС;
		НоваяСтрока.ДатаРеализации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТЧ.ДокументБУ, "Дата");
		НоваяСтрока.КлючСтроки   = НоваяСтрока.НомерСтроки;
		НоваяСтрока.Содержание   = Строка(СтрокаТЧ.ДокументУпр.ДоговорКонтрагента);
		
		Если НЕ ПрименяетсяУСН Тогда
			НоваяСтрока.СуммаВознаграждения    = СтрокаТЧ.ДокументУпр.СуммаКВ;
			НоваяСтрока.СуммаНДСВознаграждения = Окр(СтрокаТЧ.ДокументУпр.СуммаКВ * 18 / 118, 2);
		КонецЕсли;
		
		ДокументОбъект.Дата = Макс(ДокументОбъект.Дата, НоваяСтрока.ДатаРеализации);
		
	КонецЦикла;	
	
	ДокументОбъект.СуммаВознаграждения = ДокументОбъект.Товары.Итог("СуммаВознаграждения");
	
	ВремяДокумента = Документы.ОтчетКомитентуОПродажах.ВремяДокументаПоУмолчанию();
	ДокументОбъект.Дата = НачалоДня(ДокументОбъект.Дата) + ВремяДокумента.Часы * 3600 + ВремяДокумента.Минуты * 60 + 5;
	
	НачатьТранзакцию();
	
	ЗаписатьДокумент(ДокументОбъект);
	
	ЗафиксироватьТранзакцию();
	
	ОтчетКомитентуОПродажах = ДокументОбъект.Ссылка;
	
	Возврат ДокументОбъект.Ссылка;
	
КонецФункции	

Процедура ЗаполнитьСвязанныеДокументы() Экспорт
	
	ПрименяетсяУСН = УчетнаяПолитика.ПрименяетсяУСН(Организация, Дата);
	
	НачатьТранзакцию();
	
	Для каждого СтрокаТЧ из Продажи Цикл
		ЗаполнитьДокументыПоСтроке(СтрокаТЧ, ПрименяетсяУСН);
	КонецЦикла;	
		
	ЗаполнитьОтчетКомитенту(ПрименяетсяУСН);
	
	Записать();
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры	

Процедура ПровестиСвязныеДокументы(РежимЗаписи = Неопределено, РежимПроведения = Неопределено) Экспорт
	
	Если РежимЗаписи = Неопределено Тогда 
		РежимЗаписи = РежимЗаписиДокумента.Проведение;
	КонецЕсли;
	
	Если РежимПроведения = Неопределено Тогда 
		РежимПроведения = РежимПроведенияДокумента.Неоперативный;
	КонецЕсли;	
	
	Для каждого СтрокаТЧ из Продажи Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.Корректировка) Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = СтрокаТЧ.Корректировка.ПолучитьОбъект();
		ДокументОбъект.Записать(РежимЗаписи, РежимПроведения);
		
	КонецЦикла;	
	
	Если ЗначениеЗаполнено(ОтчетКомитентуОПродажах) Тогда
		ДокументОбъект = ОтчетКомитентуОПродажах.ПолучитьОбъект();
		ДокументОбъект.Записать(РежимЗаписи, РежимПроведения);
	КонецЕсли;	
	
КонецПроцедуры	

// Если дата не заполнена, установим по последней реализации
Процедура УстановитьДатуДокумента() Экспорт
	
	Для каждого СтрокаТЧ из Продажи Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.Документ) Тогда
			Продолжить;
		КонецЕсли;
		
		ДатаРТУ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТЧ.Документ, "Дата");
		Дата = Макс(Дата, ДатаРТУ);
		
	КонецЦикла;	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ
//

&Вместо("ПередЗаписью")
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	СуммаОплаты = Продажи.Итог("СуммаОплаты");
	СуммаКВ     = Продажи.Итог("СуммаКВ");
	
КонецПроцедуры

&Вместо("ОбработкаЗаполнения")
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.АСЦ_ОтчетПосредникаУпр") Тогда
		
		Дата        = ДанныеЗаполнения.Дата;
		Организация = ДанныеЗаполнения.Организация;
		Контрагент  = ДанныеЗаполнения.Контрагент;
		ОтчетПосредникаУпр = ДанныеЗаполнения;
		
		Для каждого СтрокаТЧ из ДанныеЗаполнения.Продажи Цикл
			
			НоваяСтрока = Продажи.Добавить();
			НоваяСтрока.ДокументУпр = СтрокаТЧ.Документ;
			НоваяСтрока.СуммаОплаты = СтрокаТЧ.Сумма;
			НоваяСтрока.ПроцентКВ   = СтрокаТЧ.ПроцентКВ;
			НоваяСтрока.СуммаКВ     = СтрокаТЧ.СуммаКВ;
			
		КонецЦикла;	
		
	КонецЕсли;	

КонецПроцедуры

&Вместо("ПриКопировании")
Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());

КонецПроцедуры

&Вместо("ОбработкаПроведения")
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	//ПровестиСвязныеДокументы(РежимЗаписиДокумента.Проведение, РежимПроведения);
	
КонецПроцедуры

&Вместо("ОбработкаУдаленияПроведения")
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	//ПровестиСвязныеДокументы(РежимЗаписиДокумента.ОтменаПроведения);
	
КонецПроцедуры

#КонецЕсли