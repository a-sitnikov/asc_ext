
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если Параметры.Отбор.Свойство("Организация") Тогда
		ОтборОрганизация = Параметры.Отбор.Организация;
		Элементы.ОтборОрганизация.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("Комитент") Тогда
		ОтборКонтрагент = Параметры.Отбор.Комитент;
		Элементы.ОтборКонтрагент.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("ВидОперации") Тогда
		ОтборВидОперации = Параметры.Отбор.ВидОперации;
		Элементы.ОтборВидОперации.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("Период") Тогда
		Элементы.Список.Период = Параметры.Период;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	//ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
	//	Список, 
	//	"Организация", 
	//	ОтборОрганизация, 
	//	ЗначениеЗаполнено(ОтборОрганизация));
	//	
	//ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
	//	Список, 
	//	"Контрагент", 
	//	ОтборКонтрагент, 
	//	ЗначениеЗаполнено(ОтборКонтрагент));
	//	
	//ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
	//	Список, 
	//	"ВидОперации", 
	//	ОтборВидОперации, 
	//	ЗначениеЗаполнено(ОтборВидОперации));
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)

	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		Список, 
		"Организация", 
		ОтборОрганизация, 
		ЗначениеЗаполнено(ОтборОрганизация));

КонецПроцедуры

&НаКлиенте
Процедура ОтборКонтрагентПриИзменении(Элемент)
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		Список, 
		"Комитент", 
		ОтборКонтрагент, 
		ЗначениеЗаполнено(ОтборКонтрагент));
		
КонецПроцедуры

&НаКлиенте
Процедура ОтборВидОперацииПриИзменении(Элемент)

	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		Список, 
		"ВидОперации", 
		ОтборВидОперации, 
		ЗначениеЗаполнено(ОтборВидОперации));

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);

КонецПроцедуры

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

