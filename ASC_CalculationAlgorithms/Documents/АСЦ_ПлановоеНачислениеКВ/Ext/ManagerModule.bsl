#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

&Вместо("ОбработкаПолученияПолейПредставления")
Процедура АСЦ_ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("Дата");
	Поля.Добавить("Номер");
	Поля.Добавить("ЭтоКорректировка");
	
КонецПроцедуры

&После("ОбработкаПолученияПредставления")
Процедура АСЦ_ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Данные.ЭтоКорректировка Тогда
		Представление = "АСЦ Корректировка начисления КВ";
	Иначе	
		Представление = "АСЦ Плановое начисление КВ";
	КонецЕсли;
	
	Представление = Представление + " " + Данные.Номер + " от " + Формат(Данные.Дата);
	
КонецПроцедуры

// ПОДГОТОВКА ПАРАМЕТРОВ ПРОВЕДЕНИЯ ДОКУМЕНТА

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ТаблицыДляДвижений = Новый Структура;		
	ДополнительныеСвойства = Новый Структура;
	НомераТаблиц = Новый Структура;
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",    ДокументСсылка);
	Запрос.УстановитьПараметр("Основание", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылка, "Основание"));
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаНачисленноеКВ(НомераТаблиц);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Для Каждого НомерТаблицы Из НомераТаблиц Цикл
		Если СтрНачинаетсяС(НомерТаблицы.Ключ, "Таблица") Тогда			
			Продолжить;
		КонецЕсли;
		ТаблицыДляДвижений.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
			
	ДополнительныеСвойства.Вставить("ТаблицыДляДвижений", ТаблицыДляДвижений);
	
	Возврат ДополнительныеСвойства;

КонецФункции

Функция ТекстЗапросаНачисленноеКВ(НомераТаблиц)

	НомераТаблиц.Вставить("АСЦ_НачисленноеКВ", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Док.Дата КАК Период,
	|	Док.ДЦ КАК ДЦ,
	|	Док.Статья КАК Статья,
	|	Док.Комитент КАК Комитент,
	|	Док.Организация КАК Организация,
	|	Док.Реализация КАК Реализация,
	|	Док.Ссылка КАК Документ,
	|	-ВЫБОР
	|		КОГДА Док.ВидОперации.ДвиженияСумма = ""Сумма""
	|			ТОГДА Док.Сумма
	|		ИНАЧЕ Док.СуммаКВ
	|	КОНЕЦ КАК Сумма,
	|	-Док.СуммаКВ КАК СуммаКВ
	|ИЗ
	|	Документ.АСЦ_ПлановоеНачислениеКВ КАК Док
	|ГДЕ
	|	Док.Ссылка = &Основание
	|	И (Док.Сумма > 0
	|			ИЛИ Док.СуммаКВ > 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Док.Дата,
	|	Док.ДЦ,
	|	Док.Статья,
	|	Док.Комитент,
	|	Док.Организация,
	|	Док.Реализация,
	|	Док.Ссылка,
	|	ВЫБОР
	|		КОГДА Док.ВидОперации.ДвиженияСумма = ""Сумма""
	|			ТОГДА Док.Сумма
	|		ИНАЧЕ Док.СуммаКВ
	|	КОНЕЦ,
	|	Док.СуммаКВ
	|ИЗ
	|	Документ.АСЦ_ПлановоеНачислениеКВ КАК Док
	|ГДЕ
	|	Док.Ссылка = &Ссылка
	|	И (Док.Сумма > 0
	|			ИЛИ Док.СуммаКВ > 0)";
	
	Возврат ТекстЗапроса;

КонецФункции

// ОБЩИЕ ФУНКЦИИ

Функция ПолучитьНепривязанныеДокументы(ДатаНач, ДатаКон, Организация, Контрагент, ВидОперации, ОтчетПосредника) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("ДатаНач",     ДатаНач);
	Запрос.Параметры.Вставить("ДатаКон",     ДатаКон);
	Запрос.Параметры.Вставить("Организация", Организация);
	Запрос.Параметры.Вставить("Контрагент",  Контрагент);
	Запрос.Параметры.Вставить("ВидОперации", ВидОперации);
	Запрос.Параметры.Вставить("ОтчетПосредника", ОтчетПосредника);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Ссылка КАК Документ,
	|	Док.Реализация КАК Реализация,
	|	Док.Статья КАК Статья,
	|	Док.ДЦ КАК ДЦ,
	|	Док.Сумма КАК СуммаПлан,
	|	Док.ПроцентКВ КАК ПроцентКВПлан,
	|	Док.СуммаКВ КАК СуммаКВПлан
	|ИЗ
	|	Документ.АСЦ_ПлановоеНачислениеКВ КАК Док
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АСЦ_ПлановоеНачислениеКВ КАК ДокКорректировка
	|		ПО Док.Ссылка = ДокКорректировка.Основание
	|			И (НЕ ДокКорректировка.ПометкаУдаления)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АСЦ_ОтчетПосредникаУпр.Продажи КАК ДокОтчетПосредника
	|		ПО (ДокОтчетПосредника.Документ = Док.Ссылка)
	|			И (НЕ ДокОтчетПосредника.Ссылка.ПометкаУдаления)
	|			И (ДокОтчетПосредника.Ссылка <> &ОтчетПосредника)
	|ГДЕ
	|	НЕ Док.ПометкаУдаления
	|	И Док.Организация = &Организация
	|	И Док.Комитент = &Контрагент
	|	И Док.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И Док.ВидОперации = &ВидОперации
	|	И ДокКорректировка.Ссылка ЕСТЬ NULL
	|	И ДокОтчетПосредника.Ссылка ЕСТЬ NULL
	|	И Док.ОтчетПосредника = ЗНАЧЕНИЕ(Документ.АСЦ_ОтчетПосредникаУпр.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Док.Дата";
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Возврат Таблица;
	
КонецФункции

Процедура ПересчитатьДокументы(ДатаНач, ДатаКон, Организация, Комитент, ДЦ, ДЦИсключения, ПроцентКВ) Экспорт
	
	Запрос = Новый ПостроительЗапроса;
	Запрос.Параметры.Вставить("ДатаНач",     ДатаНач);
	Запрос.Параметры.Вставить("ДатаКон",     ДатаКон);
	Запрос.Параметры.Вставить("Организация", Организация);
	Запрос.Параметры.Вставить("Комитент",    Комитент);
	Запрос.Параметры.Вставить("ПроцентКВ",   ПроцентКВ);
	Запрос.Параметры.Вставить("ВидОперации", Справочники.АСЦ_ВидыОперацийПлановоеНачислениеКВ.КВБанков);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.АСЦ_ПлановоеНачислениеКВ КАК Док
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АСЦ_ПлановоеНачислениеКВ КАК ДокКорректировка
	|		ПО Док.Основание = ДокКорректировка.Ссылка
	|			И (НЕ ДокКорректировка.ПометкаУдаления)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АСЦ_ОтчетПосредникаУпр.Продажи КАК ДокОтчетПосредника
	|		ПО (ДокОтчетПосредника.Документ = Док.Ссылка)
	|			И (НЕ ДокОтчетПосредника.Ссылка.ПометкаУдаления)
	|ГДЕ
	|	НЕ Док.ПометкаУдаления
	|	И Док.Организация = &Организация
	|	И Док.Комитент = &Комитент
	|	И Док.ПроцентКВ <> &ПроцентКВ
	|	И Док.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И Док.ВидОперации = &ВидОперации
	|	И ДокКорректировка.Ссылка ЕСТЬ NULL
	|	И ДокОтчетПосредника.Ссылка ЕСТЬ NULL
	|{ГДЕ
	|	Док.ДЦ.*}
	|
	|УПОРЯДОЧИТЬ ПО
	|	Док.Дата";
	
	Если ЗначениеЗаполнено(ДЦ) Тогда
		
		ЭлементОтбора = Запрос.Отбор.Добавить("ДЦ");
		ЭлементОтбора.Установить(ДЦ);
		
	ИначеЕсли ДЦИсключения <> Неопределено Тогда
		
		ЭлементОтбора = Запрос.Отбор.Добавить("ДЦ");
		ЭлементОтбора.ВидСравнения  = ВидСравнения.НеВСписке;
		ЭлементОтбора.Значение      = ДЦИсключения;
		ЭлементОтбора.Использование = Истина;
		
	КонецЕсли;	
	
	КэшБаз = Новый Соответствие;
	
	Запрос.Выполнить();
	Выборка = Запрос.Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		// Документы, которые уже откорректированы не пересчитываем
		// Исключены в запросе
		//Корректировка = ПолучитьКорректировку(Выборка.Ссылка);
		//Если ЗначениеЗаполнено(Корректировка) Тогда
		//	Продолжить;
		//КонецЕсли;	
		
		НачатьТранзакцию();
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.ПроцентКВ = ПроцентКВ;
		ДокументОбъект.СуммаКВ   = Окр(ДокументОбъект.Сумма * ПроцентКВ / 100, 2);
		ДокументОбъект.Записать();
		
		Запись = РегистрыСведений.ОтложенныеДвиженияДокументов.СоздатьМенеджерЗаписи();
		Запись.Документ      = ДокументОбъект.Ссылка;
		Запись.УзелОбмена    = ПланыОбмена.Полный.ЭтотУзел();
		Запись.ДатаДокумента = ДокументОбъект.Дата;
		Запись.Записать();
		
		База = АСЦ_ПоискОбъектов.ПолучитьОсновнуюБазу(ДокументОбъект.ДЦ, КэшБаз);
		Если База <> Неопределено Тогда
			Запись = РегистрыСведений.ИзмененныеОбъектыДляВыгрузки.СоздатьМенеджерЗаписи();
			Запись.ИспользуемаяИБ        = База;
			Запись.НастройкаСоответствия = ДокументОбъект.ВидОперации.НастройкаСоотвествияВыгрузкаАстра;
			Запись.Элемент               = ДокументОбъект.Ссылка;
		КонецЕсли;	
		
		ЗафиксироватьТранзакцию();
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = Строка(ДокументОбъект);
		Сообщение.КлючДанных = ДокументОбъект.Ссылка;
		Сообщение.Сообщить();
		
	КонецЦикла;	
	
КонецПроцедуры	

Функция ПолучитьКорректировку(ДокументСсылка, ОтчетПосредника = Неопределено) Экспорт
	
	Запрос = Новый ПостроительЗапроса;
	Запрос.Параметры.Вставить("Основание",       ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.АСЦ_ПлановоеНачислениеКВ КАК Док
	|ГДЕ
	|	Док.Основание = &Основание
	|	И НЕ Док.ПометкаУдаления
	|{ГДЕ
	|	Док.ОтчетПосредника.*}";
	
	Если ЗначениеЗаполнено(ОтчетПосредника) Тогда
		
		ЭлементОтбора = Запрос.Отбор.Добавить("ОтчетПосредника");
		ЭлементОтбора.Установить(ОтчетПосредника, Истина);
		
	КонецЕсли;	
	
	Запрос.Выполнить();
	Если Запрос.Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Возврат Запрос.Результат.Выгрузить()[0][0];
	КонецЕсли;
	
КонецФункции

Функция ПолучитьПоследнююКорректировку(ДокументСсылка) Экспорт
	
	Корректировка = ДокументСсылка; 
	Пока Истина Цикл
		
		Реузльтат = ПолучитьКорректировку(Корректировка);
		Если Реузльтат = Неопределено Тогда
			Возврат Корректировка;
		Иначе	
			Корректировка = Реузльтат;
		КонецЕсли;	
		
	КонецЦикла;
	
КонецФункции	

#КонецЕсли

