
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УстановитьСостояниеДокумента();
	
	Период.ДатаНачала    = Объект.ДатаНач;
	Период.ДатаОкончания = Объект.ДатаКон;
	
	ЗаполнитьВычисляемыеКолонки();
	
	УстановитьУсловноеОформление();
	УстановитьВидимость();
	УстановитьОграниченияЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ДатаНач = Период.ДатаНачала;
	ТекущийОбъект.ДатаКон = Период.ДатаОкончания;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьСостояниеДокумента();
	ЗаполнитьВычисляемыеКолонки();	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ПродажиСуммаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Продажи.ТекущиеДанные;
	ТекущиеДанные.ПроцентКВ = Окр(100 * ТекущиеДанные.СуммаКВ / ТекущиеДанные.Сумма, 2); 
	
КонецПроцедуры

&НаКлиенте
Процедура ПродажиПроцентКВПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Продажи.ТекущиеДанные;
	ТекущиеДанные.СуммаКВ = Окр(ТекущиеДанные.Сумма * ТекущиеДанные.ПроцентКВ / 100, 2); 
	
КонецПроцедуры

&НаКлиенте
Процедура ПродажиСуммаКВПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Продажи.ТекущиеДанные;
	
	Если ТекущиеДанные.Сумма <> 0 Тогда
		ТекущиеДанные.ПроцентКВ = Окр(100 * ТекущиеДанные.СуммаКВ / ТекущиеДанные.Сумма, 2); 
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Организация", Объект.Организация);
	СтруктураОтбора.Вставить("Комитент",    Объект.Контрагент);
	СтруктураОтбора.Вставить("ВидОперации", Объект.ВидОперации);
	СтруктураОтбора.Вставить("ПометкаУдаления", Ложь);
	
	Если ЗначениеЗаполнено(Объект.НоменклатурнаяГруппа) Тогда
		СтруктураОтбора.Вставить("НоменклатурнаяГруппа", Объект.НоменклатурнаяГруппа);
	КонецЕсли;	
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор",              СтруктураОтбора);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	ПараметрыФормы.Вставить("МножественныйВыбор", Истина);
	ПараметрыФормы.Вставить("Период",             Период);
	
	ОткрытьФорму("Документ.АСЦ_ПлановоеНачислениеКВ.ФормаВыбора", ПараметрыФормы, Элементы.Продажи,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПродажиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтруктураОтбора = Новый Структура("Документ");
	
	Для каждого Значение из ВыбранноеЗначение Цикл
		
		СтруктураОтбора.Документ = Значение;
		НайденныеСтроки = Объект.Продажи.НайтиСтроки(СтруктураОтбора);
		Если НайденныеСтроки.Количество() = 0 Тогда
			НоваяСтрока = Объект.Продажи.Добавить();
			НоваяСтрока.Документ = Значение;
			ПриИзмененииДокумента(НоваяСтрока.ПолучитьИдентификатор());
		КонецЕсли;	
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииДокумента(ИдСтроки)
	
	СтрокаТЧ = Объект.Продажи.НайтиПоИдентификатору(ИдСтроки);
	Если СтрокаТЧ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаТЧ.Документ, "Сумма, ПроцентКВ, СуммаКВ, Реализация, ДЦ, Статья, ЦФО, Контрагент, VIN, РеализацияОрганизация");
	СтрокаТЧ.Реализация = Реквизиты.Реализация;
	СтрокаТЧ.ДЦ         = Реквизиты.ДЦ;
	СтрокаТЧ.Статья     = Реквизиты.Статья;
	СтрокаТЧ.ЦФО        = Реквизиты.ЦФО;
	СтрокаТЧ.Контрагент = Реквизиты.Контрагент;
	СтрокаТЧ.VIN        = Реквизиты.VIN;
	СтрокаТЧ.РеализацияОрганизация  = Реквизиты.РеализацияОрганизация;
	
	Если ЗначениеЗаполнено(СтрокаТЧ.Документ) Тогда
		СтрокаТЧ.ДокументВыбранПовторно = ДокументВыбранПовторно(СтрокаТЧ.Документ, Объект.Ссылка);
	Иначе
		СтрокаТЧ.ДокументВыбранПовторно = Ложь;
	КонецЕсли;
	
	Если НЕ СтрокаТЧ.ДокументВыбранПовторно Тогда
		СтрокаТЧ.СуммаПлан     = Реквизиты.Сумма;
		СтрокаТЧ.ПроцентКВПлан = Реквизиты.ПроцентКВ;
		СтрокаТЧ.СуммаКВПлан   = Реквизиты.СуммаКВ;
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ПродажиДокументПриИзменении(Элемент)
	
	ПриИзмененииДокумента(Элементы.Продажи.ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиентенаСервереБезКонтекста
Функция СтруктураКолонкиДляЗагрузки()
	
	Возврат Новый Структура("Имя, Заголовок, Тип, Обязательное");
	
КонецФункции	

&НаКлиенте
Процедура ЗагрузитьИзExcel(Команда)
	
	КлючНастройки = Строка(Объект.Контрагент.УникальныйИдентификатор());
	Если ЗначениеЗаполнено(Объект.НоменклатурнаяГруппа) Тогда
		КлючНастройки = КлючНастройки + "/" + Строка(Объект.НоменклатурнаяГруппа.УникальныйИдентификатор());
	КонецЕсли;	
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("КлючНастройки", КлючНастройки);
	СтруктураПараметров.Вставить("Таблица",       Объект.Продажи);
	
	ТаблицаКолонок = Новый Массив;
	
	НоваяСтрока = СтруктураКолонкиДляЗагрузки();
	ТаблицаКолонок.Добавить(НоваяСтрока);
	НоваяСтрока.Имя       = "VIN";
	НоваяСтрока.Заголовок = "VIN";
	НоваяСтрока.Тип       = "Строка";
	
	НоваяСтрока = СтруктураКолонкиДляЗагрузки();
	ТаблицаКолонок.Добавить(НоваяСтрока);
	НоваяСтрока.Имя          = "Контрагент";
	НоваяСтрока.Заголовок    = "Покупатель";
	НоваяСтрока.Тип          = "СправочникСсылка.Контрагенты";
	НоваяСтрока.Обязательное = Истина;
	
	НоваяСтрока = СтруктураКолонкиДляЗагрузки();
	ТаблицаКолонок.Добавить(НоваяСтрока);
	НоваяСтрока.Имя          = "Сумма";
	НоваяСтрока.Заголовок    = "Сумма кредита";
	НоваяСтрока.Тип          = "Число";
	НоваяСтрока.Обязательное = Истина;
	
	НоваяСтрока = СтруктураКолонкиДляЗагрузки();
	ТаблицаКолонок.Добавить(НоваяСтрока);
	НоваяСтрока.Имя       = "ПроцентКВ";
	НоваяСтрока.Заголовок = "Процент КВ";
	НоваяСтрока.Тип       = "Число";
	
	НоваяСтрока = Новый Структура("Имя, Заголовок, Тип, Ключ");
	ТаблицаКолонок.Добавить(НоваяСтрока);
	НоваяСтрока.Имя       = "СуммаКВ";
	НоваяСтрока.Заголовок = "Сумма КВ";
	НоваяСтрока.Тип       = "Число";
	
	СтруктураПараметров.Вставить("ТаблицаКолонок", ТаблицаКолонок);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьИзExcelЗавершение", ЭтотОбъект);
	ОткрытьФорму("Обработка.АСЦ_ЗагрузкаИзExcel.Форма", СтруктураПараметров, ЭтаФорма,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзExcelЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ЗагрузитьИзExcelСервер(Результат);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьИзExcelСервер(Результат)
	
	ТаблицаДокумента = Объект.Продажи.Выгрузить();
	ТаблицаДокумента.Колонки.Добавить("КонтрагентСтр", Новый ОписаниеТипов("Строка"));
	ТаблицаДокумента.Колонки.Добавить("Найден",        Новый ОписаниеТипов("Булево"));
	
	Для каждого СтрокаТЗ из ТаблицаДокумента Цикл
		СтрокаТЗ.КонтрагентСтр = ВРег(Строка(СтрокаТЗ.Контрагент));
	КонецЦикла;	
	
	Объект.Продажи.Очистить();
	Для каждого СтрокаТЗ из Результат Цикл
		
		НоваяСтрока = Объект.Продажи.Добавить();
		НоваяСтрока.Сумма   = СтрокаТЗ.Сумма;
		НоваяСтрока.СуммаКВ = СтрокаТЗ.СуммаКВ;
		
		НайденнаяСтрока = Неопределено;
		Если ЗначениеЗаполнено(СтрокаТЗ.VIN) Тогда
			НайденнаяСтрока = ТаблицаДокумента.Найти(СтрокаТЗ.VIN, "VIN");
		КонецЕсли;	
		
		Если НайденнаяСтрока = Неопределено
			И ЗначениеЗаполнено(СтрокаТЗ.Контрагент) Тогда
			НайденнаяСтрока = ТаблицаДокумента.Найти(ВРег(СтрокаТЗ.Контрагент), "КонтрагентСтр");
		КонецЕсли;	
		
		Если НайденнаяСтрока = Неопределено Тогда
			
			НоваяСтрока.VIN = СтрокаТЗ.VIN;
			
			КонтрагентСсылка = Справочники.Контрагенты.НайтиПоНаименованию(СтрокаТЗ.Контрагент, Истина);
			Если ЗначениеЗаполнено(КонтрагентСсылка) Тогда
				НоваяСтрока.Контрагент = КонтрагентСсылка;
			Иначе	
				НоваяСтрока.Контрагент = СтрокаТЗ.Контрагент;
			КонецЕсли;	
			
			Продолжить;
			
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденнаяСтрока,, "Сумма, СуммаКВ");
		НайденнаяСтрока.Найден = Истина;
		
	КонецЦикла;
	
	Для каждого СтрокаТЗ из ТаблицаДокумента Цикл
		
		Если СтрокаТЗ.Найден Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Объект.Продажи.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
		
	КонецЦикла;	
	
	ЗаполнитьВычисляемыеКолонки();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДокументы(Команда)
	
	Если Объект.Продажи.Количество() > 0 Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьДокументыЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, "Перед заполнением табличная часть будет очищена.
		|Продолжить?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
		
	Иначе
		ЗаполнитьДокументыЗавершение(КодВозвратаДиалога.Да, Неопределено);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДокументыЗавершение(Ответ, ДопПараметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;	
	
	ЗаполнитьДокументыСервер();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокументыСервер()
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Организация", Объект.Организация);
	СтруктураОтбора.Вставить("Комитент",    Объект.Контрагент);
	СтруктураОтбора.Вставить("ВидОперации", Объект.ВидОперации);
	
	Таблица = Документы.АСЦ_ПлановоеНачислениеКВ.ПолучитьНепривязанныеДокументы(Период.ДатаНачала, Период.ДатаОкончания, 
		СтруктураОтбора, Объект.Ссылка);
	
	Объект.Продажи.Загрузить(Таблица);
	Для каждого СтрокаТЧ из Объект.Продажи Цикл
		ПриИзмененииДокумента(СтрокаТЧ.ПолучитьИдентификатор());
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПроцентПоВсем(Команда)
	
	Если ПроцентКВ = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Строки", Объект.Продажи);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьПроцентПоВсемЗавершение", ЭтотОбъект, ДопПараметры);
	ПоказатьВопрос(ОписаниеОповещения, "Заполнить процент по всем строкам?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПроцентПоВыделенным(Команда)
	
	Если ПроцентКВ = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	МассивСтрок = Новый Массив;
	Для каждого ИДСтроки из Элементы.Продажи.ВыделенныеСтроки Цикл
		МассивСтрок.Добавить(Объект.Продажи.НайтиПоИдентификатору(ИДСтроки));
	КонецЦикла;
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Строки", МассивСтрок);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьПроцентПоВсемЗавершение", ЭтотОбъект, ДопПараметры);
	ПоказатьВопрос(ОписаниеОповещения, "Заполнить процент по выделенным строкам?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПроцентПоВсемЗавершение(Ответ, ДопПараметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;	
	
	Для каждого СтрокаТЗ из ДопПараметры.Строки Цикл
		
		СтрокаТЗ.ПроцентКВ = ПроцентКВ;
		СтрокаТЗ.СуммаКВ = Окр(СтрокаТЗ.Сумма * СтрокаТЗ.ПроцентКВ / 100, 2); 
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРеквизитыОперации(ВидОперации)
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВидОперации, 
	"ФиксированнаяСебестоимость, СводныйУчет, УчетПоДоговорам, УчетПоНоменклатуре, УчетПоЦФО, ПривязыватьКРеализации, СуммаОплатыНаименование, КомитентНаименование");
	
КонецФункции	

&НаСервере
Процедура УстановитьВидимость()
	
	НастройкиПолей = Документы.АСЦ_ОтчетПосредникаУпр.ПолучитьНастройкиПолей(Объект.ВидОперации);
	Для каждого СтрокаТЧ из НастройкиПолей Цикл
		
		Реквизит = СтрокаТЧ.Реквизит;
		Если НЕ ЗначениеЗаполнено(Реквизит) Тогда
			Реквизит = СтрокаТЧ.Имя;
		КонецЕсли;	
		ЭтаФорма.Элементы[Реквизит].Видимость = СтрокаТЧ.Видимость;
		ЭтаФорма.Элементы[СтрокаТЧ.Имя].Заголовок = СтрокаТЧ.Заголовок;
		
	КонецЦикла;
	
КонецПроцедуры	

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// План не равен факту
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ПродажиСумма");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Продажи.Сумма", ВидСравненияКомпоновкиДанных.НеРавно, Новый ПолеКомпоновкиДанных("Объект.Продажи.СуммаПлан"));
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(,, Истина));
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ПродажиСуммаКВ");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Продажи.СуммаКВ", ВидСравненияКомпоновкиДанных.НеРавно, Новый ПолеКомпоновкиДанных("Объект.Продажи.СуммаКВПлан"));
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(,, Истина));
	
	// Контрагент строка
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ПродажиКонтрагент");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Продажи.КонтрагентСтрока", ВидСравненияКомпоновкиДанных.Равно, Истина);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОсобогоТекста);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(,, Истина));
	
	// Документ повторно
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ПродажиДокумент");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Продажи.ДокументВыбранПовторно", ВидСравненияКомпоновкиДанных.Равно, Истина);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОсобогоТекста);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(,, Истина));
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОграниченияВидаОперации(ВидОперации)
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Ссылка", ВидОперации);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Спр.Статья КАК Статья
	|ИЗ
	|	Справочник.АСЦ_ВидыОперацийПлановоеНачислениеКВ.ДоступныеСтатьи КАК Спр
	|ГДЕ
	|	Спр.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Спр.ЦФО КАК ЦФО
	|ИЗ
	|	Справочник.АСЦ_ВидыОперацийПлановоеНачислениеКВ.ДоступныеЦФО КАК Спр
	|ГДЕ
	|	Спр.Ссылка = &Ссылка";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("ДоступныеСтатьи", МассивРезультатов[0].Выгрузить().ВыгрузитьКолонку("Статья"));
	СтруктураРезультата.Вставить("ДоступныеЦФО",    МассивРезультатов[1].Выгрузить().ВыгрузитьКолонку("ЦФО"));
	
	Возврат СтруктураРезультата;
	
КонецФункции	

&НаСервере
Процедура УстановитьОграниченияЭлементов()
	
	СтруктураОграничений =  ПолучитьОграниченияВидаОперации(Объект.ВидОперации);
	Этаформа.Элементы.ПродажиСтатья.СписокВыбора.ЗагрузитьЗначения(СтруктураОграничений.ДоступныеСтатьи);
	Этаформа.Элементы.ПродажиСтатья.РежимВыбораИзСписка = (Этаформа.Элементы.ПродажиСтатья.СписокВыбора.Количество() > 0);
	
	Этаформа.Элементы.ПродажиЦФО.СписокВыбора.ЗагрузитьЗначения(СтруктураОграничений.ДоступныеЦФО);
	Этаформа.Элементы.ПродажиЦФО.РежимВыбораИзСписка = (Этаформа.Элементы.ПродажиЦФО.СписокВыбора.Количество() > 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	ВидОперацииПриИзмененииСервер();
	УстановитьОграниченияЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура ВидОперацииПриИзмененииСервер()
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьФактПоПлану(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьФактПоПлануЗавершение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, "Установить фактические суммы равные плановым?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьФактПоПлануЗавершение(Ответ, ДопПараметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;	
	
	Для каждого СтрокаТЗ из Объект.Продажи Цикл
		
		СтрокаТЗ.СуммаКВ   = СтрокаТЗ.СуммаКВПлан;
		СтрокаТЗ.ПроцентКВ = СтрокаТЗ.ПроцентКВПлан;
		СтрокаТЗ.Сумма     = СтрокаТЗ.СуммаПлан;
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВычисляемыеКолонки()
	
	Для каждого СтрокаТЧ из Объект.Продажи Цикл
		СтрокаТЧ.Корректировка = Документы.АСЦ_ПлановоеНачислениеКВ.ПолучитьКорректировку(СтрокаТЧ.Документ, Объект.Ссылка);
		СтрокаТЧ.КонтрагентСтрока = (ТипЗнч(СтрокаТЧ.Контрагент) = Тип("Строка"));
		
		Если ЗначениеЗаполнено(СтрокаТЧ.Документ) Тогда
			СтрокаТЧ.ДокументВыбранПовторно = ДокументВыбранПовторно(СтрокаТЧ.Документ, Объект.Ссылка);
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервереБезКонтекста
Функция ДокументВыбранПовторно(Документ, ОтчетПосредника)
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Документ", Документ);
	Запрос.Параметры.Вставить("ОтчетПосредника", ОтчетПосредника);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Док.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.АСЦ_ОтчетПосредникаУпр.Продажи КАК Док
	|ГДЕ
	|	Док.Ссылка <> &ОтчетПосредника
	|	И Док.Документ = &Документ
	|	И НЕ Док.Ссылка.ПометкаУдаления";
	
	Результат = Запрос.Выполнить();
	Возврат НЕ Результат.Пустой(); 
	
КонецФункции	

&НаСервере
Процедура ПродажиЦФОПриИзмененииНаСервере()
	
	ТекущаяСтрока = Элементы.Продажи.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Объект.Продажи.НайтиПоИдентификатору(ТекущаяСтрока);
	
	Статья = Справочники.АСЦ_ВидыОперацийПлановоеНачислениеКВ.ПолучитьСтатьюПоЦФО(Объект.ВидОперации, ТекущиеДанные.ЦФО);
	Если ЗначениеЗаполнено(Статья) Тогда
		ТекущиеДанные.Статья = Статья;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПродажиЦФОПриИзменении(Элемент)
	ПродажиЦФОПриИзмененииНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ПродажиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если Копирование 
		И ЗначениеЗаполнено(ТекущиеДанные.Документ) Тогда
		
		ДопПараметры = Новый Структура;
		ДопПараметры.Вставить("Документ", ТекущиеДанные.Документ);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПродажиКопированиеЗавершение", ЭтотОбъект, ДопПараметры);
		
		ПоказатьВопрос(ОписаниеОповещения, "Скопировать строку?" + Символы.ПС + "Будет созадан новый документ ""Плановое начисление КВ""", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
		
		Отказ = Истина;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПродажиКопированиеЗавершение(Ответ, ДопПараметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	НоваяСтрока = Объект.Продажи.Добавить();
	НоваяСтрока.Документ = СкопироватьДокумент(ДопПараметры.Документ, Объект.Дата);
	ПриИзмененииДокумента(НоваяСтрока.ПолучитьИдентификатор());
	
КонецПроцедуры	

&НаСервереБезКонтекста
Функция СкопироватьДокумент(ДокументСсылка, Дата)
	
	ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
	НовыйДокумент = ДокументОбъект.Скопировать();
	НовыйДокумент.Дата      = Дата;
	НовыйДокумент.Сумма     = 0;
	НовыйДокумент.ПроцентКВ = 0;
	НовыйДокумент.СуммаКВ   = 0;
	НовыйДокумент.ЭтоКорректировка = Ложь;
	
	НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
	Возврат НовыйДокумент.Ссылка;
	
КонецФункции	

&НаКлиенте
Процедура ПродажиКонтрагентПриИзменении(Элемент)
	
	СтрокаТЧ = Элементы.Продажи.ТекущиеДанные;
	СтрокаТЧ.КонтрагентСтрока = (ТипЗнч(СтрокаТЧ.Контрагент) = Тип("Строка"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПродажиКонтрагентНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.Контрагенты.ФормаВыбора",, Элемент,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПродажиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Значение = Неопределено;
	СтрокаТЧ = Объект.Продажи.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	Если Поле.Имя = "ПродажиКорректировка" Тогда
		Значение = СтрокаТЧ.Корректировка;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Значение) Тогда
		ПоказатьЗначение(,Значение);
	КонецЕсли;	
	
КонецПроцедуры
