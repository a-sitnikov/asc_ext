
&Вместо("ОбработкаЗаполнения")
Процедура АСЦ_ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
КонецПроцедуры

&Вместо("ОбработкаПроверкиЗаполнения")
Процедура АСЦ_ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
КонецПроцедуры

&Вместо("ПриЗаписи")
Процедура АСЦ_ПриЗаписи(Отказ)
	
	Если НЕ ВидОперации.ФормироватьКорректировки Тогда
		
		Запрос = Новый Запрос;
		Запрос.Параметры.Вставить("Ссылка", Ссылка);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Рег.ЗначениеЭлементаНастройкиОтчета КАК База
		|ИЗ
		|	Документ.АСЦ_ОтчетПосредникаУпр.Продажи КАК ДокПродажи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаОбработкиОтчетов КАК Рег
		|		ПО (Рег.ЭлементНастройкиОтчета = ЗНАЧЕНИЕ(Перечисление.ЭлементыНастройкиОтчета.ВнешняяИнформационнаяБаза))
		|			И (Рег.Организация = ДокПродажи.ДЦ)
		|			И (Рег.ШаблонДокументаБД = НЕОПРЕДЕЛЕНО)
		|ГДЕ
		|	ДокПродажи.Ссылка = &Ссылка";
		
		Таблица = Запрос.Выполнить().Выгрузить();
		Для каждого СтрокаТЗ из Таблица Цикл
			
			Запись = РегистрыСведений.ИзмененныеОбъектыДляВыгрузки.СоздатьМенеджерЗаписи();
			Запись.ИспользуемаяИБ        = СтрокаТЗ.База;
			Запись.НастройкаСоответствия = ВидОперации.НастройкаСоотвествияВыгрузкаАстра;
			Запись.Элемент               = Ссылка;
			Запись.Записать();
			
		КонецЦикла;	
		
	КонецЕсли;
	
КонецПроцедуры

&Вместо("ПередЗаписью")
Процедура АСЦ_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);

	Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
		
		Для каждого СтрокаТЧ из Продажи Цикл
			Если ЗначениеЗаполнено(СтрокаТЧ.Документ) Тогда
				Контрагент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТЧ.Документ, "Комитент");
				Если ЗначениеЗаполнено(Контрагент) Тогда
					Прервать;
				КонецЕсли;	
			КонецЕсли;	
		КонецЦикла;	
		
	КонецЕсли;	
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
	
		Для каждого СтрокаТЧ из Продажи Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрокаТЧ.Документ) Тогда
				
				ДокументОбъект = Документы.АСЦ_ПлановоеНачислениеКВ.СоздатьДокумент();
				ДокументОбъект.Дата         = Дата;
				ДокументОбъект.ВидОперации  = ВидОперации;
				ДокументОбъект.Организация  = Организация;
				ДокументОбъект.Комитент     = Контрагент;
				ДокументОбъект.ВалютаДокумента = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
				
				ДокументОбъект.ДЦ           = СтрокаТЧ.ДЦ;
				ДокументОбъект.Статья       = СтрокаТЧ.Статья;
				ДокументОбъект.ЦФО          = СтрокаТЧ.ЦФО;
				ДокументОбъект.VIN          = СтрокаТЧ.VIN;
				ДокументОбъект.Контрагент   = СтрокаТЧ.Контрагент;
				ДокументОбъект.Реализация   = СтрокаТЧ.Реализация;
				ДокументОбъект.РеализацияОрганизация   = СтрокаТЧ.РеализацияОрганизация;
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
				
				СтрокаТЧ.Документ = ДокументОбъект.Ссылка;
				
			КонецЕсли;	
			
		КонецЦикла;	
	
	КонецЕсли;
	
КонецПроцедуры

&Вместо("ОбработкаПроведения")
Процедура АСЦ_ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПолучениеДанныхУчетнойСистемыПереопределяемыйУХ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	ПараметрыПроведения = Документы[Метаданные().Имя].ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.ДополнительныеСвойства.Вставить("ПараметрыПроведения", ПараметрыПроведения);
	ПолучениеДанныхУчетнойСистемыПереопределяемыйУХ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	Для каждого ТаблицаДвижения Из ПараметрыПроведения.ТаблицыДляДвижений Цикл
		Движения[ТаблицаДвижения.Ключ].Загрузить(ТаблицаДвижения.Значение);
		Движения[ТаблицаДвижения.Ключ].Записывать = Истина;
	КонецЦикла;
		
	ПолучениеДанныхУчетнойСистемыПереопределяемыйУХ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	//ПолучениеДанныхУчетнойСистемыПереопределяемыйУХ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);	
	ПолучениеДанныхУчетнойСистемыПереопределяемыйУХ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

	Если ВидОперации.ФормироватьКорректировки Тогда
		СоздатьДокументыКорректировок();
		УдалитьЛишниеДокументыКорректировок();
	КонецЕсли;	
	
КонецПроцедуры

&Вместо("ОбработкаУдаленияПроведения")
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПолучениеДанныхУчетнойСистемыПереопределяемыйУХ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);	
	ПолучениеДанныхУчетнойСистемыПереопределяемыйУХ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);	
	ПолучениеДанныхУчетнойСистемыПереопределяемыйУХ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПолучениеДанныхУчетнойСистемыПереопределяемыйУХ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

	Если ВидОперации.ФормироватьКорректировки Тогда
		ОтменитьПроведениеДокументовКорректировок();
	КонецЕсли;	
	
КонецПроцедуры

Процедура СоздатьДокументыКорректировок() Экспорт
	
	Для каждого СтрокаТЧ из Продажи Цикл
		
		Корректировка = Документы.АСЦ_ПлановоеНачислениеКВ.ПолучитьКорректировку(СтрокаТЧ.Документ, Ссылка);
		Если Корректировка <> Неопределено Тогда
			ДокументОбъект = Корректировка.ПолучитьОбъект();			
		Иначе
			Если СтрокаТЧ.Сумма = СтрокаТЧ.СуммаПлан
				И СтрокаТЧ.СуммаКВ = СтрокаТЧ.СуммаКВПлан Тогда
				Продолжить;
			КонецЕсли;	
			ДокументОбъект = Документы.АСЦ_ПлановоеНачислениеКВ.СоздатьДокумент();
		КонецЕсли;	
		
		ДокументОбъект.Дата         = Дата;
		ДокументОбъект.ВидОперации  = ВидОперации;
		ДокументОбъект.Организация  = Организация;
		ДокументОбъект.Комитент     = Контрагент;
		ДокументОбъект.ОтчетПосредника = Ссылка;
		ДокументОбъект.ВалютаДокумента = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
		
		ДокументОбъект.ДЦ           = СтрокаТЧ.ДЦ;
		ДокументОбъект.ЦФО          = СтрокаТЧ.ЦФО;
		ДокументОбъект.Статья       = СтрокаТЧ.Статья;
		ДокументОбъект.Реализация   = СтрокаТЧ.Реализация;
		ДокументОбъект.РеализацияОрганизация = СтрокаТЧ.РеализацияОрганизация;
		ДокументОбъект.Основание    = СтрокаТЧ.Документ;
		ДокументОбъект.Контрагент   = СтрокаТЧ.Контрагент;
		
		Если ЗначениеЗаполнено(СтрокаТЧ.Документ) Тогда
			
			Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаТЧ.Документ, "Контрагент, ДоговорКонтрагента, VIN, Номенклатура, ВалютаДокумента, ДатаКредитнойСделки");
			ДокументОбъект.ДоговорКонтрагента  = Реквизиты.ДоговорКонтрагента;
			ДокументОбъект.VIN          = Реквизиты.VIN;
			ДокументОбъект.Номенклатура = Реквизиты.Номенклатура;
			ДокументОбъект.ВалютаДокумента = Реквизиты.ВалютаДокумента;
			ДокументОбъект.ДатаКредитнойСделки = Реквизиты.ДатаКредитнойСделки;
			
		КонецЕсли;
		
		ДокументОбъект.ЭтоКорректировка = Истина;
		
		ДокументОбъект.Сумма     = СтрокаТЧ.Сумма;
		ДокументОбъект.ПроцентКВ = СтрокаТЧ.ПроцентКВ;
		ДокументОбъект.СуммаКВ   = СтрокаТЧ.СуммаКВ;
		
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
	КонецЦикла;	
	
КонецПроцедуры	

Процедура ОтменитьПроведениеДокументовКорректировок() Экспорт
	
	Для каждого СтрокаТЧ из Продажи Цикл
		
		Корректировка = Документы.АСЦ_ПлановоеНачислениеКВ.ПолучитьКорректировку(СтрокаТЧ.Документ, Ссылка);
		Если Корректировка = Неопределено Тогда
			Продолжить;
		КонецЕсли;	
		
		ДокументОбъект = Корректировка.ПолучитьОбъект();			
		ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		
	КонецЦикла;	
	
КонецПроцедуры	

Процедура УдалитьЛишниеДокументыКорректировок() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПлановоеНачислениеКВ.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.АСЦ_ПлановоеНачислениеКВ КАК ПлановоеНачислениеКВ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АСЦ_ОтчетПосредникаУпр.Продажи КАК ОтчетПосредникаУпрПродажи
	|		ПО (ОтчетПосредникаУпрПродажи.Документ = ПлановоеНачислениеКВ.Основание)
	|			И (ОтчетПосредникаУпрПродажи.Ссылка = &Ссылка)
	|ГДЕ
	|	ПлановоеНачислениеКВ.ОтчетПосредника = &Ссылка
	|	И ОтчетПосредникаУпрПродажи.Ссылка ЕСТЬ NULL
	|	И НЕ ПлановоеНачислениеКВ.ПометкаУдаления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();			
		ДокументОбъект.УстановитьПометкуУдаления(Истина);
		
	КонецЦикла;
	
КонецПроцедуры	