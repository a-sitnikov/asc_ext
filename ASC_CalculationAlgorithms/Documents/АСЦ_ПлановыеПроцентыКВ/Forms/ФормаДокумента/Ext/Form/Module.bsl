
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УстановитьСостояниеДокумента();
	
	УстановитьЗаголовкиТаблицы();
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПрочитатьДатыЗакрытияПериода();
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	СтрукутраОтбора = Новый Структура("Контрагент, ПродавецАвто");
	Для каждого СтрокаТЧ из ТекущийОбъект.Проценты Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.Период) Тогда
			Продолжить;
		КонецЕсли;	
		
		ЗаполнитьЗначенияСвойств(СтрукутраОтбора, СтрокаТЧ);
		НайденныеСтроки = Таблица.НайтиСтроки(СтрукутраОтбора);
		Если НайденныеСтроки.Количество() = 0 Тогда
			НоваяСтрока = Таблица.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрукутраОтбора);
		Иначе
			НоваяСтрока = НайденныеСтроки[0];
		КонецЕсли;	
		
		Если СтрокаТЧ.ТипАвто = 1 Тогда
			НоваяСтрока.ТипАвто = "Новый";
		ИначеЕсли СтрокаТЧ.ТипАвто = 2 Тогда	
			НоваяСтрока.ТипАвто = "БУ";
		КонецЕсли;	
		
		НомерМесяца = Месяц(СтрокаТЧ.Период);
		НоваяСтрока["Процент" + НомерМесяца] = СтрокаТЧ.ПроцентКВ;
		
		
	КонецЦикла;	
	
	УстановитьДатыЗапрета();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	НомерГода = ПолучитьНомерГода(Объект.Период);
	
	ТекущийОбъект.Проценты.Очистить();
	Для каждого СтрокаТЗ из Таблица Цикл
		
		Для Счетчик = 1 По 12 Цикл
			
			ПроцентКВ = СтрокаТЗ["Процент" + Счетчик];
			Если ПроцентКВ = 0 Тогда
				Продолжить;
			КонецЕсли;	
			
			НоваяСтрока = ТекущийОбъект.Проценты.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ); 
			
			НоваяСтрока.Период = Дата(НомерГода, Счетчик, 1);
			НоваяСтрока.ПроцентКВ = ПроцентКВ;
			
			Если СтрокаТЗ.ТипАвто = "Новый" Тогда
				НоваяСтрока.ТипАвто = 1;
			ИначеЕсли СтрокаТЗ.ТипАвто = "БУ" Тогда	
				НоваяСтрока.ТипАвто = 2;
			КонецЕсли;	
			
		КонецЦикла;	
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура УстановитьЗаголовкиТаблицы()
	
	НачалоПериода = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Период, "ДатаНачала");
	Если НЕ ЗначениеЗаполнено(НачалоПериода) Тогда
		НачалоПериода = НачалоГода(ТекущаяДата());
	КонецЕсли;	
	
	НомерГода = Год(НачалоПериода);
	
	Для Счетчик = 1 По 12 Цикл
		
		Элементы["ТаблицаПроцент" + Счетчик].Заголовок = Формат(Дата(НомерГода, Счетчик, 1), "ДФ='MMMM yy'");
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТаблицаПродавецАвто");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
	"Таблица.ПродавецАвто", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст",      "По всем юр. лицам");
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветНедоступногоТекста);
	
	// Тип авто
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТаблицаТипАвто");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
	"Таблица.ТипАвто", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст",      "По всем типам");
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветНедоступногоТекста);
	
	Для Счетчик = 1 по 12 Цикл
		
		// Закрытый период
		ЭлементУО = УсловноеОформление.Элементы.Добавить();
		КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТаблицаПроцент" + Счетчик);
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Таблица.ПериодЗакрыт" + Счетчик, ВидСравненияКомпоновкиДанных.Равно, Истина);
		
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста",     ЦветаСтиля.ЦветНедоступногоТекста);
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
		
		// Измененные элементы
		ЭлементУО = УсловноеОформление.Элементы.Добавить();
		КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТаблицаПроцент" + Счетчик);
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Таблица.Изменен" + Счетчик, ВидСравненияКомпоновкиДанных.Равно, Истина);
		
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(,, Истина));
		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьДокументыИзмененные(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПересчитатьДокументыИзмененныеЗавершение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, "Пересчитать документы по измененным процентам?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьДокументыИзмененныеЗавершение(Ответ, ДопПараметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;	
	
	Если Модифицированность Тогда
		Записать();
	КонецЕсли;	
	ПересчитатьДокументыИзмененныеСервер();
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьДокументыИзмененныеСервер()
	
	ПродавцыИсключения = Новый Соответствие;
	Для каждого СтрокаТЗ из Таблица Цикл
		
		СписокЗначений = ПродавцыИсключения[СтрокаТЗ.Контрагент];
		Если СписокЗначений = Неопределено Тогда
			СписокЗначений = Новый СписокЗначений;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТЗ.ПродавецАвто) Тогда
			СписокЗначений.Добавить(СтрокаТЗ.ПродавецАвто);
			ПродавцыИсключения[СтрокаТЗ.Контрагент] = СписокЗначений;
		КонецЕсли;	
		
	КонецЦикла;	
	
	НомерГода = ПолучитьНомерГода(Объект.Период);
	Для каждого СтрокаТЗ из Таблица Цикл
		
		Для Счетчик = 1 по 12 Цикл
			
			Если СтрокаТЗ["Изменен" + Счетчик] Тогда
				
				ДатаНач = Дата(НомерГода, Счетчик, 1);
				ПроцентКВ = СтрокаТЗ["Процент" + Счетчик];
				
				Документы.АСЦ_ПлановоеНачислениеКВ.ПересчитатьДокументы(ДатаНач, КонецМесяца(ДатаНач), 
				Объект.Организация, СтрокаТЗ.Контрагент, СтрокаТЗ.ПродавецАвто, ПродавцыИсключения[СтрокаТЗ.Контрагент], СтрокаТЗ.ТипАвто, ПроцентКВ);
			КонецЕсли;	
			
		КонецЦикла;	
		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьДокументыВсе(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПересчитатьДокументыВсеЗавершение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, "Пересчитать документы по всем открытым периодам?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьДокументыВсеЗавершение(Ответ, ДопПараметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;	
	
	Если Модифицированность Тогда
		Записать();
	КонецЕсли;	
	ПересчитатьДокументыВсеСервер();
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьДокументыВсеСервер()
	
	ПродавцыИсключения = Новый Соответствие;
	Для каждого СтрокаТЗ из Таблица Цикл
		
		СписокЗначений = ПродавцыИсключения[СтрокаТЗ.Контрагент];
		Если СписокЗначений = Неопределено Тогда
			СписокЗначений = Новый СписокЗначений;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТЗ.ПродавецАвто) Тогда
			СписокЗначений.Добавить(СтрокаТЗ.ПродавецАвто);
			ПродавцыИсключения[СтрокаТЗ.Контрагент] = СписокЗначений;
		КонецЕсли;	
		
	КонецЦикла;	
	
	НомерГода = ПолучитьНомерГода(Объект.Период);
	Для каждого СтрокаТЗ из Таблица Цикл
		
		Для Счетчик = 1 по 12 Цикл
			
			Если НЕ СтрокаТЗ["ПериодЗакрыт" + Счетчик] Тогда
				
				ДатаНач = Дата(НомерГода, Счетчик, 1);
				ПроцентКВ = СтрокаТЗ["Процент" + Счетчик];
				
				Документы.АСЦ_ПлановоеНачислениеКВ.ПересчитатьДокументы(ДатаНач, КонецМесяца(ДатаНач), 
				Объект.Организация, СтрокаТЗ.Контрагент, СтрокаТЗ.ПродавецАвто, ПродавцыИсключения[СтрокаТЗ.Контрагент], СтрокаТЗ.ТипАвто, ПроцентКВ);
			КонецЕсли;	
			
		КонецЦикла;	
		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПроцентВСтроке(Команда)
	
	ТекущиеДанные = Элементы.Таблица.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяКолонка = Элементы.Таблица.ТекущийЭлемент;
	НомерКолонки = Число(СтрЗаменить(ТекущаяКолонка.Имя, "ТаблицаПроцент", ""));
	Значение = ТекущиеДанные["Процент" + НомерКолонки];
	
	Для Счетчик = НомерКолонки + 1 по 12 Цикл
		
		Если ТекущиеДанные["ПериодЗакрыт" + Счетчик] Тогда
			Продолжить;
		КонецЕсли;	
		
		ТекущиеДанные["Процент" + Счетчик] = Значение;
		ТекущиеДанные["Изменен" + Счетчик] = Истина;
		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	УстановитьЗаголовкиТаблицы();
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДатыЗакрытияПериода(Перечитать = Ложь)
	
	Если ТаблицаДатЗапретаИзмененияПериода.Количество() > 0
		И Перечитать = Ложь Тогда
		Возврат;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Раздел", ПланыВидовХарактеристик.РазделыДатЗапретаИзменения.НайтиПоНаименованию("Учет по МСФО"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР 
	|		КОГДА ДатыЗапретаИзменения.Объект ССЫЛКА Справочник.Организации 
	|			ТОГДА ДатыЗапретаИзменения.Объект 
	|		ИНАЧЕ 
	|			ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) 
	|	КОНЕЦ КАК Организация,
	|	КОНЕЦПЕРИОДА(ДатыЗапретаИзменения.ДатаЗапрета, ДЕНЬ) КАК Дата
	|ИЗ
	|	РегистрСведений.ДатыЗапретаИзменения КАК ДатыЗапретаИзменения
	|ГДЕ
	|	ДатыЗапретаИзменения.Пользователь = ЗНАЧЕНИЕ(Перечисление.ВидыНазначенияДатЗапрета.ДляВсехПользователей)
	|	И ДатыЗапретаИзменения.Раздел = &Раздел";
	
	ТаблицаДатЗапретаИзмененияПериода.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры	

&НаКлиенте
Процедура ТаблицаПродавецАвтоПриИзменении(Элемент)
	
	ТаблицаПродавецАвтоПриИзмененииСервер();
	
КонецПроцедуры

&НаСервере
Процедура ТаблицаПродавецАвтоПриИзмененииСервер()
	
	ТекущаяСтрока = Элементы.Таблица.ТекущаяСтрока;
	СтрокаТЧ = Таблица.НайтиПоИдентификатору(ТекущаяСтрока);
	
	УстановитьДатыЗапретаПоСтроке(СтрокаТЧ);
	
КонецПроцедуры


&НаСерверебезКонтекста
Функция ПолучитьНомерГода(Период)
	
	НачалоПериода = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Период, "ДатаНачала");
	Возврат Год(НачалоПериода);
	
КонецФункции

&НаКлиенте
Процедура ТаблицаПроцентПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Таблица.ТекущиеДанные;
	
	Номер = СтрЗаменить(Элемент.Имя, "ТаблицаПроцент", "");
	ТекущиеДанные["Изменен" + Номер] = Истина;
	
КонецПроцедуры


&НаКлиенте
Процедура ВыгрузитьВExcel(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьВExcelВыборФайлаЗаверешение", ЭтотОбъект);
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Диалог.Фильтр = "*.xlsx|*.xlsx";
	Диалог.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВExcelВыборФайлаЗаверешение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Адрес = ВыгрузитьВExcelНаСервере();
	
	Описание = Новый ОписаниеПередаваемогоФайла(ВыбранныеФайлы[0], Адрес);
	МассивОписаний = Новый Массив;
	МассивОписаний.Добавить(Описание);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьВExcelЗаверешение", ЭтотОбъект);
	НачатьПолучениеФайлов(ОписаниеОповещения, МассивОписаний,, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВExcelЗаверешение(ПолученныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ПолученныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//ЗапуститьПриложение(ПолученныеФайлы[0].Имя);	
	
КонецПроцедуры

&НаСервере
Функция ВыгрузитьВExcelНаСервере()
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	Макет = ДокументОбъект.ПолучитьМакет("Макет");
	
	ТабДок = Новый ТабличныйДокумент;
	
	Область = Макет.ПолучитьОбласть("Шапка");
	ТабДок.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("Строка");
	Для каждого СтрокаТЗ из Таблица Цикл
		Область.Параметры.Заполнить(СтрокаТЗ);
		Область.Параметры.КонтрагентИНН  = СтрокаТЗ.Контрагент.ИНН;
		Область.Параметры.КонтрагентКПП  = СтрокаТЗ.Контрагент.КПП;
		Область.Параметры.Организация    = СтрокаТЗ.ПродавецАвто;
		Область.Параметры.ОрганизацияИНН = СтрокаТЗ.ПродавецАвто.ИНН;
		ТабДок.Вывести(Область);
	КонецЦикла;	
	
	ИмяФайла = ПолучитьИмяВременногоФайла("xlsx");
	ТабДок.Записать(ИмяФайла, ТипФайлаТабличногоДокумента.XLSX);
	
	ДвоичныеДанные = Новый ДвоичныеДанные(ИмяФайла);
	Адрес = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);
	
	Возврат Адрес;
	
КонецФункции


&НаКлиенте
Процедура ЗагрузитьИзExcel(Команда)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Фильтр = "*.xlsx|*.xlsx";
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьИзExcelЗаверешение", ЭтотОбъект);
	НачатьПомещениеФайлов(ОписаниеОповещения, , Диалог, Истина, Новый УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзExcelЗаверешение(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ПомещенныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗагрузитьИзExcelНаСервере(ПомещенныеФайлы[0].Хранение);	
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьИзExcelНаСервере(Адрес) Экспорт
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(Адрес);
	ИмяФайла = ПолучитьИмяВременногоФайла("xlsx");
	ДвоичныеДанные.Записать(ИмяФайла);
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.Прочитать(ИмяФайла,, ТипФайлаТабличногоДокумента.XLSX);
	
	СтараяТаблица = Таблица.Выгрузить();
	
	Таблица.Очистить();
	СтруктураОтбора = Новый Структура("Контрагент, ПродавецАвто, ТипАвто");
	Для Счетчик = 3 По ТабДок.ВысотаТаблицы Цикл
		
		ОбластьИНН = ТабДок.Область(Счетчик, 2);
		ОбластьКПП = ТабДок.Область(Счетчик, 3);
		ОбластьПродавецАвтоИНН  = ТабДок.Область(Счетчик, 5);
		ОбластьТипАвто  = ТабДок.Область(Счетчик, 6);
		
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Контрагент = АСЦ_ПоискОбъектов.НайтиКонтрагента("", СокрЛП(ОбластьИНН.Текст), СокрЛП(ОбластьКПП.Текст),, Истина);
		Если ЗначениеЗаполнено(ОбластьПродавецАвтоИНН.Текст) Тогда
			НоваяСтрока.ПродавецАвто = Справочники.Организации.НайтиПоРеквизиту("ИНН", ОбластьПродавецАвтоИНН.Текст);
		КонецЕсли;	
		
		НоваяСтрока.ТипАвто = ОбластьТипАвто.Текст;
		
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, НоваяСтрока);
		СтараяСтрока = СтараяТаблица.НайтиСтроки(СтруктураОтбора);
		
		Для Колонка = 1 по 12 Цикл
			
			Область = ТабДок.Область(Счетчик, Колонка + 6);
			НоваяСтрока["Процент" + Колонка] = АСЦ_ОбщийМодуль.вЧисло(Область.Текст);
			Если СтараяСтрока.Количество() <> 0 Тогда
				НоваяСтрока["Изменен" + Колонка] = (НоваяСтрока["Процент" + Колонка] <> СтараяСтрока[0]["Процент" + Колонка]);
			Иначе
				НоваяСтрока["Изменен" + Колонка] = Истина;
			КонецЕсли;	
			
		КонецЦикла;	
		
	КонецЦикла;	
	
	УстановитьДатыЗапрета();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДатыЗапрета()
	
	Для каждого СтрокаТЧ из Таблица Цикл
		УстановитьДатыЗапретаПоСтроке(СтрокаТЧ);
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервере
Процедура УстановитьДатыЗапретаПоСтроке(СтрокаТЧ)
	
	СтрокиДатЗапрета = ТаблицаДатЗапретаИзмененияПериода.НайтиСтроки(Новый Структура("Организация", СтрокаТЧ.ПродавецАвто));
	Если СтрокиДатЗапрета.Количество() = 0 Тогда
		СтрокиДатЗапрета = ТаблицаДатЗапретаИзмененияПериода.НайтиСтроки(Новый Структура("Организация", Справочники.Организации.ПустаяСсылка()));
	КонецЕсли;	
	
	Если СтрокиДатЗапрета.Количество() > 0 Тогда
		
		СтрокаТЧ.ДатаЗапрета = СтрокиДатЗапрета[0].Дата;
		
		Счетчик = 1;
		Период = НачалоГода(Объект.Период.ДатаНачала);
		Пока Период < СтрокаТЧ.ДатаЗапрета Цикл
			СтрокаТЧ["ПериодЗакрыт" + Счетчик] = Истина;
			Счетчик = Счетчик + 1;
			Период = ДобавитьМесяц(Период, 1);
		КонецЦикла;	
		
	КонецЕсли;	
	
КонецПроцедуры